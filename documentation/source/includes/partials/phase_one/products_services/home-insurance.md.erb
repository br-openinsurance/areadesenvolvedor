<h2 id="api-home-insurance">Home-insurance v1.2.0 </h2>
<%= partial "./includes/alerta/alerta" %>
### Obtém informações de seguros residenciais

<a id="opIdgetResidentialInsurance"></a>
**Especificação em OAS 3.0** </br>
<a href="files/swagger/home-insurance.yaml" download="home-insurance.yaml">Download da Especificação</a> <br>
**Detalhamento Técnico** </br>
<a href="files/docs/home-insurance.docx" download="home-insurance.docx">Download do Detalhamento Técnico</a> <br>


Base URLs:

**Servidor de Produção** </br>
* <a href="https://api.organizacao.com.br/open-insurance/products-services/v1">https://api.organizacao.com.br/open-insurance/products-services/v1</a><br>
**Servidor de Homologação** </br>
* <a href="https://api.organizacao.com.br/open-insurance/products-services/v1">https://api.organizacao.com.br/open-insurance/products-services/v1</a><br>

Web: <a href="https://www.gov.br/susep/">Governança do Open Insurance Brasil - Especificações</a> 

Release Notes:

- <a href="./1.2.6.html#residencial-home-insurance-v1.1.0">22/08/2022</a>
- <a href="./1.3.0.html#residencial-home-insurance">03/03/2023 </a>


<h3 id="opIdgetResidentialInsurance">Obtém informações de seguros residenciais</h3>

> Code samples

```python
import requests
headers = {
  'Accept': 'application/json',
  'cache-control': 'string',
  'Content-Security-Policy': 'string',
  'content-Type': 'string',
  'Strict-Transport-Security': 'string',
  'X-Content-Type-Options': 'string',
  'X-Frame-Options': 'string'
}

r = requests.get('https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea/{commercializationArea}', headers = headers)

print(r.json())

```

```java
URL obj = new URL("https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea/{commercializationArea}");
HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");
int responseCode = con.getResponseCode();
BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream()));
String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();
System.out.println(response.toString());

```

`GET /home-insurance/commercializationArea/{commercializationArea}`

Obtém informações de seguros redidenciais

<h3 id="obtém-informações-de-seguros-residenciais-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|cache-control|header|string|true|Controle de cache para evitar que informações confidenciais sejam armazenadas em cache.|
|Content-Security-Policy|header|string|false|Campo para proteção contra ataques clickjack do estilo - drag and drop.|
|content-Type|header|string|false|Especificar o tipo de conteúdo da resposta.|
|Strict-Transport-Security|header|string|false|Campo para exigir conexões por HTTPS e proteger contra certificados falsificados.|
|X-Content-Type-Options|header|string|false|Campo para evitar que navegadores executem a detecção de MIME e interpretem respostas como HTML de forma inadequada.|
|X-Frame-Options|header|string|false|Campo indica se o navegador deve ou não renderizar um frame.|
|page|query|integer|false|Número da página que está sendo requisitada (o valor da primeira página é 1).|
|page-size|query|integer|false|Quantidade total de registros por páginas.|
|commercializationArea|path|string|true|Area de comercialização.|

> Example responses

> 200 Response

```json
{
  "data": {
    "brand": {
      "name": "EMPRESA A seguros",
      "companies": [
        {
          "name": "ABCDE SEGUROS",
          "cnpjNumber": "12345678901234",
          "products": [
            {
              "name": "RESIDENCIAL XPTO",
              "code": "0000-0",
              "coverages": [
                {
                  "coverageType": "IMOVEL_BASICA",
                  "coverageDetail": "Cobertura especial para escritório residenciais",
                  "allowApartPurchase": false,
                  "coverageAttributes": {
                    "minLMI": {},
                    "maxLMI": {},
                    "minDeductibleAmount": {},
                    "insuredMandatoryParticipationPercentage": 0
                  }
                }
              ],
              "propertyCharacteristics": [
                {
                  "propertyType": "CASA",
                  "propertyBuildType": "ALVENARIA",
                  "propertyUsageType": "HABITUAL",
                  "destinationInsuredImportance": "PREDIO"
                }
              ],
              "propertyZipCode": "1311000",
              "protective": true,
              "additional": [
                "SORTEIO_GRATUITO"
              ],
              "additionalOthers": "string",
              "assistanceServices": [
                {
                  "assistanceServicesPackage": "ATE_10_SERVICOS",
                  "complementaryAssistanceServicesDetail": "reboque pane seca",
                  "chargeTypeSignaling": "GRATUITA"
                }
              ],
              "microInsurance": true,
              "termsAndConditions": [
                {
                  "susepProcessNumber": "XXXXX.XXXXXX/XXXX-XX",
                  "definition": "https://openinsurance.com.br/aaa"
                }
              ],
              "validity": [
                {
                  "term": "ANUAL",
                  "termOthers": "string"
                }
              ],
              "customerServices": [
                "LIVRE_ESCOLHA"
              ],
              "premiumRates": [
                "string"
              ],
              "premiumPayments": [
                {
                  "paymentMethod": "CARTAO_CREDITO",
                  "paymentMethodDetail": "string",
                  "paymentType": "PAGAMENTO_UNICO"
                }
              ],
              "minimumRequirements": [
                {
                  "contractingType": "COLETIVO",
                  "contractingMinRequirement": "https://openinsurance.com.br/aaa"
                }
              ],
              "targetAudiences": [
                "PESSOA_NATURAL"
              ]
            }
          ]
        }
      ]
    }
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea",
    "first": "https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea",
    "prev": "https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea",
    "next": "https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea",
    "last": "https://api.organizacao.com.br/open-insurance/products-services/v1/home-insurance/commercializationArea"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-informações-de-seguros-residenciais-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados dos Seguros Residenciais|[ResponseHomeInsuranceList](#schemaresponsehomeinsurancelist)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorhomeinsurance)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerrorhomeinsurance)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorhomeinsurance)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorhomeinsurance)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorhomeinsurance)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorhomeinsurance)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorhomeinsurance)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presente.|[ResponseError](#schemaresponseerrorhomeinsurance)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorhomeinsurance)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorhomeinsurance)|
|default|Default|Dados dos Seguros Residenciais|[ResponseHomeInsuranceList](#schemaresponsehomeinsurancelist)|

<aside class="success">
This operation does not require authentication
</aside>
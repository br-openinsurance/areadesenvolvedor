<h1 id="api-insurance-pension-plan">API - Pension Plan v1.1.0</h1>
<%= partial "./includes/alerta/alerta" %>
> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

**Especificação em OAS 3.0** </br>
<a href="files/swagger/insurance-pension-plan.yaml" download="insurance-pension-plan.yaml">Download da Especificação</a>

**Detalhamento Técnico** </br>
<a href="files/docs/insurance-pension-plan.docx" download="insurance-pension-plan.docx">Download do Detalhamento Técnico</a>

API de Previdência Risco do Open Insurance Brasil - Fase 2.

Traz informações de contrato, contribuições e benefício, portabilidade, resgate e sinistro mantidas nas instituições transmissoras por seus clientes.

Não possui segregação entre pessoa natural e pessoa jurídica.

Requer consentimento do cliente para todos os `endpoints`.

Base URLs:

**Servidor de Produção** </br>
* <a href="https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1">https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1</a>

**Servidor de Homologação** </br>
* <a href="https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1">https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1</a>

Web: <a href="https://www.gov.br/susep">Governança do Open Insurance Brasil</a> 

<h2 id="insurance-pension-plan-orientacoes-insurance-pension-plan">Orientações</h2>

A `Role`  do diretório de participantes relacionada à presente API é a `DADOS`.

Para todos os `endpoints` desta API é previsto o envio de um `token` através do header `Authorization`.

Este `token` deverá estar relacionado ao consentimento (identificado pelo `consentId`) mantido na instituição transmissora dos dados, o qual permitirá a pesquisa e retorno, na API em questão, dos 
dados relacionados ao `consentId` específico.

Os dados serão devolvidos na consulta desde que o `consentId` relacionado corresponda a um consentimento válido e com o status `AUTHORISED`.

É também necessário que o recurso em questão (conta, contrato, etc.) esteja disponível na instituição transmissora (ou seja, sem boqueios de qualquer natureza e com todas as autorizações/consentimentos já autorizados).

Além disso, as `permissions` necessárias deverão ter sido solicitadas quando da criação do consentimento relacionado.

Relacionamos a seguir as `permissions` necessárias para a consulta de dados em cada `endpoint` da presente API.

<h2 id="permissions-necessarias-para-a-api-insurance-pension-plan">Permissions necessárias para a API InsurancePensionPlan</h2>

Para cada um dos `paths` desta API, além dos escopos (`scopes`) indicados existem `permissions` que deverão ser observadas:

### `/contracts`
  - permissions:
    - GET: **PENSION_PLAN_READ**

### `/{pensionIdentification}/contract-info`
  - permissions:
    - GET: **PENSION_PLAN_CONTRACTINFO_READ**

### `/{pensionIdentification}/movements`
  - permissions:
    - GET: **PENSION_PLAN_MOVEMENTS_READ**

### `/{pensionIdentification}/portabilites`
  - permissions:
    - GET: **PENSION_PLAN_PORTABILITIES_READ**

### `/{pensionIdentification}/withdrawals`
  - permissions:
    - GET: **PENSION_PLAN_WITHDRAWALS_READ**

### `/{pensionIdentification}/claim`
  - permissions:
    - GET: **PENSION_PLAN_CLAIM**


### Authentication

- oAuth2 authentication. Fluxo OAuth necessário para que a receptora tenha acesso aos dados na instituição transmissora. Inclui o processo de redirecionamento e autenticação do usuário a que se referem os dados.

    - Flow: authorizationCode
    - Authorization URL = [https://authserver.example/authorization](https://authserver.example/authorization)
    - Token URL = [https://authserver.example/token](https://authserver.example/token)

|Scope|Scope Description|
|---|---|
|insurance-pension-plan|Escopo necessário para acesso à API. O controle dos endpoints específicos é feito via permissions.|

Dados transacionais de Previdência Risco

<h2 id="obtem-a-lista-de-identificacao-de-insurance-pension-plan">Obtem a lista de identificação de InsurancePensionPlan</h2>

<a id="opIdgetInsurancePensionPlan"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/contracts");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/contracts", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/contracts")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-pension-plan/contracts`

Método para obter a lista de identificação de InsurancePensionPlan

<h3 id="obtem-a-lista-de-identificação-de-insurancepensionplan-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|page|query|integer(int32)|false|Número da página que está sendo requisitada (o valor da primeira página é 1).|
|page-size|query|integer(int32)|false|Quantidade total de registros por páginas.|

> Example responses

> 200 Response

```json
{
  "data": {
    "brand": {
      "name": "EMPRESA A SEGUROS",
      "companies": [
        {
          "companyName": "Empresa da Organização A",
          "cnpjNumber": "12345678901234",
          "contracts": [
            {
              "productName": "string",
              "pensionIdentification": "42"
            }
          ]
        }
      ]
    }
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtem-a-lista-de-identificação-de-insurancepensionplan-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsurancePensionPlan obtidos com sucesso|[ResponseInsurancePensionPlan](#schemaresponseinsurancepensionplan)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorinsurancepensionplan)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-pension-plan )
</aside>

<h2 id="obtem-as-informacoes-gerais-do-contrato-identificado-por-pension-identification-insurance-pension-plan">Obtém as informações gerais do contrato identificado por {pensionIdentification}</h2>

<a id="opIdgetInsurancePensionPlanpensionIdentificationContractInfo"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/contract-info");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/contract-info", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/contract-info")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-pension-plan/{pensionIdentification}/contract-info`

Método para obter as informações gerais do contrato

<h3 id="obtém-as-informações-gerais-do-contrato-identificado-por-{pensionidentification}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|pensionIdentification|path|string|true|Código único a ser definido pela sociedade|

> Example responses

> 200 Response

```json
{
  "data": {
    "pensionIdentification": "42",
    "contractingType": "INDIVIDUAL",
    "planType": "AVERBADO",
    "documents": [
      {
        "certificateId": "67",
        "contractId": "681",
        "effectiveDateStart": "2021-05-21",
        "effectiveDateEnd": "2021-05-21",
        "proposalId": "987",
        "insureds": [
          {
            "documentType": "CPF",
            "documentTypeOthers": "OUTROS",
            "documentNumber": "12345678910",
            "name": "Juan Kaique Cláudio Fernandes",
            "birthDate": "2021-05-21",
            "gender": "MASCULINO",
            "postCode": "17500001",
            "email": "nome@br.net",
            "townName": "Rio de Janeiro",
            "countrySubDivision": "RJ",
            "countryCode": "BRA",
            "address": "Av Naburo Ykesaki, 1270",
            "addressAdditionalInfo": "Fundos"
          }
        ],
        "beneficiary": [
          {
            "documentNumber": "12345678910",
            "documentType": "CPF",
            "documentTypeOthers": "OUTROS",
            "name": "Juan Kaique Cláudio Fernandes",
            "participationPercentage": "10.00"
          }
        ],
        "intermediary": [
          {
            "type": "CORRETOR",
            "documentNumber": "12345678910",
            "intermediaryId": "12097",
            "documentType": "CPF",
            "documentTypeOthers": "OUTROS",
            "name": "Empresa A",
            "postCode": "17500001",
            "townName": "Rio de Janeiro",
            "countrySubDivision": "RJ",
            "countryCode": "BRA",
            "address": "Av Naburo Ykesaki, 1270",
            "addressAdditionalInfo": "Fundos"
          }
        ],
        "plans": [
          {
            "coverages": [
              {
                "coverageCode": "1999",
                "susepProcessNumber": "12345",
                "structureModality": "BENEFICIO_DEFINIDO",
                "benefitAmount": {
                  "amount": "2000.00",
                  "unit": {
                    "code": "R$",
                    "description": "BRL"
                  }
                },
                "rentsInterestRate": "10.00",
                "periodicity": "MENSAL",
                "coverageName": "string",
                "lockedPlan": false,
                "termStartDate": "2021-05-21",
                "termEndDate": "2021-05-21",
                "financialRegime": "REPARTICAO_SIMPLES",
                "benefitPaymentMethod": "UNICO",
                "biometricTable": "1  - Mortalidade Geral / Beneficiário - AT49 M",
                "pricingMethod": "POR_IDADE",
                "pricingMethodDescription": "OUTROS",
                "events": [
                  {
                    "eventType": "INVALIDEZ",
                    "eventTypeOthers": "OUTROS",
                    "eventInfo": {}
                  }
                ],
                "updateIndex": "IPC-FGV",
                "updateIndexDescription": "OUTROS",
                "updatePeriodicity": "PERIDIOCIDADE",
                "updatePeriodicityUnit": "DIA",
                "updateIndexLagging": 1,
                "contributionAmount": {
                  "amount": "2000.00",
                  "unit": {
                    "code": "R$",
                    "description": "BRL"
                  }
                },
                "chargedAmount": {
                  "amount": "2000.00",
                  "unit": {
                    "code": "R$",
                    "description": "BRL"
                  }
                }
              }
            ],
            "grace": [
              {
                "graceType": "PORTABILIDADE",
                "gracePeriod": 4,
                "gracePeriodicity": "DIA",
                "dayIndicator": "UTEIS",
                "gracePeriodStart": "2021-05-21",
                "gracePeriodEnd": "2021-05-21",
                "gracePeriodBetween": 6,
                "gracePeriodBetweenType": "DIA"
              }
            ]
          }
        ]
      }
    ]
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-as-informações-gerais-do-contrato-identificado-por-{pensionidentification}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsurancePensionPlanContractInfo obtidos com sucesso|[ResponseInsurancePensionPlanContractInfo](#schemaresponseinsurancepensionplancontractinfo)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorinsurancepensionplan)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-pension-plan )
</aside>

<h2 id="obtem-os-dados-de-contribuições-do-contrato-identificado-por-pension-identification-insurance-pension-plan">Obtém os dados de contribuições do contrato identificado por {pensionIdentification}</h2>

<a id="opIdgetInsurancePensionPlanpensionIdentificationMovements"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/movements");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/movements", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/movements")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-pension-plan/{pensionIdentification}/movements`

Método para obter os dados de contribuições do contrato.

<h3 id="obtém-os-dados-de-contribuições-do-contrato-identificado-por-{pensionidentification}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|pensionIdentification|path|string|true|Código único a ser definido pela sociedade|

> Example responses

> 200 Response

```json
{
  "data": {
    "movementContributions": [
      {
        "contributionAmount": {
          "amount": "2000.00",
          "unit": {
            "code": "R$",
            "description": "BRL"
          }
        },
        "contributionPaymentDate": "2021-05-21",
        "contributionExpirationDate": "2021-05-21",
        "chargedInAdvanceAmount": {
          "amount": "2000.00",
          "unit": {
            "code": "R$",
            "description": "BRL"
          }
        },
        "periodicity": "MENSAL"
      }
    ],
    "movementBenefits": [
      {
        "benefitAmount": {
          "amount": "2000.00",
          "unit": {
            "code": "R$",
            "description": "BRL"
          }
        },
        "benefitPaymentDate": "2021-05-21"
      }
    ]
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-os-dados-de-contribuições-do-contrato-identificado-por-{pensionidentification}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsurancePensionPlanMovements obtidos com sucesso|[ResponseInsurancePensionPlanMovements](#schemaresponseinsurancepensionplanmovements)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorinsurancepensionplan)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-pension-plan )
</aside>

<h2 id="obtem-os-dados-de-portabilidades-do-contrato-identificada-por-pension-identification-insurance-pension-plan">Obtém os dados de portabilidades do contrato identificada por {pensionIdentification}</h2>

<a id="opIdgetInsurancePensionPlanpensionIdentificationPortabilities"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/portabilities");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/portabilities", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/portabilities")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-pension-plan/{pensionIdentification}/portabilities`

Método para obter os dados de portabilidades associadas ao contrato

<h3 id="obtém-os-dados-de-portabilidades-do-contrato-identificada-por-{pensionidentification}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|pensionIdentification|path|string|true|Código único a ser definido pela sociedade|
|page|query|integer(int32)|false|Número da página que está sendo requisitada (o valor da primeira página é 1).|
|page-size|query|integer(int32)|false|Quantidade total de registros por páginas.|

> Example responses

> 200 Response

```json
{
  "data": {
    "hasOccurredPortability": true,
    "portabilityInfo": [
      {
        "direction": "ENTRADA",
        "type": "PARCIAL",
        "amount": {
          "amount": "2000.00",
          "unit": {
            "code": "R$",
            "description": "BRL"
          }
        },
        "requestDate": "2022-05-16T00:00:00.000Z",
        "liquidationDate": "2022-05-16T00:00:00.000Z",
        "chargingValue": {
          "amount": "2000.00",
          "unit": {
            "code": "R$",
            "description": "BRL"
          }
        },
        "sourceEntity": "string",
        "targetEntity": "string",
        "susepProcess": "12345"
      }
    ]
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-os-dados-de-portabilidades-do-contrato-identificada-por-{pensionidentification}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsurancePensionPlanPortabilities obtidos com sucesso|[ResponseInsurancePensionPlanPortabilities](#schemaresponseinsurancepensionplanportabilities)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorinsurancepensionplan)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-pension-plan )
</aside>

<h2 id="obtem-os-dados-de-resgates-do-contrato-identificado-por-pension-identification-insurance-pension-plan">Obtém os dados de resgates do contrato identificado por {pensionIdentification}</h2>

<a id="opIdgetInsurancePensionPlanpensionIdentificationWithdrawals"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/withdrawals");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/withdrawals", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/withdrawals")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-pension-plan/{pensionIdentification}/withdrawals`

Método para obter os dados de resgates associados ao contrato

<h3 id="obtém-os-dados-de-resgates-do-contrato-identificado-por-{pensionidentification}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|pensionIdentification|path|string|true|Código único a ser definido pela sociedade|
|page|query|integer(int32)|false|Número da página que está sendo requisitada (o valor da primeira página é 1).|
|page-size|query|integer(int32)|false|Quantidade total de registros por páginas.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "withdrawalOccurence": true,
      "type": "PARCIAL",
      "requestDate": "2022-05-16T00:00:00.000Z",
      "amount": {
        "amount": "2000.00",
        "unit": {
          "code": "R$",
          "description": "BRL"
        }
      },
      "liquidationDate": "2022-05-16T00:00:00.000Z",
      "postedChargedAmount": {
        "amount": "2000.00",
        "unit": {
          "code": "R$",
          "description": "BRL"
        }
      },
      "nature": "RESGATE_REGULAR"
    }
  ],
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-os-dados-de-resgates-do-contrato-identificado-por-{pensionidentification}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsurancePensionPlanWithdrawals obtidos com sucesso|[ResponseInsurancePensionPlanWithdrawals](#schemaresponseinsurancepensionplanwithdrawals)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorinsurancepensionplan)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-pension-plan )
</aside>

<h2 id="obtem-os-dados-de-sinistro-do-contrato-identificado-por-pension-identification-insurance-pension-plan">Obtém os dados de sinistro do contrato identificado por {pensionIdentification}</h2>

<a id="opIdgetInsurancePensionPlanpensionIdentificationPeople"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/claim");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/claim", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan/string/claim")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-pension-plan/{pensionIdentification}/claim`

Método para obter os dados de sinistro associados ao contrato

<h3 id="obtém-os-dados-de-sinistro-do-contrato-identificado-por-{pensionidentification}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|pensionIdentification|path|string|true|Código único a ser definido pela sociedade|
|page|query|integer(int32)|false|Número da página que está sendo requisitada (o valor da primeira página é 1).|
|page-size|query|integer(int32)|false|Quantidade total de registros por páginas.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "beneficiaryDocument": "12345678910",
      "beneficiaryDocumentType": "CPF",
      "beneficiaryName": "NOME BENEFICIARIO",
      "beneficiaryCategory": "SEGURADO",
      "beneficiaryBirthDate": "2021-05-21",
      "incomeType": "PAGAMENTO_UNICO",
      "incomeTypeDetails": "Descrição do Tipo de Renda",
      "reversedIncome": false,
      "incomeAmount": {
        "amount": "2000.00",
        "unit": {
          "code": "R$",
          "description": "BRL"
        }
      },
      "paymentTerms": "PRAZO",
      "benefitAmount": 2,
      "grantedDate": "2021-05-21",
      "monetaryUpdateIndex": "IPC-FGV",
      "lastUpdateDate": "2021-05-21"
    }
  ],
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-pension-plan/v1/insurance-pension-plan"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-os-dados-de-sinistro-do-contrato-identificado-por-{pensionidentification}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsurancePensionPlanClaim obtidos com sucesso|[ResponseInsurancePensionPlanClaim](#schemaresponseinsurancepensionplanclaim)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerrorinsurancepensionplan)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerrorinsurancepensionplan)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-pension-plan )
</aside>
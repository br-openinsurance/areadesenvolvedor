<!-- Generator: Widdershins v4.0.1 -->

# API - Customers v1.0.0

> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

**Especificação em OAS 3.0** </br>
<a href="files/swagger/customers.yaml" download="customers.yaml">Download da Especificação</a>

**Detalhamento Técnico** </br>
<a href="files/docs/customers.docx" download="customers.docx">Download do Detalhamento Técnico</a>

API de dados cadastrais de clientes do Open Insurance Brasil – Fase 2.

API que retorna os dados cadastrais de clientes e de seus representantes, incluindo dados de identificação, de qualificação, informações sobre representantes cadastrados e sobre o relacionamento do cliente com a instituição transmissora dos dados.

Possui segregação entre pessoa natural e pessoa jurídica.

Requer consentimento do cliente para todos os `endpoints`.

<h2 id="api-customers-v100-orientacoes">Orientações</h2>

A `Role`  do diretório de participantes relacionada à presente API é a `DADOS`.

Para todos os `endpoints` desta API é previsto o envio de um `token` através do header `Authorization`.

Este token deverá estar relacionado ao consentimento (`consentId`) mantido na instituição transmissora dos dados, o qual permitirá a pesquisa e retorno, na API em questão, dos
dados relacionados ao `consentId` específico relacionado.

Os dados serão devolvidos na consulta desde que o `consentId` relacionado corresponda a um consentimento válido e com o status `AUTHORISED`.

É também necessário que o recurso em questão (conta, contrato, etc) esteja disponível na instituição transmissora (ou seja, sem boqueios de qualquer natureza e com todas as autorizações/consentimentos já autorizados).

Além disso as `permissions` necessárias deverão ter sido solicitadas quando da criação do consentimento relacionado (`consentId`).

Relacionamos a seguir as `permissions` necessárias para a consulta de dados em cada `endpoint` da presente API.

<h2 id="api-customers-v100-permissions-necessarias-para-a-api-customers">Permissions necessárias para a API Customers</h2>

Para cada um dos paths desta API, além dos escopos (`scopes`) indicados existem `permissions` que deverão ser observadas:

### `/personal/identifications`
  - permissions:
    - GET: **CUSTOMERS_PERSONAL_IDENTIFICATIONS_READ**
### `/personal/qualifications`
  - permissions: **CUSTOMERS_PERSONAL_QUALIFICATION_READ**
### `/personal/complimentary-information`
  - permissions:
    - GET: **CUSTOMERS_PERSONAL_ADITTIONALINFO_READ**
### `/business/identifications`
  - permissions:
    - GET: **CUSTOMERS_BUSINESS_IDENTIFICATIONS_READ**
### `/business/qualifications`
  - permissions:
    - GET: **CUSTOMERS_BUSINESS_QUALIFICATION_READ**
### `/business/complimentary-information`
  - permissions:
    - GET: **CUSTOMERS_BUSINESS_ADITTIONALINFO_READ**

Base URLs:

Servidor de Produção </br>
* <a href="https://api.seguro.com.br/open-insurance/customers/v1">https://api.seguro.com.br/open-insurance/customers/v1</a>

Servidor de Homologação </br>
* <a href="https://apih.seguro.com.br/open-insurance/customers/v1">https://apih.seguro.com.br/open-insurance/customers/v1</a>

Email: <a href="mailto:gt-interfaces@openinsurancebr.org">Governança do Open Insurance Brasil - Especificações</a>

Web: <a href="https://openinsurance.susep.gov.br/documentos-de-referencia/">Governança do Open Insurance Brasil - Especificações</a>

License: <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache 2.0</a>

### Authentication

- oAuth2 authentication. Fluxo OAuth necessário para que a receptora tenha acesso aos dados na instituição transmissora. Requer o processo de redirecionamento e autenticação do usuário a que se referem os dados.

    - Flow: authorizationCode
    - Authorization URL = [https://authserver.example/authorization](https://authserver.example/authorization)
    - Token URL = [https://authserver.example/token](https://authserver.example/token)

|Scope|Scope Description|
|---|---|
|customers|Escopo necessário para acesso à API Customers. O controle dos endpoints específicos é feito via permissions.|

<h2 id="api-customers-v100-obtem-os-registros-de-identificacao-da-pessoa-natural">Obtém os registros de identificação da pessoa natural.</h2>

<a id="opIdcustomersGetPersonalIdentifications"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.seguro.com.br/open-insurance/customers/v1/personal/identifications");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.seguro.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/customers/v1/personal/identifications", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.seguro.com.br/open-insurance/customers/v1/personal/identifications")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /personal/identifications`

Método para obter os registros de identificação da pessoa natural mantidos na instituição transmissora.

<h3 id="obtém-os-registros-de-identificação-da-pessoa-natural.-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "updateDateTime": "2021-05-21T08:30:00Z",
      "personalId": "578-psd-71md6971kjh-2d414",
      "brandName": "Organização A",
      "civilName": "Juan Kaique Cláudio Fernandes",
      "socialName": "string",
      "cpfNumber": "string",
      "companyInfo": {
        "cnpjNumber": "01773247000563",
        "name": "Empresa da Organização A"
      },
      "documents": [
        {
          "type": "CNH",
          "number": "15291908",
          "expirationDate": "2023-05-21",
          "issueLocation": "string"
        }
      ],
      "hasBrazilianNationality": false,
      "otherNationalitiesInfo": "CAN",
      "otherDocuments": {
        "type": "SOCIAL SEC",
        "number": "15291908",
        "country": "string",
        "expirationDate": "2023-05-21"
      },
      "contact": {
        "postalAddresses": [
          {
            "address": "Av Naburo Ykesaki, 1270",
            "additionalInfo": "Fundos",
            "districtName": "Centro",
            "townName": "Marília",
            "countrySubDivision": "SP",
            "postCode": "17500001",
            "country": "BRA"
          }
        ],
        "phones": [
          {
            "countryCallingCode": "55",
            "areaCode": "19",
            "number": "29875132",
            "phoneExtension": "932"
          }
        ],
        "emails": [
          {
            "email": "nome@br.net"
          }
        ]
      },
      "civilStatusCode": "SOLTEIRO",
      "sex": "FEMININO",
      "birthDate": "2021-05-21",
      "filiation": {
        "type": "PAI",
        "civilName": "Marcelo Cláudio Fernandes"
      },
      "identificationDetails": {
        "civilName": "Juan Kaique Cláudio Fernandes",
        "cpfNumber": "string"
      }
    }
  ],
  "links": {
    "self": "https://api.seguro.com.br/open-insurance/customer/v1",
    "first": "https://api.seguro.com.br/open-insurance/customer/v1",
    "prev": "https://api.seguro.com.br/open-insurance/customer/v1",
    "next": "https://api.seguro.com.br/open-insurance/customer/v1",
    "last": "https://api.seguro.com.br/open-insurance/customer/v1"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="obtém-os-registros-de-identificação-da-pessoa-natural.-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados sobre identificação pessoa física.|[ResponsePersonalCustomersIdentification](#schemaresponsepersonalcustomersidentification)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId customers )
</aside>

<h2 id="api-customers-v100-obtem-os-registros-de-qualificacao-da-pessoa-natural">Obtém os registros de qualificação da pessoa natural.</h2>

<a id="opIdcustomersGetPersonalQualifications"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.seguro.com.br/open-insurance/customers/v1/personal/qualifications");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.seguro.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/customers/v1/personal/qualifications", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.seguro.com.br/open-insurance/customers/v1/personal/qualifications")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /personal/qualifications`

Método para obter os registros de qualificação da pessoa natural mantidos na instituição transmissora.

<h3 id="obtém-os-registros-de-qualificação-da-pessoa-natural.-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "updateDateTime": "2021-05-21T08:30:00Z",
      "pepIdentification": "NAO_EXPOSTO",
      "occupation": [
        {
          "details": "string",
          "occupationCode": "RECEITA_FEDERAL",
          "occupationCodeType": "RFB"
        }
      ],
      "lifePensionPlans": "SIM",
      "informedRevenue": {
        "incomeFrequency": "MENSAL",
        "currency": "BRL",
        "amount": 100000.04,
        "year": "2010"
      },
      "informedPatrimony": {
        "currency": "BRL",
        "amount": 100000.04,
        "year": "2010"
      }
    }
  ],
  "links": {
    "self": "https://api.seguro.com.br/open-insurance/customer/v1",
    "first": "https://api.seguro.com.br/open-insurance/customer/v1",
    "prev": "https://api.seguro.com.br/open-insurance/customer/v1",
    "next": "https://api.seguro.com.br/open-insurance/customer/v1",
    "last": "https://api.seguro.com.br/open-insurance/customer/v1"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="obtém-os-registros-de-qualificação-da-pessoa-natural.-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados sobre qualificação da pessoa física|[ResponsePersonalCustomersQualification](#schemaresponsepersonalcustomersqualification)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId customers )
</aside>

<h2 id="api-customers-v100-obtem-os-registros-de-relacionamentos-com-a-instituicao-e-de-representantes-da-pessoa-natural">Obtém os registros de relacionamentos com a instituição e de representantes da pessoa natural.</h2>

<a id="opIdcustomersGetPersonalComplimentaryInformation"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.seguro.com.br/open-insurance/customers/v1/personal/complimentary-information");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.seguro.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/customers/v1/personal/complimentary-information", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.seguro.com.br/open-insurance/customers/v1/personal/complimentary-information")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /personal/complimentary-information`

Método para obter registros de relacionamentos com a instituição e de representantes da pessoa natural mantidos na instituição transmissora.

<h3 id="obtém-os-registros-de-relacionamentos-com-a-instituição-e-de-representantes-da-pessoa-natural.-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "updateDateTime": "2021-05-21T08:30:00Z",
      "startDate": "2014-05-21",
      "relationshipBeginning": "2014-05-21",
      "productsServices": [
        {
          "contract": "string",
          "type": "MICROSSEGUROS",
          "insuranceLineCode": "6272",
          "procurators": [
            {
              "nature": "PROCURADOR",
              "cpfNumber": "73677831148",
              "civilName": "Elza Milena Stefany Teixeira",
              "socialName": "string"
            }
          ]
        }
      ]
    }
  ],
  "links": {
    "self": "https://api.seguro.com.br/open-insurance/customer/v1",
    "first": "https://api.seguro.com.br/open-insurance/customer/v1",
    "prev": "https://api.seguro.com.br/open-insurance/customer/v1",
    "next": "https://api.seguro.com.br/open-insurance/customer/v1",
    "last": "https://api.seguro.com.br/open-insurance/customer/v1"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="obtém-os-registros-de-relacionamentos-com-a-instituição-e-de-representantes-da-pessoa-natural.-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados sobre relacionamento da pessoa física|[ResponsePersonalCustomersComplimentaryInformation](#schemaresponsepersonalcustomerscomplimentaryinformation)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId customers )
</aside>

<h2 id="api-customers-v100-obtem-os-registros-de-identificacao-da-pessoa-juridica">Obtém os registros de identificação da pessoa jurídica.</h2>

<a id="opIdcustomersGetBusinessIdentifications"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.seguro.com.br/open-insurance/customers/v1/business/identifications");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.seguro.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/customers/v1/business/identifications", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.seguro.com.br/open-insurance/customers/v1/business/identifications")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /business/identifications`

Método para obter os registros de identificação da pessoa jurídica mantidos na instituição transmissora

<h3 id="obtém-os-registros-de-identificação-da-pessoa-jurídica.-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "updateDateTime": "2021-05-21T08:30:00Z",
      "businessId": "578-psd-71md6971kjh-2d414",
      "brandName": "Organização A",
      "companyInfo": {
        "cnpjNumber": "01773247000563",
        "name": "Empresa da Organização A"
      },
      "businessName": "Luiza e Benjamin Assessoria Jurídica Ltda",
      "businessTradeName": "Organização B",
      "incorporationDate": "2012-05-21",
      "document": {
        "businesscnpjNumber": "50685362006773",
        "businessRegisterNumberOriginCountry": "string",
        "country": "BRA",
        "expirationDate": "2023-05-21"
      },
      "type": "PRIVADO",
      "contact": {
        "postalAddresses": [
          {
            "address": "Av Naburo Ykesaki, 1270",
            "additionalInfo": "Fundos",
            "districtName": "Centro",
            "townName": "Marília",
            "countrySubDivision": "SP",
            "postCode": "17500001",
            "ibgeTownCode": "17500001",
            "country": "Brasil",
            "countryCode": "BRA",
            "geographicCoordinates": {
              "latitude": "-23.5475000",
              "longitude": "-46.6361100"
            }
          }
        ],
        "phones": [
          {
            "countryCallingCode": "55",
            "areaCode": "19",
            "number": "29875132",
            "phoneExtension": "932"
          }
        ],
        "emails": [
          {
            "email": "nome@br.net"
          }
        ]
      },
      "parties": [
        {
          "type": "SOCIO",
          "civilName": "Juan Kaique Cláudio Fernandes",
          "socialName": "string",
          "startDate": "2014-05-21",
          "shareholding": "0.510000",
          "documentType": "CPF",
          "documentNumber": "73677831148",
          "documentCountry": "BRA",
          "documentExpirationDate": "2021-05-21"
        }
      ]
    }
  ],
  "links": {
    "self": "https://api.seguro.com.br/open-insurance/customer/v1",
    "first": "https://api.seguro.com.br/open-insurance/customer/v1",
    "prev": "https://api.seguro.com.br/open-insurance/customer/v1",
    "next": "https://api.seguro.com.br/open-insurance/customer/v1",
    "last": "https://api.seguro.com.br/open-insurance/customer/v1"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="obtém-os-registros-de-identificação-da-pessoa-jurídica.-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados sobre identificação pessoa jurídica|[ResponseBusinessCustomersIdentification](#schemaresponsebusinesscustomersidentification)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId customers )
</aside>

<h2 id="api-customers-v100-obtem-os-registros-de-qualificacao-da-pessoa-juridica">Obtém os registros de qualificação da pessoa jurídica.</h2>

<a id="opIdcustomersGetBusinessQualifications"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.seguro.com.br/open-insurance/customers/v1/business/qualifications");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.seguro.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/customers/v1/business/qualifications", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.seguro.com.br/open-insurance/customers/v1/business/qualifications")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /business/qualifications`

Método para obter os registros de qualificação da pessoa jurídica mantidos na instituição transmissora.

<h3 id="obtém-os-registros-de-qualificação-da-pessoa-jurídica.-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "updateDateTime": "2021-05-21T08:30:00Z",
      "mainBranch": "string",
      "secondaryBranch": "string",
      "informedRevenue": {
        "incomeFrequency": "MENSAL",
        "currency": "BRL",
        "amount": 100000.04,
        "year": "2010"
      },
      "informedPatrimony": {
        "currency": "BRL",
        "amount": 100000.04,
        "year": "2010"
      }
    }
  ],
  "links": {
    "self": "https://api.seguro.com.br/open-insurance/customer/v1",
    "first": "https://api.seguro.com.br/open-insurance/customer/v1",
    "prev": "https://api.seguro.com.br/open-insurance/customer/v1",
    "next": "https://api.seguro.com.br/open-insurance/customer/v1",
    "last": "https://api.seguro.com.br/open-insurance/customer/v1"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="obtém-os-registros-de-qualificação-da-pessoa-jurídica.-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados sobre qualificação pessoa jurídica|[ResponseBusinessCustomersQualification](#schemaresponsebusinesscustomersqualification)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId customers )
</aside>

<h2 id="api-customers-v100-obtem-os-registros-de-relacionamentos-com-a-instituicao-e-de-representantes-da-pessoa-juridica">Obtém os registros de relacionamentos com a instituição e de representantes da pessoa jurídica.</h2>

<a id="opIdcustomersGetBusinessComplimentaryInformation"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.seguro.com.br/open-insurance/customers/v1/business/complimentary-information");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.seguro.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/customers/v1/business/complimentary-information", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.seguro.com.br/open-insurance/customers/v1/business/complimentary-information")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /business/complimentary-information`

Método para obter registros de relacionamentos com a instituição e de representantes da pessoa jurídica mantidos na instituição transmissora.

<h3 id="obtém-os-registros-de-relacionamentos-com-a-instituição-e-de-representantes-da-pessoa-jurídica.-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "updateDateTime": "2020-07-21T08:30:00Z",
      "startDate": "2014-05-21",
      "relationshipBeginning": "2014-05-21",
      "productsServices": [
        {
          "contract": "string",
          "type": "MICROSSEGUROS",
          "insuranceLineCode": "6272",
          "procurators": [
            {
              "nature": "PROCURADOR",
              "cpfNumber": "73677831148",
              "civilName": "Elza Milena Stefany Teixeira",
              "socialName": "string"
            }
          ]
        }
      ]
    }
  ],
  "links": {
    "self": "https://api.seguro.com.br/open-insurance/customer/v1",
    "first": "https://api.seguro.com.br/open-insurance/customer/v1",
    "prev": "https://api.seguro.com.br/open-insurance/customer/v1",
    "next": "https://api.seguro.com.br/open-insurance/customer/v1",
    "last": "https://api.seguro.com.br/open-insurance/customer/v1"
  },
  "meta": {
    "totalRecords": 1,
    "totalPages": 1,
    "requestDateTime": "2021-05-21T08:30:00Z"
  }
}
```

<h3 id="obtém-os-registros-de-relacionamentos-com-a-instituição-e-de-representantes-da-pessoa-jurídica.-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados sobre relacionamento pessoa jurídica|[ResponseBusinessCustomersComplimentaryInformation](#schemaresponsebusinesscustomerscomplimentaryinformation)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.|[ResponseError](#schemaresponseerror)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerror)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerror)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerror)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerror)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerror)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes.|[ResponseError](#schemaresponseerror)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerror)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerror)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerror)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId customers )
</aside>
<!-- Generator: Widdershins v4.0.1 -->
<h1 id="api-aviation">API - Aviation v1.2.0 </h1>
<%= partial "./includes/alerta/alerta" %>
> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

**Especificação em OAS 3.0** </br>
<a href="files/swagger/insurance-aviation.yaml" download="insurance-aviation.yaml">Download da Especificação</a>


**Detalhamento Técnico** </br>
<a href="files/docs/insurance-aviation.docx" download="insurance-aviation.docx">Download do Detalhamento Técnico</a>

API de Aeronáuticos do Open Insurance Brasil - Fase 2.

Traz informações de apólice, prêmio e sinistro mantidas nas instituições transmissoras por seus clientes.

Não possui segregação entre pessoa natural e pessoa jurídica.

Requer consentimento do cliente para todos os 'endpoints'.

Base URLs:

Servidor de Produção </br>
* <a href="https://api.organizacao.com.br/open-insurance/insurance-aviation/v1">https://api.organizacao.com.br/open-insurance/insurance-aviation/v1</a>

Servidor de Homologação </br>
* <a href="https://apih.organizacao.com.br/open-insurance/insurance-aviation/v1">https://apih.organizacao.com.br/open-insurance/insurance-aviation/v1</a>

Web: <a href="https://openinsurance.susep.gov.br/documentos-de-referencia/">Governança do Open Insurance Brasil - Especificações</a>

  Release Notes:

  - <a href="./1.2.5.html#disponibilizacao-das-swaggers">15/07/2022</a>

  
<h2 id="API - Aviation v1.0.0-Orientações">Orientações</h2>

A `Role`  do diretório de participantes relacionada à presente API é a `DADOS`.

Para todos os `endpoints` desta API é previsto o envio de um `token` através do header `Authorization`.

Este `token` deverá estar relacionado ao consentimento (identificado pelo `consentId`) mantido na instituição transmissora dos dados, o qual permitirá a pesquisa e retorno, na API em questão, dos
dados relacionados ao `consentId` específico.

Os dados serão devolvidos na consulta desde que o `consentId` relacionado corresponda a um consentimento válido e com o status `AUTHORISED`.

É também necessário que o recurso em questão (conta, contrato, etc.) esteja disponível na instituição transmissora (ou seja, sem boqueios de qualquer natureza e com todas as autorizações/consentimentos já autorizados).

Além disso, as `permissions` necessárias deverão ter sido solicitadas quando da criação do consentimento relacionado.

Relacionamos a seguir as `permissions` necessárias para a consulta de dados em cada `endpoint` da presente API.

<h2 id="API - Aviation v1.0.0-Permissions necessárias para a API Insurance Aviation">Permissions necessárias para a API Insurance Aviation</h2>

Para cada um dos `paths` desta API, além dos escopos (`scopes`) indicados existem `permissions` que deverão ser observadas:

### `/`
  - permissions:
    - GET: **DAMAGES_AND_PEOPLE_AERONAUTICAL_READ**

### `/{policyId}/policy-info`
  - permissions:
    - GET: **DAMAGES_AND_PEOPLE_AERONAUTICAL_POLICYINFO_READ**

### `/{policyId}/premium`
  - permissions:
    - GET: **DAMAGES_AND_PEOPLE_AERONAUTICAL_PREMIUM_READ**

### `/{policyId}/claim`
  - permissions:
    - GET: **DAMAGES_AND_PEOPLE_AERONAUTICAL_CLAIM_READ**


### Authentication

- oAuth2 authentication. Fluxo OAuth necessário para que a receptora tenha acesso aos dados na instituição transmissora. Inclui o processo de redirecionamento e autenticação do usuário a que se referem os dados.

    - Flow: authorizationCode
    - Authorization URL = [https://authserver.example/authorization](https://authserver.example/authorization)
    - Token URL = [https://authserver.example/token](https://authserver.example/token)

|Scope|Scope Description|
|---|---|
|insurance-aviation|Escopo necessário para acesso à API. O controle dos endpoints específicos é feito via permissions.|

<h2 id="API - Aviation v1.0.0-Obtem a lista de identificação de InsuranceAviation">Obtem a lista de identificação de InsuranceAviation</h2>

<a id="opIdgetInsuranceAviation"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-aviation/v1/", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET /insurance-aviation`

Método para obter a lista de identificação de InsuranceAviation

<h3 id="obtem-a-lista-de-identificação-de-insuranceaviation-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|page|query|integer(int32)|false|Número da página que está sendo requisitada (o valor da primeira página é 1).|
|page-size|query|integer(int32)|false|Quantidade total de registros por páginas.|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "brand": "string",
      "companies": [
        {
          "companyName": "string",
          "cnpjNumber": "12345678901234",
          "policies": [
            "42"
          ]
        }
      ]
    }
  ],
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtem-a-lista-de-identificação-de-insuranceaviation-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsuranceAviation obtidos com sucesso|[ResponseInsuranceAviation](#schemaresponseinsuranceaviation)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerroraviation)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerroraviation)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerroraviation)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerroraviation)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerroraviation)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerroraviation)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerroraviation)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerroraviation)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerroraviation)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerroraviation)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-aviation )
</aside>

<h2 id="API - Aviation v1.0.0-Obtém as informações gerais da apólice identificada por {policyId}">Obtém as informações gerais da apólice identificada por {policyId}</h2>

<a id="opIdgetInsuranceAviationpolicyIdPolicyInfo"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/string/policy-info");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-aviation/v1/string/policy-info", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/string/policy-info")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET  /insurance-auto/{policyId}/policy-info`

Método para obter as informações gerais da apólice

<h3 id="obtém-as-informações-gerais-da-apólice-identificada-por-{policyid}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|policyId|path|string|true|none|

> Example responses

> 200 Response

```json
{
  "data": {
    "documentType": "APOLICE_INDIVIDUAL",
    "policyId": "111111",
    "susepProcessNumber": "string",
    "groupCertificateId": "string",
    "issuanceType": "EMISSAO_PROPRIA",
    "issuanceDate": "AAAA-MM-DD",
    "termStartDate": "AAAA-MM-DD",
    "termEndDate": "AAAA-MM-DD",
    "leadInsurerCode": "string",
    "leadInsurerPolicyId": "string",
    "maxLMG": {
      "amount": 2000,
      "currency": "BRL"
    },
    "proposalId": "string",
    "insureds": [
      {
        "identification": "12345678900",
        "identificationType": "CPF",
        "name": "Nome Sobrenome",
        "postCode": "10000000",
        "email": "string",
        "city": "string",
        "state": "string",
        "country": "BRA",
        "address": "string"
      }
    ],
    "beneficiaries": [
      {
        "identification": "12345678900",
        "identificationType": "CPF",
        "name": "Nome Sobrenome",
        "postCode": "10000000",
        "email": "string",
        "city": "string",
        "state": "string",
        "country": "BRA",
        "address": "string"
      }
    ],
    "principals": [
      {
        "identification": "12345678900",
        "identificationType": "CPF",
        "name": "Nome Sobrenome",
        "postCode": "10000000",
        "email": "string",
        "city": "string",
        "state": "string",
        "country": "BRA",
        "address": "string"
      }
    ],
    "intermediaries": [
      {
        "type": "REPRESENTANTE",
        "identification": "12345678900",
        "brokerId": "string",
        "identificationType": "CPF",
        "name": "Nome Sobrenome",
        "postCode": "10000000",
        "city": "string",
        "state": "string",
        "country": "BRA",
        "address": "string"
      }
    ],
    "insuredObjects": [
      {
        "identification": "string",
        "type": "CONTRATO",
        "typeAdditionalInfo": "string",
        "description": "string",
        "amount": {
          "amount": 2000,
          "currency": "BRL"
        },
        "coverages": [
          {
            "branch": 111,
            "code": "CASCO",
            "description": "string",
            "internalCode": "string",
            "susepProcessNumber": "string",
            "LMI": {
              "amount": 2000,
              "currency": "BRL"
            },
            "isLMISublimit": true,
            "termStartDate": "AAAA-MM-DD",
            "termEndDate": "AAAA-MM-DD",
            "isMainCoverage": true,
            "feature": "MASSIFICADOS",
            "type": "PARAMETRICO",
            "gracePeriod": 0,
            "gracePeriodicity": "DIA",
            "gracePeriodCountingMethod": "DIAS_UTEIS",
            "gracePeriodStartDate": "AAAA-MM-DD",
            "gracePeriodEndDate": "AAAA-MM-DD"
          }
        ]
      }
    ],
    "coverages": [
      {
        "branch": 111,
        "code": "CASCO",
        "description": "string",
        "deductible": {
          "type": "DEDUTIVEL",
          "typeAdditionalInfo": "string",
          "amount": {
            "amount": 2000,
            "currency": "BRL"
          },
          "period": 10,
          "periodicity": "DIA",
          "periodCountingMethod": "DIAS_UTEIS",
          "periodStartDate": "2022-05-16",
          "periodEndDate": "2022-05-17",
          "description": "Franquia de exemplo"
        },
        "POS": {
          "applicationType": "VALOR",
          "description": "Descrição de exemplo",
          "minValue": {
            "amount": 2000,
            "currency": "BRL"
          },
          "maxValue": {
            "amount": 2000,
            "currency": "BRL"
          },
          "percentage": 10
        }
      }
    ],
    "coinsuranceRetainedPercentage": "10",
    "coinsurers": [
      {
        "identification": "string",
        "cededPercentage": 10
      }
    ]
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-as-informações-gerais-da-apólice-identificada-por-{policyid}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsuranceAviationPolicyInfo obtidos com sucesso|[ResponseInsuranceAviationPolicyInfo](#schemaresponseinsuranceaviationpolicyinfo)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerroraviation)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerroraviation)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerroraviation)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerroraviation)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerroraviation)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerroraviation)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerroraviation)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerroraviation)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerroraviation)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerroraviation)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-aviation )
</aside>

<h2 id="API - Aviation v1.0.0-Obtém os dados de prêmio da apólice identificada por {policyId}">Obtém os dados de prêmio da apólice identificada por {policyId}</h2>

<a id="opIdgetInsuranceAviationpolicyIdPremium"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/string/premium");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-aviation/v1/string/premium", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/string/premium")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET  /insurance-auto/{policyId}/premium`

Método para obter os dados de prêmio da apólice.

<h3 id="obtém-os-dados-de-prêmio-da-apólice-identificada-por-{policyid}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|policyId|path|string|true|none|

> Example responses

> 200 Response

```json
{
  "data": {
    "paymentsQuantity": 4,
    "amount": {
      "amount": 2000,
      "currency": "BRL"
    },
    "coverages": [
      {
        "branch": 111,
        "code": "CASCO",
        "description": "string",
        "premiumAmount": {
          "amount": 2000,
          "currency": "BRL"
        }
      }
    ],
    "payments": [
      {
        "movementDate": "AAAA-MM-DD",
        "movementType": "LIQUIDACAO_DE_PREMIO",
        "movementOrigin": "EMISSAO_DIRETA",
        "movementPaymentsNumber": 0,
        "amount": {
          "amount": 2000,
          "currency": "BRL"
        },
        "maturityDate": "AAAA-MM-DD",
        "tellerId": "string",
        "tellerIdType": "CPF",
        "tellerName": "string",
        "financialInstitutionCode": "string",
        "paymentType": "BOLETO"
      }
    ]
  },
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-os-dados-de-prêmio-da-apólice-identificada-por-{policyid}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsuranceAviationPremium obtidos com sucesso|[ResponseInsuranceAviationPremium](#schemaresponseinsuranceaviationpremium)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerroraviation)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerroraviation)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerroraviation)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerroraviation)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerroraviation)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerroraviation)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerroraviation)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerroraviation)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerroraviation)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerroraviation)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-aviation )
</aside>

<h2 id="API - Aviation v1.0.0-Obtém os dados de sinistro da apólice identificada por {policyId}">Obtém os dados de sinistro da apólice identificada por {policyId}</h2>

<a id="opIdgetInsuranceAviationpolicyIdClaims"></a>

> Code samples

```javascript
const data = null;

const xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === this.DONE) {
    console.log(this.responseText);
  }
});

xhr.open("GET", "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/string/claim");
xhr.setRequestHeader("Accept", "application/json");
xhr.setRequestHeader("Authorization", "string");
xhr.setRequestHeader("x-fapi-auth-date", "stringstringstringstringstrin");
xhr.setRequestHeader("x-fapi-customer-ip-address", "string");
xhr.setRequestHeader("x-fapi-interaction-id", "string");
xhr.setRequestHeader("x-customer-user-agent", "string");

xhr.send(data);
```

```python
import http.client

conn = http.client.HTTPSConnection("api.organizacao.com.br")

headers = {
    'Accept': "application/json",
    'Authorization': "string",
    'x-fapi-auth-date': "stringstringstringstringstrin",
    'x-fapi-customer-ip-address': "string",
    'x-fapi-interaction-id': "string",
    'x-customer-user-agent': "string"
    }

conn.request("GET", "/open-insurance/insurance-aviation/v1/string/claim", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))
```

```java
HttpResponse<String> response = Unirest.get("https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/string/claim")
  .header("Accept", "application/json")
  .header("Authorization", "string")
  .header("x-fapi-auth-date", "stringstringstringstringstrin")
  .header("x-fapi-customer-ip-address", "string")
  .header("x-fapi-interaction-id", "string")
  .header("x-customer-user-agent", "string")
  .asString();
```

`GET  /insurance-auto/{policyId}/claim`

Método para obter os dados de sinistro associados à apólice

<h3 id="obtém-os-dados-de-sinistro-da-apólice-identificada-por-{policyid}-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|Authorization|header|string|true|Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado.|
|x-fapi-auth-date|header|string|false|Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231). Exemplo: Sun, 10 Sep 2017 19:43:31 UTC|
|x-fapi-customer-ip-address|header|string|false|O endereço IP do usuário se estiver atualmente logado com o receptor.|
|x-fapi-interaction-id|header|string|false|Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve "reproduzir" esse valor no cabeçalho de resposta.|
|x-customer-user-agent|header|string|false|Indica o user-agent que o usuário utiliza.|
|policyId|path|string|true|none|

> Example responses

> 200 Response

```json
{
  "data": [
    {
      "identification": "string",
      "documentationDeliveryDate": "AAAA-MM-DD",
      "status": "ABERTO",
      "statusAlterationDate": "AAAA-MM-DD",
      "occurrenceDate": "AAAA-MM-DD",
      "warningDate": "AAAA-MM-DD",
      "thirdPartyClaimDate": "AAAA-MM-DD",
      "amount": {
        "amount": 2000,
        "currency": "BRL"
      },
      "denialJustification": "RISCO_EXCLUIDO",
      "denialJustificationDescription": "string",
      "coverages": [
        {
          "insuredObjectId": "string",
          "branch": 111,
          "code": "CASCO",
          "description": "string",
          "warningDate": "2022-05-01",
          "thirdPartyClaimDate": "2022-05-01"
        }
      ]
    }
  ],
  "links": {
    "self": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "first": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "prev": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "next": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation",
    "last": "https://api.organizacao.com.br/open-insurance/insurance-aviation/v1/insurance-aviation"
  },
  "meta": {
    "totalRecords": 10,
    "totalPages": 1
  }
}
```

<h3 id="obtém-os-dados-de-sinistro-da-apólice-identificada-por-{policyid}-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Dados de ResponseInsuranceAviationClaims obtidos com sucesso|[ResponseInsuranceAviationClaims](#schemaresponseinsuranceaviationclaims)|
|204|[No Content](https://tools.ietf.org/html/rfc7231#section-6.3.5)|O recurso solicitado não existe ou não foi localizado.|[ResponseError](#schemaresponseerroraviation)|
|400|[Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1)|A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL|[ResponseError](#schemaresponseerroraviation)|
|401|[Unauthorized](https://tools.ietf.org/html/rfc7235#section-3.1)|Cabeçalho de autenticação ausente/inválido ou token inválido|[ResponseError](#schemaresponseerroraviation)|
|403|[Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3)|O token tem escopo incorreto ou uma política de segurança foi violada|[ResponseError](#schemaresponseerroraviation)|
|404|[Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4)|O recurso solicitado não existe ou não foi implementado|[ResponseError](#schemaresponseerroraviation)|
|405|[Method Not Allowed](https://tools.ietf.org/html/rfc7231#section-6.5.5)|O consumidor tentou acessar o recurso com um método não suportado|[ResponseError](#schemaresponseerroraviation)|
|406|[Not Acceptable](https://tools.ietf.org/html/rfc7231#section-6.5.6)|A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8|[ResponseError](#schemaresponseerroraviation)|
|422|[Unprocessable Entity](https://tools.ietf.org/html/rfc2518#section-10.3)|O servidor entende o tipo de conteúdo da entidade da requisição, e a sintaxe da requisição esta correta, mas não foi possível processar as instruções presentes|[ResponseError](#schemaresponseerroraviation)|
|429|[Too Many Requests](https://tools.ietf.org/html/rfc6585#section-4)|A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido|[ResponseError](#schemaresponseerroraviation)|
|500|[Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1)|Ocorreu um erro no gateway da API ou no microsserviço|[ResponseError](#schemaresponseerroraviation)|
|default|Default|Erro inesperado.|[ResponseError](#schemaresponseerroraviation)|

### Response Headers

|Status|Header|Type|Format|Description|
|---|---|---|---|---|
|200|x-fapi-interaction-id|string||none|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OpenId ( Scopes: openid ) & OAuth2Security ( Scopes: consent:consentId insurance-aviation )
</aside>
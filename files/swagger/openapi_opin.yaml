openapi: 3.0.0
info:
    title: Raidiam Connect
    description: Raidiam Connect API
    contact:
        email: support@raidiam.com
    license:
        name: MIT
        url: https://mit-license.org
    version: 1.20.1
tags:
    - description: all operations relating to users
      name: Users
    - description: all operations relating to software statement certifications
      name: Software Statement Certifications
    - description: all operations relating to certification managers
      name: Certification Managers
    - description: all operations relating to super users
      name: Super Users
    - description: all operations relating to organisation admins
      name: Organisation Admin Users
    - description: all operations relating to organisation domain users
      name: Organisation Domain Users
    - description: all operations utilising docusign
      name: Docusign
    - description: all operations relating to organisations
      name: Organisations
    - description: all operations relating to data export
      name: Export
    - description: all operations relating to the participants endpoint
      name: Participants
    - description: all operations relating to directory roles
      name: Roles
    - description: all depreciated operations
      name: Deprecated
    - description: all operations involving the conformance suite
      name: Conformance Suite
    - description: all operations relating to reference data
      name: Reference Data
    - description: all operations relating to authorities
      name: Authorities
    - description: all operations relating to authorisation domains
      name: Authorisation Domains
    - description: all operations relating to authorisation domain roles
      name: Authorisation Domain Roles
    - description: all operations relating to authorisation domain role metadata
      name: Authorisation Domain Role Metadata
    - description: all operations relating to the mapping between authorities and authorisation domains
      name: Authority Domain Mappings
    - description: all operations relating to directory terms and conditions
      name: Terms and Conditions
    - description: all operations relating to authority domain claims attached to an organisation
      name: Authority Domain Claims
    - description: all operations relating to roles attached to an organisation
      name: Authority Claims
    - description: all operations relating to authority claim authorisations
      name: Authority Claims Authorisations
    - description: all operations relating to contacts
      name: Contacts
    - description: all operations relating to authorisation servers
      name: Authorisation Servers
    - description: all operations relating to webhooks
      name: Webhooks
    - description: all operations relating to api resources
      name: API Resources
    - description: all operations relating to api discovery endpoints listed on an api resource
      name: API Discovery Endpoints
    - description: all operations relating to the certifying of a directory resource
      name: Certifications
    - description: all operations relating to software statements
      name: Software Statements
    - description: all operations relating to authority claims attached to a software statement
      name: Software Authority Claims
    - description: all operations relating to certificates
      name: Certificates
    - description: all operations relating to the software statement assertion
      name: Assertion
    - description: all operations relating to software statement metadata
      name: Software Statement Metadata
    - description: all operations relating to the openid provider
      name: OpenID Provider
    - description: all operations relating to the clients endpoint
      name: Client Registration
    - description: all operations relating to fetching audit history
      name: Audit History
    - description: all operations relating to federation
      name: Federation
    - description: all operations relating to organisation labels inside reference data
      name: Organisation Label
    - description: all operations relating to certification types
      name: Certification Type
    - description: all operations relating to certification type variants
      name: Certification Type Variant
    - description: all endpoints to be included in the public api documentation
      name: Public
    - description: endpoints for the super user dashboard
      name: Dashboard
    - description: all endpoints to be included in the closed api documentation
      name: Closed
    - description: all endpoints relating to resource flags
      name: Flags
servers:
    - url: https://matls-api.sandbox.raidiam.io
      description: Raidiam Directory Sandbox Environment

paths:
  '/audit':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - $ref: '#/components/parameters/ActionType'
        - $ref: '#/components/parameters/OrganisationIdQueryParameter'
        - $ref: '#/components/parameters/ResourceType'
        - $ref: '#/components/parameters/ResourceId'
        - $ref: '#/components/parameters/PerformedBy'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Fetches audit history based on query parameters
      tags:
        - Audit History
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuditHistoryPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/clients':
    parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/clientRole'
        - $ref: '#/components/parameters/clientStatus'
        - $ref: '#/components/parameters/clientName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all registered clients
      tags:
        - Software Statements
        - Client Registration
        - Public
      responses:
        '200':
          $ref: '#/components/responses/RegisteredClientsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Refresh/rebuild the registered clients data
      tags:
        - Software Statements
        - Client Registration
        - Public
      responses:
        '201':
          $ref: '#/components/responses/Ok'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/clients/{ClientId}':
    get:
      parameters:
        - $ref: '#/components/parameters/ClientId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get details for one client
      tags:
        - Software Statements
        - Client Registration
        - Public
      responses:
        '200':
          $ref: '#/components/responses/RegisteredClient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations':
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: displayMine
          schema:
            type: string
          description: Set to an email value to instruct the backend to only return organisations related to the user
        - in: query
          name: filterBy
          schema:
            type: string
          description: Will return organisations with data like the provided value
        - in: query
          name: hideInactive
          schema:
            type: boolean
          description: Will return only active organisations
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get all organisations that the logged in user is authorised to retrieve from trusted services
      tags:
        - Organisations
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post a new organisation in the directory.
      tags:
        - Organisations
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/Organisation'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the given organisations details
      tags:
        - Organisations
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationWithTnc'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Amend the given organisations details
      tags:
        - Organisations
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrganisationUpdate'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an organisation by changing its status to "Withdrawn"
      tags:
        - Organisations
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/adminusers':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: All admin users for the given organisation
      tags:
        - Users
        - Organisation Admin Users
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAdminUsers'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:servicedesk
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an organisation admin user
      tags:
        - Users
        - Organisation Admin Users
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrgAdminUserCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationAdminUser'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/adminusers/{UserEmailId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Gets details of an organisation admin user by their email address
      tags:
        - Users
        - Organisation Admin Users
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAdminUser'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:servicedesk
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: reactivate or deactivate an organisation admin user by their email address
      tags:
        - Users
        - Organisation Admin Users
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/UserUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAdminUser'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all Authorisation Servers for the given organisation
      tags:
        - Organisations
        - Authorisation Servers
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServers'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an Authorisation Server for the given organisation
      tags:
        - Organisations
        - Authorisation Servers
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationServerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server by Id
      tags:
        - Organisations
        - Authorisation Servers
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServer'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update an authorisation server
      tags:
        - Organisations
        - Authorisation Servers
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServerRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an Authorisation Server
      tags:
        - Organisations
        - Authorisation Servers
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all Api Resources for the given Authorisation Server
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/ApiResources'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an Api Resource for the given organisation and Authorisation Server
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/ApiResourceRequest'
      responses:
        '201':
          $ref: '#/components/responses/ApiResource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/ApiResourceId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server API resource by Id
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/ApiResource'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update an Api Resource for the given organisation and Authorisation Server
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/ApiResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/ApiResource'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an authorisation server API resource by Id
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/ApiResourceId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all Api Discovery Endpoints for the given Authorisation Server and Api Version
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - API Discovery Endpoints
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpoints'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an Api Discovery Endpoint for the given organisation and Authorisation Server and Api Version
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - API Discovery Endpoints
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/ApiDiscoveryEndpointRequest'
      responses:
        '201':
          $ref: '#/components/responses/ApiDiscoveryEndpointFamilyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints/{ApiDiscoveryEndpointId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/ApiResourceId'
        - $ref: '#/components/parameters/ApiDiscoveryEndpointId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server API discovery endpoint by Id
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - API Discovery Endpoints
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpoint'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update an Api Discovery Endpoint for the given organisation, Authorisation Server and Api Version
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - API Discovery Endpoints
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/ApiDiscoveryEndpointRequest'
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpointFamilyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an Api Discovery Endpoint for the given organisation, Authorisation Server and Api Version
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - API Discovery Endpoints
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/certifications':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all certifications for given authorisation server
      tags:
        - Organisations
        - Authorisation Servers
        - Certifications
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerCertifications'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post a certification for the given authorisation server
      tags:
        - Organisations
        - Authorisation Servers
        - Certifications
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServerCertificationRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationServerCertification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/certifications/{AuthorisationServerCertificationId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/AuthorisationServerCertificationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a certification by Id
      tags:
        - Organisations
        - Authorisation Servers
        - Certifications
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerCertification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update the given certification
      tags:
        - Organisations
        - Authorisation Servers
        - Certifications
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationServerCertificationRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerCertification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Remove a certification with the given certification Id
      tags:
        - Organisations
        - Authorisation Servers
        - Certifications
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/familystatus':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server API resource by Id and returns the latest family status
      tags:
        - Organisations
        - Authorisation Servers
        - API Resources
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/ApiResources'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/federation':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/PolicyApprovalStatusEnum'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all authorisation server federation configuration by Authorisation Server Id
      tags:
        - Organisations
        - Authorisation Servers
        - Federation
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthServerFederationsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an authorisation server federation configuration
      tags:
        - Organisations
        - Authorisation Servers
        - Federation
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthServerFederationRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthServerFederation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/federation/{FederationConfigId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationServerId'
        - $ref: '#/components/parameters/FederationConfigId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server federation configuration by Federation Config Id
      tags:
        - Organisations
        - Authorisation Servers
        - Federation
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthServerFederation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update the status of a given Federation configuration
      tags:
        - Organisations
        - Authorisation Servers
        - Federation
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthServerFederationRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthServerFederation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an Authorisation Server Federation Configuration
      tags:
        - Organisations
        - Authorisation Servers
        - Federation
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorityclaims':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the authority claims for the given organisation
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post an authority claim
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrganisationAuthorityClaimRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority claim by Id
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update an authority claim for the given Id
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrganisationAuthorityClaimRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an authority claim
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority claims authorisations
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Authority Claims Authorisations
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post an authority claims authorisations
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Authority Claims Authorisations
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrganisationAuthorityClaimAuthorisationRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations/{OrganisationAuthorisationId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
        - $ref: '#/components/parameters/OrganisationAuthorisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a claim authorisation
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Authority Claims Authorisations
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Remove an authorisation from authority claims
      tags:
        - Organisations
        - Authority Claims
        - Authority Domain Claims
        - Authorisation Domain Roles
        - Authorisation Domains
        - Authorities
        - Authority Claims Authorisations
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authoritydomainclaims':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get the authority domain claims for the given organisation
      tags:
        - Organisations
        - Authority Domain Claims
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaimsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post an authority domain claim
      tags:
        - Organisations
        - Authority Domain Claims
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrganisationAuthorityDomainClaimRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/authoritydomainclaims/{OrganisationAuthorityDomainClaimId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/OrganisationAuthorityDomainClaimId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority domain claim by Id
      tags:
        - Organisations
        - Authority Domain Claims
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update an authority domain claim by Id
      tags:
        - Organisations
        - Authority Domain Claims
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/OrganisationAuthorityDomainClaimUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaim'
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Deactivate an authority domain claim by Id
      tags:
        - Organisations
        - Authority Domain Claims
        - Authorisation Domains
        - Authorities
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/certificates':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the certificates for the given organisation
      tags:
        - Organisations
        - Certificates
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/certificates/kid/{CertificateOrKeyId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/CertificateOrKeyId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Retrieve a certificate with the given CertificateOrKeyId
      tags:
        - Organisations
        - Certificates
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Revoke or remove a certificate with the given CertificateOrKeyId providing a revoke reason
      tags:
        - Organisations
        - Certificates
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AmendCertificateRequest'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/certificates/{OrganisationCertificateType}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/OrganisationCertificateType'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get the certificates of the given OrganisationCertificateType for the given organisation
      tags:
        - Organisations
        - Certificates
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Store or create a new certificate of the given OrganisationCertificateType for the given organisation
      tags:
        - Organisations
        - Certificates
        - Public
      requestBody:
        $ref: '#/components/requestBodies/CertificateOrCSROrJWS'
      responses:
        '201':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/conformancetest':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    post:
      summary: Create and execute a Conformance Suite test plan for the given organisation
      tags:
        - Organisations
        - Conformance Suite
        - Public
      requestBody:
        $ref: '#/components/requestBodies/OrganisationConformanceTest'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationConformanceTestResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/contacts':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get the contacts for the given organisation
      tags:
        - Organisations
        - Contacts
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/ContactsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Post a contact for the given organisation
      tags:
        - Organisations
        - Contacts
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/ContactRequest'
      responses:
        '201':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/contacts/{ContactId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ContactId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a contact by Id
      tags:
        - Organisations
        - Contacts
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update the contacts for the given organisation
      tags:
        - Organisations
        - Contacts
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/ContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Remove a contact in an organisation with the given contact id
      tags:
        - Organisations
        - Contacts
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/ess/initiatesigning':
    post:
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: This API initiates ESS signing process by an org admin
      tags:
        - Organisations
        - Docusign
        - Public
      requestBody:
        $ref: '#/components/requestBodies/EssSignRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrgTermsAndConditionsDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/ess/reissue/{ExternalSigningServiceEnvelopeId}':
    post:
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ExternalSigningServiceEnvelopeId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: This API marks the current envelope as reissued and allows a new one to be started
      tags:
        - Organisations
        - Docusign
        - Public
      responses:
        '200':
          $ref: '#/components/responses/EssPollResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all software statements for the given organisation
      tags:
        - Organisations
        - Software Statements
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatements'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create a software statement
      tags:
        - Organisations
        - Software Statements
        - OpenID Provider
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementRequest'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareStatementResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a specific software statement
      tags:
        - Organisations
        - Software Statements
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update a software statement by Id.
      tags:
        - Organisations
        - Software Statements
        - OpenID Provider
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete or revoke a software statement with the given softwarestatementID
      tags:
        - Organisations
        - Software Statements
        - OpenID Provider
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/assertion':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a Software Statement Assertion for the given SoftwareStatementID.
      tags:
        - Organisations
        - Software Statements
        - Assertion
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementAssertion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the authority claims for the given software statement
      tags:
        - Organisations
        - Software Statements
        - Authority Claims
        - Software Authority Claims
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/SoftwareAuthorityClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post an authority claim for a software statement
      tags:
        - Organisations
        - Software Statements
        - Authority Claims
        - Software Authority Claims
        - OpenID Provider
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/SoftwareAuthorityClaimRequest'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims/{SoftwareAuthorityClaimId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/SoftwareAuthorityClaimId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority claim by Id
      tags:
        - Organisations
        - Software Statements
        - Authority Claims
        - Software Authority Claims
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/SoftwareAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update an authority claim for the given Id
      tags:
        - Organisations
        - Software Statements
        - Authority Claims
        - Software Authority Claims
        - OpenID Provider
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/SoftwareAuthorityClaimUpdateRequest'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get certificates for the given software statement
      tags:
        - Organisations
        - Software Statements
        - Certificates
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates/{SoftwareStatementCertificateOrKeyType}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    post:
      summary: Add a key or create a new certificate for the given software statement
      tags:
        - Organisations
        - Software Statements
        - Certificates
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/CSROrKey'
      responses:
        '201':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates/{SoftwareStatementCertificateOrKeyType}/{CertificateOrKeyId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
        - $ref: '#/components/parameters/CertificateOrKeyId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the certificate of the given type and ID for the given software statement
      tags:
        - Organisations
        - Software Statements
        - Certificates
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update a software statement certificate with the given CertificateOrKeyId e.g. revoke reason
      tags:
        - Organisations
        - Software Statements
        - Certificates
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AmendCertificateRequest'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certifications':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all certifications for given Software Statement.
      tags:
        - Organisations
        - Software Statements
        - Certifications
        - Public
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementCertifications'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Post a certification for the given Software Statement
      tags:
        - Organisations
        - Software Statements
        - Certifications
        - Public
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementCertificationRequest'
      responses:
        '201':
          $ref: '#/components/responses/SoftwareStatementCertification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certifications/{SoftwareStatementCertificationId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/SoftwareStatementCertificationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a certification by Id
      tags:
        - Organisations
        - Software Statements
        - Certifications
        - Public
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementCertification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update the given certification
      tags:
        - Organisations
        - Software Statements
        - Certifications
        - Public
      requestBody:
        $ref: '#/components/requestBodies/SoftwareStatementCertificationRequest'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementCertification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Remove a certification with the given certification Id
      tags:
        - Organisations
        - Software Statements
        - Certifications
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/metadata':
    get:
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Get all metadata of a specific type
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get all metadata associated with a software statement
      tags:
        - Organisations
        - Software Statements
        - Authority Claims
        - Authorisation Domain Role Metadata
        - Software Statement Metadata
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/MetadataList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:software
          - directory:website
      
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/unlock':
    put:
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Unlock a software statement.
      tags:
        - Organisations
        - Software Statements
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/UnlockSoftwareStatementRequest'
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/tnchistory':
    get:
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all TnC data of the given organisation
      tags:
        - Organisations
        - Public
      responses:
        '200':
          $ref: '#/components/responses/OrgTermsAndConditionsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationDomainName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All users for the given authorisation domain
      tags:
        - Users
        - Organisation Domain Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUsersPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
          - directory:servicedesk
      
    post:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an authorisation domain user
      tags:
        - Users
        - Organisation Domain Users
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainUserCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationDomainUser'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users/{UserEmailId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationDomainName'
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Authorisation Domain user details
      tags:
        - Users
        - Organisation Domain Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUsersPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
          - directory:servicedesk
      
  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users/{UserEmailId}/{AuthorisationDomainUserId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/AuthorisationDomainName'
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/AuthorisationDomainUserId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    put:
      summary: Update an authorisation domain user record by the unique identifier
      tags:
        - Public
        - Users
        - Organisation Domain Users
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainUserUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUser'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorisationdomainroles':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: domainRole
          schema:
            type: string
          description: Will return authorisation domain roles with data like the provided authorisationDomainRole
        - in: query
          name: status
          schema:
            type: string
          description: Will return authorisation domain roles with data like the provided status
        - in: query
          name: domain
          schema:
            type: string
          description: Will return authorisation domain roles with data like the provided authorisationDomain
        - in: query
          name: type
          schema:
            type: string
          description: Will return authorisation domain roles with data like the provided roletype
      summary: Reference data of all authorisation domain roles
      tags:
        - Reference Data
        - Authorisation Domain Roles
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRolesPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Create an authorisation domain role
      tags:
        - Reference Data
        - Authorisation Domain Roles
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainRoleRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationDomainRole'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}':
    parameters:
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation domain role by name
      tags:
        - Reference Data
        - Authorisation Domain Roles
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRole'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update an authorisation domain role by name
      tags:
        - Reference Data
        - Authorisation Domain Roles
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainRoleRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRole'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      summary: Deactivate an authorisation domain role by Name
      tags:
        - Reference Data
        - Authorisation Domain Roles
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}/metadata':
    get:
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Get all of a specific type of metadata
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get metadata associated with an authorisation domain role
      tags:
        - Reference Data
        - Authorisation Domain Role Metadata
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/MetadataList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:software
          - directory:website
      
    post:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create a metadata record associated with an authorisation domain role
      tags:
        - Reference Data
        - Authorisation Domain Role Metadata
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/MetadataRequest'
      responses:
        '201':
          $ref: '#/components/responses/Metadata'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}/metadata/{MetadataId}':
    get:
      parameters:
        - $ref: '#/components/parameters/MetadataId'
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get metadata associated with an authorisation domain role
      tags:
        - Reference Data
        - Authorisation Domain Role Metadata
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/Metadata'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:software
          - directory:website
      
    put:
      parameters:
        - $ref: '#/components/parameters/MetadataId'
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Change the status of a metadata object that is associated with an authorisation domain role
      tags:
        - Reference Data
        - Authorisation Domain Role Metadata
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/MetadataUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/MetadataId'
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete a metadata object that is associated with an authorisation domain role
      tags:
        - Reference Data
        - Authorisation Domain Role Metadata
        - Public
        - Deprecated
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorisationdomains':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: domainName
          schema:
            type: string
          description: Will return authorisation domains with data like the provided authorisationDomainName
        - in: query
          name: domainRegion
          schema:
            type: string
          description: Will return authorisation domains with data like the provided authorisationDomainRegion
      summary: Reference data of all authorisation domains
      tags:
        - Reference Data
        - Authorisation Domains
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Create an authorisation domain
      tags:
        - Reference Data
        - Authorisation Domains
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorisationdomains/{AuthorisationDomainName}':
    parameters:
        - $ref: '#/components/parameters/AuthorisationDomainName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation domain by Name
      tags:
        - Reference Data
        - Authorisation Domains
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update an authorisation domain by Name
      tags:
        - Reference Data
        - Authorisation Domains
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorities':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: authorityName
          schema:
            type: string
          description: Will return authorities with names similar to the provided authorityName
        - in: query
          name: authorityCountry
          schema:
            type: string
          description: Will return authorities with countries similar to the provided authorityCountry
      summary: Reference Data of all authorities
      tags:
        - Reference Data
        - Authorities
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthoritiesPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create a reference authority
      tags:
        - Reference Data
        - Authorities
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorityRequest'
      responses:
        '201':
          $ref: '#/components/responses/Authority'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorities/{AuthorityId}':
    parameters:
        - $ref: '#/components/parameters/AuthorityId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a reference authority by Id
      tags:
        - Reference Data
        - Authorities
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/Authority'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update a reference authority by Id
      tags:
        - Reference Data
        - Authorities
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorityRequest'
      responses:
        '200':
          $ref: '#/components/responses/Authority'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorities/{AuthorityId}/authorisationdomains':
    parameters:
        - $ref: '#/components/parameters/AuthorityId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference data of all authorisation domains for an Authority ID
      tags:
        - Reference Data
        - Authorisation Domains
        - Authorities
        - Authority Domain Mappings
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomainsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Map an authorisation domain to an authority
      tags:
        - Reference Data
        - Authorisation Domains
        - Authorities
        - Authority Domain Mappings
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorityAuthorisationDomainRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorityAuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authorities/{AuthorityId}/authorisationdomains/{AuthorityAuthorisationDomainId}':
    parameters:
        - $ref: '#/components/parameters/AuthorityId'
        - $ref: '#/components/parameters/AuthorityAuthorisationDomainId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority authorisation domain by Id
      tags:
        - Reference Data
        - Authorisation Domains
        - Authorities
        - Authority Domain Mappings
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Activate an authority authorisation domain by Id
      tags:
        - Reference Data
        - Authorisation Domains
        - Authorities
        - Authority Domain Mappings
        - Public
        - Closed
      requestBody:
        $ref: '#/components/requestBodies/AuthorityAuthorisationDomainRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      summary: Deactivate an authority authorisation domain by Id
      tags:
        - Reference Data
        - Authorisation Domains
        - Authorities
        - Authority Domain Mappings
        - Public
        - Closed
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/authoritydomainmapping':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Mappings of authorities with authorisation domains
      tags:
        - Reference Data
        - Authorisation Domains
        - Authorities
        - Authority Domain Mappings
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomainsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
  '/references/certificationtypes':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: resourceType
          schema:
            type: string
          description: The resource type to filter by
        - in: query
          name: typeName
          schema:
            type: string
          description: The type name to search by
        - in: query
          name: status
          schema:
            type: string
          description: The status to filter by
      summary: Get certification types
      tags:
        - Reference Data
        - Certification Type
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificationTypes'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    post:
      summary: Set certification types
      tags:
        - Reference Data
        - Certification Type
        - Public
      requestBody:
        $ref: '#/components/requestBodies/CertificationTypeRequest'
      responses:
        '201':
          $ref: '#/components/responses/CertificationType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/certificationtypes/{TypeID}':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - $ref: '#/components/parameters/TypeID'
    get:
      summary: Get a specific certification type by ID
      tags:
        - Reference Data
        - Certification Type
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificationType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    put:
      summary: Update certification types
      tags:
        - Reference Data
        - Certification Type
        - Public
      requestBody:
        $ref: '#/components/requestBodies/CertificationTypeRequest'
      responses:
        '200':
          $ref: '#/components/responses/CertificationType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      summary: Delete a certification type
      tags:
        - Reference Data
        - Certification Type
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/certificationtypes/{TypeID}/variants':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - $ref: '#/components/parameters/TypeID'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: resourceType
          schema:
            type: string
          description: The resource type to filter by
        - in: query
          name: status
          schema:
            type: string
          description: The status to filter by
      summary: Get certification type variants
      tags:
        - Reference Data
        - Certification Type
        - Certification Type Variant
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificationTypeVariantPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    post:
      summary: Set certification type variant
      tags:
        - Reference Data
        - Certification Type
        - Certification Type Variant
        - Public
      requestBody:
        $ref: '#/components/requestBodies/CertificationTypeVariantRequest'
      responses:
        '201':
          $ref: '#/components/responses/CertificationTypeVariant'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/certificationtypes/{TypeID}/variants/{VariantID}':
    parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - $ref: '#/components/parameters/TypeID'
        - $ref: '#/components/parameters/VariantID'
    get:
      summary: Get certification type variant by ID
      tags:
        - Reference Data
        - Certification Type
        - Certification Type Variant
        - Public
      responses:
        '200':
          $ref: '#/components/responses/CertificationTypeVariant'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    put:
      summary: Update certification type variant by ID
      tags:
        - Reference Data
        - Certification Type
        - Certification Type Variant
        - Public
      requestBody:
        $ref: '#/components/requestBodies/CertificationTypeVariantRequest'
      responses:
        '200':
          $ref: '#/components/responses/CertificationTypeVariant'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      summary: Delete a certification type variant
      tags:
        - Reference Data
        - Certification Type
        - Certification Type Variant
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/federations':
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
      summary: Get all federations
      tags:
        - Reference Data
        - Federation
        - Public
      responses:
        '200':
          $ref: '#/components/responses/FederationsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Create a new federation
      tags:
        - Reference Data
        - Federation
        - Public
      requestBody:
        $ref: '#/components/requestBodies/FederationRequest'
      responses:
        '201':
          $ref: '#/components/responses/FederationItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/federations/{FederationId}':
    parameters:
        - $ref: '#/components/parameters/FederationId'
    get:
      summary: Get a federation by id
      tags:
        - Reference Data
        - Federation
        - Public
      responses:
        '200':
          $ref: '#/components/responses/FederationItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update a federation
      tags:
        - Reference Data
        - Federation
        - Public
      requestBody:
        $ref: '#/components/requestBodies/FederationRequest'
      responses:
        '200':
          $ref: '#/components/responses/FederationItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      summary: Delete a federation
      tags:
        - Reference Data
        - Federation
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/federations/{FederationId}/metadata-policy':
    parameters:
        - $ref: '#/components/parameters/FederationId'
    get:
      parameters:
        - $ref: '#/components/parameters/MetadataPolicyType'
        - $ref: '#/components/parameters/PolicyApprovalStatusEnum'
        - $ref: '#/components/parameters/MetadataPolicyVersion'
      summary: Get the metadata policy for a federation
      tags:
        - Reference Data
        - Federation
        - Public
      responses:
        '200':
          $ref: '#/components/responses/FederationMetadataPolicyPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      summary: Create a new metadata policy
      tags:
        - Reference Data
        - Federation
        - Public
      requestBody:
        $ref: '#/components/requestBodies/FederationMetadataPolicyRequest'
      responses:
        '201':
          $ref: '#/components/responses/FederationMetadataPolicyItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/federations/{FederationId}/metadata-policy/{MetadataPolicyId}':
    parameters:
        - $ref: '#/components/parameters/FederationId'
        - $ref: '#/components/parameters/MetadataPolicyId'
    get:
      summary: Get a metadata policy
      tags:
        - Reference Data
        - Federation
        - Public
      responses:
        '200':
          $ref: '#/components/responses/FederationMetadataPolicyItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      summary: Update a metadata policy
      tags:
        - Reference Data
        - Federation
        - Public
      requestBody:
        $ref: '#/components/requestBodies/FederationMetadataPolicyRequest'
      responses:
        '200':
          $ref: '#/components/responses/FederationMetadataPolicyItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      summary: Delete a metadata policy
      tags:
        - Reference Data
        - Federation
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/flags':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - $ref: '#/components/parameters/FlagName'
        - $ref: '#/components/parameters/FlagType'
        - $ref: '#/components/parameters/FlagStatus'
      summary: Returns all flags configured at a reference data level
      tags:
        - Reference Data
        - Flags
        - Public
      responses:
        '200':
          $ref: '#/components/responses/FlagsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create a new flag
      tags:
        - Reference Data
        - Flags
        - Public
      requestBody:
        $ref: '#/components/requestBodies/FlagRequest'
      responses:
        '201':
          $ref: '#/components/responses/Flag'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/flags/{FlagID}':
    parameters:
        - $ref: '#/components/parameters/FlagID'
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Returns a specific flag configured at a reference data level
      tags:
        - Reference Data
        - Flags
        - Public
      responses:
        '200':
          $ref: '#/components/responses/Flag'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Updates an existing flag
      tags:
        - Reference Data
        - Flags
        - Public
      requestBody:
        $ref: '#/components/requestBodies/FlagUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/Flag'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Delete an existing flag
      tags:
        - Reference Data
        - Flags
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/organisationLabels':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference Data of all organisation labels
      tags:
        - Reference Data
        - Organisation Label
        - Public
      responses:
        '200':
          $ref: '#/components/responses/OrganisationLabelsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create an organisation label
      tags:
        - Reference Data
        - Organisation Label
        - Public
      requestBody:
        $ref: '#/components/requestBodies/OrganisationLabelRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrganisationLabel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/organisationLabels/{OrganisationLabelId}':
    parameters:
        - $ref: '#/components/parameters/OrganisationLabelId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a reference organisation label by Id
      tags:
        - Reference Data
        - Organisation Label
        - Public
      responses:
        '200':
          $ref: '#/components/responses/OrganisationLabel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    put:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update a reference organisation label by Id
      tags:
        - Reference Data
        - Authorities
        - Public
      requestBody:
        $ref: '#/components/requestBodies/OrganisationLabelRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrganisationLabel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/termsandconditions':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All terms and conditions
      tags:
        - Reference Data
        - Terms and Conditions
        - Public
      responses:
        '200':
          $ref: '#/components/responses/TermsAndConditionsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create TnC
      tags:
        - Reference Data
        - Terms and Conditions
        - Public
      requestBody:
        $ref: '#/components/requestBodies/TermsAndConditionsCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/TermsAndConditionsItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/termsandconditions/{TnCId}':
    get:
      parameters:
        - $ref: '#/components/parameters/TnCId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get details for a TnC document
      tags:
        - Reference Data
        - Terms and Conditions
        - Public
      responses:
        '200':
          $ref: '#/components/responses/TermsAndConditionsItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    put:
      parameters:
        - $ref: '#/components/parameters/TnCId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update the content of a TnC document
      tags:
        - Reference Data
        - Terms and Conditions
        - Public
      requestBody:
        $ref: '#/components/requestBodies/TermsAndConditionsUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/TermsAndConditionsItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/TnCId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Deactivate a TnC document
      tags:
        - Reference Data
        - Terms and Conditions
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/users/authorisationdomain/systems':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference Data of all authorisation domain systems
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainSystemsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create Reference Data for a new authorisation domain system
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainSystemRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationDomainSystem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/users/authorisationdomain/systems/{AuthorisationDomainSystemID}':
    get:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainSystemID'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get specific record for authorisation domain system
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainSystem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainSystemID'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update Reference Data for a new authorisation domain system
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainSystemRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainSystem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainSystemID'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Remove Reference Data for a new authorisation domain system
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/users/authorisationdomain/usertypes':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: parentRole
          schema:
            type: string
          description: The parent role of this domain role
        - in: query
          name: systemID
          schema:
            type: string
          description: The ID of the system to pair it with
        - in: query
          name: status
          schema:
            type: string
          description: The status of the user types
      summary: Reference Data of all authorisation domain user types
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUserTypesPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Create Reference Data for a new authorisation domain user type
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainUserTypeRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthorisationDomainUserType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/references/users/authorisationdomain/usertypes/{AuthorisationDomainUserTypeID}':
    get:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainUserTypeID'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get specific record for authorisation domain user type
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUserType'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
          - directory:software
      
    put:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainUserTypeID'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Update Reference Data for a new authorisation domain user type
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      requestBody:
        $ref: '#/components/requestBodies/AuthorisationDomainUserTypeRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUserType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
    delete:
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainUserTypeID'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Remove Reference Data for a new authorisation domain user type
      tags:
        - Reference Data
        - Authorisation Domains
        - Users
        - Public
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/users':
    post:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: User create API
      tags:
        - Users
        - Public
      requestBody:
        $ref: '#/components/requestBodies/UserCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/UserDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/users/super':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All super users
      tags:
        - Users
        - Super Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/SuperUsersPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:admin
          - directory:website
      
  '/users/{UserEmailId}':
    get:
      parameters:
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Details of the user
      tags:
        - Users
        - Public
        - Closed
      responses:
        '200':
          $ref: '#/components/responses/UserDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/users/{UserEmailId}/history':
    get:
      parameters:
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: TnC history of the user
      tags:
        - Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/UserTermsAndConditionsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
  '/users/{UserEmailId}/{TnCId}':
    put:
      parameters:
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/TnCId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: API for capturing the updated Directory TnC ID agreed by the user
      tags:
        - Users
        - Public
      responses:
        '200':
          $ref: '#/components/responses/UserDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - oAuth:
          - directory:website
      
components:
    securitySchemes:
        oAuth:
            description: This API uses OAUTH 2.0 with client creds for the admin role and auth code for web users
            flows:
                authorizationCode:
                    authorizationUrl: https://auth.openbanking.raidiam.io/auth
                    refreshUrl: https://auth.openbanking.raidiam.io/token
                    scopes:
                        directory:website: Web based operations
                    tokenUrl: https://auth.openbanking.raidiam.io/token
                clientCredentials:
                    scopes:
                        directory:admin: All operations for super and domain users
                        directory:software: Software statement client operations
                    tokenUrl: https://auth.openbanking.raidiam.io/token
            type: oauth2
    schemas:
        AccessEnum:
            enum:
                - Read
                - Write
                - Administrator
                - None
            type: string
            default: Read
        AccessTokenRequest:
            required:
                - grant_type
            type: object
            properties:
                assertion:
                    minLength: 1
                    type: string
                    description: The assertion that is used to get a token, required with grant_type private_key_jwt
                client_assertion_type:
                    maxLength: 160
                    minLength: 1
                    enum:
                        - urn:ietf:params:oauth:client-assertion-type:jwt-bearer
                    type: string
                    description: Required with grant_type private_key_jwt
                client_id:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Required with grant_type private_key_jwt
                grant_type:
                    minLength: 1
                    enum:
                        - client_credentials
                        - private_key_jwt
                        - tls_client_auth
                        - urn:ietf:params:oauth:grant-type:device_code
                    type: string
                    default: client_credentials
                    description: The Grant Type
        AccessTokenResponse:
            type: object
            properties:
                access_token:
                    type: string
                    description: Access token
                expires_in:
                    type: integer
                    description: lifetime in seconds
                scope:
                    type: string
                token_type:
                    type: string
        AccessTokenRevocationRequest:
            required:
                - token
            type: object
            properties:
                token:
                    type: string
                    description: The token that the client wants to get revoked.
                token_type_hint:
                    enum:
                        - access_token
                        - refresh_token
                    type: string
                    description: |
                        A hint about the type of the token
                        submitted for revocation.  Clients MAY pass this parameter in
                        order to help the authorization server to optimize the token
                        lookup.  If the server is unable to locate the token using
                        the given hint, it MUST extend its search across all of its
                        supported token types.  An authorization server MAY ignore
                        this parameter, particularly if it is able to detect the
                        token type automatically.  This specification defines two
                        such values:

                        * access_token: An access token as defined in [RFC6749],
                          Section 1.4

                        * refresh_token: A refresh token as defined in [RFC6749],
                          Section 1.5
            description: A valid RFC7009 request - https://datatracker.ietf.org/doc/html/rfc7009#section-2.1
        ActionType:
            enum:
                - created
                - updated
                - deleted
            type: string
        AdditionalSoftwareMetadata:
            maxLength: 255
            type: string
            description: Extra metadata defined by the org admins to be loaded into the software statement and made avaiable during introspection
        AmendCertificateRequest:
            required:
                - RevokeReason
            type: object
            properties:
                RevokeReason:
                    enum:
                        - unspecified
                        - keycompromise
                        - superseded
                        - cessationofoperation
                        - privilegewithdrawn
                    type: string
                    default: unspecified
                    description: Specify a reason for revokation of the certificate.
        ApiCertificationUri:
            maxLength: 500
            pattern: ^(https://).*
            type: string
            format: uri
            description: Link to the certifation package. Example https://github.com/Open[Domain]/conformance/blob/main/submissions/functional/business/1.0.3/api-business-customer.zip
        ApiDiscoveryEndpoint:
            type: object
            properties:
                ApiDiscoveryId:
                    $ref: '#/components/schemas/ApiEndpointId'
                ApiEndpoint:
                    $ref: '#/components/schemas/ApiEndpoint'
        ApiDiscoveryEndpointAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/ApiDiscoveryEndpoint'
        ApiDiscoveryEndpointFamilyResponse:
            type: object
            properties:
                ApiDiscoveryEndpoints:
                    items:
                        $ref: '#/components/schemas/ApiDiscoveryEndpoint'
                FamilyComplete:
                    type: boolean
                    description: Denotes a completed api family set
        ApiDiscoveryEndpointRequest:
            required:
                - ApiEndpoints
            type: object
            properties:
                ApiEndpoints:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiDiscoveryEndpointRequestObject'
        ApiDiscoveryEndpointRequestObject:
            required:
                - ApiEndpoint
            type: object
            properties:
                ApiEndpoint:
                    $ref: '#/components/schemas/ApiEndpoint'
        ApiDiscoveryEndpoints:
            type: array
            items:
                $ref: '#/components/schemas/ApiDiscoveryEndpoint'
        ApiEndpoint:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            description: A compliant URI
            example: https://raidiam.io/cb
        ApiEndpointId:
            maxLength: 40
            type: string
            description: The unique ID of an Api discovery endpoint resource
        ApiFamilyType:
            maxLength: 128
            minLength: 1
            type: string
            description: The type of API this record describes
        ApiResource:
            type: object
            allOf:
                - $ref: '#/components/schemas/ApiResourceDetail'
            properties:
                ApiDiscoveryEndpoints:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiDiscoveryEndpoint'
        ApiResourceDetail:
            type: object
            properties:
                ApiCertificationUri:
                    $ref: '#/components/schemas/ApiCertificationUri'
                ApiFamilyType:
                    $ref: '#/components/schemas/ApiFamilyType'
                ApiResourceId:
                    $ref: '#/components/schemas/ApiResourceId'
                ApiVersion:
                    pattern: ^[0-9]+\.[0-9]+\.[0-9]+$
                    type: string
                    description: The version number of the API
                CertificationExpirationDate:
                    $ref: '#/components/schemas/CertificationExpirationDate'
                CertificationStartDate:
                    $ref: '#/components/schemas/CertificationStartDate'
                CertificationStatus:
                    enum:
                        - Awaiting Certification
                        - Certified
                        - Deprecated
                        - Rejected
                        - Warning
                        - Self-Certified
                    type: string
                    default: Awaiting Certification
                    description: Is this certification current or expired
                FamilyComplete:
                    type: boolean
                    description: Denotes whether or not the api resource has had all related api endpoints published
        ApiResourceDetailAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/ApiResourceDetail'
        ApiResourceId:
            maxLength: 40
            type: string
            description: The unique ID of an Api version resource
        ApiResourceRequest:
            required:
                - ApiFamilyType
                - ApiVersion
            type: object
            properties:
                ApiCertificationUri:
                    $ref: '#/components/schemas/ApiCertificationUri'
                ApiEndpoint:
                    $ref: '#/components/schemas/ApiEndpoint'
                ApiFamilyType:
                    $ref: '#/components/schemas/ApiFamilyType'
                ApiVersion:
                    pattern: ^[0-9]+\.[0-9]+\.[0-9]+$
                    type: string
                    description: The version number of the API
                CertificationStartDate:
                    maxLength: 10
                    pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
                    type: string
                    nullable: true
                CertificationStatus:
                    enum:
                        - Awaiting Certification
                        - Certified
                        - Deprecated
                        - Rejected
                        - Warning
                        - Self-Certified
                    type: string
                    default: Awaiting Certification
                    description: Is this certification current or expired
        ApiResources:
            type: array
            items:
                $ref: '#/components/schemas/ApiResource'
        ApiWebhookUri:
            maxLength: 255
            pattern: ^(https:\/\/).*
            type: string
            format: uri
            description: A compliant URI
        AuditFields:
            type: object
            properties:
                EntryId:
                    type: integer
                    description: The unique ID of the action
                EntryType:
                    $ref: '#/components/schemas/ActionType'
                PerformedBy:
                    type: string
                    description: The user who performed the action
                ResourceType:
                    $ref: '#/components/schemas/ResourceType'
                Timestamp:
                    type: string
                    format: date
                    description: When the action was performed
        AuditHistoryPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                items:
                    type: array
                    items:
                        anyOf:
                            - $ref: '#/components/schemas/ApiResourceDetailAudit'
                            - $ref: '#/components/schemas/ApiDiscoveryEndpointAudit'
                            - $ref: '#/components/schemas/AuthorisationServerDetailsAudit'
                            - $ref: '#/components/schemas/AuthorisationServerCertificationAudit'
                            - $ref: '#/components/schemas/ContactAudit'
                            - $ref: '#/components/schemas/OrganisationAudit'
                            - $ref: '#/components/schemas/CertificateOrKeyAudit'
                            - $ref: '#/components/schemas/OrganisationAuthorityClaimDetailsAudit'
                            - $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisationAudit'
                            - $ref: '#/components/schemas/OrganisationAuthorityDomainClaimAudit'
                            - $ref: '#/components/schemas/AuthorisationDomainUserAudit'
                            - $ref: '#/components/schemas/UserDetailsAudit'
                            - $ref: '#/components/schemas/OrganisationAdminUserDetailsAudit'
        AuthDeprecatedDate:
            type: string
            format: date
            description: Authorisation Server support/deprecation end date
            example: "2021-01-30"
        AuthRetirementDate:
            type: string
            format: date
            description: Authorisation Server Retirement date
            example: "2023-12-30"
        AuthServerFederation:
            type: object
            properties:
                AuthorisationServerId:
                    $ref: '#/components/schemas/AuthorisationServerId'
                ConfigJson:
                    $ref: '#/components/schemas/ConfigJson'
                FederationConfigId:
                    $ref: '#/components/schemas/FederationConfigId'
                Status:
                    $ref: '#/components/schemas/PolicyApprovalStatusEnum'
                Version:
                    $ref: '#/components/schemas/FederationVersion'
        AuthServerFederationRequest:
            type: object
            properties:
                ConfigJson:
                    $ref: '#/components/schemas/ConfigJson'
                Status:
                    $ref: '#/components/schemas/PolicyApprovalStatusEnum'
        AuthServerFederationsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthServerFederation'
        AuthSupersededById:
            maxLength: 40
            type: string
            description: Authorisation Server ID which replaces the current auth server
            example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        AuthorisationDomain:
            type: object
            properties:
                AuthorisationDomainDescription:
                    type: string
                    description: The authorisation domain description
                AuthorisationDomainName:
                    type: string
                    description: The authorisation domain name
                AuthorisationDomainRegion:
                    type: string
                    description: The authorisation domain region
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorisationDomainName:
            maxLength: 40
            type: string
            description: Authorisation Domain Name
        AuthorisationDomainRequest:
            required:
                - AuthorisationDomainName
                - AuthorisationDomainRegion
            type: object
            properties:
                AuthorisationDomainDescription:
                    type: string
                    description: The authorisation domain description
                AuthorisationDomainName:
                    maxLength: 30
                    minLength: 1
                    type: string
                    description: The authorisation domain name
                AuthorisationDomainRegion:
                    minLength: 2
                    type: string
                    description: The authorisation domain region
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorisationDomainRole:
            type: object
            properties:
                AuthorisationDomainName:
                    type: string
                    description: The authorisation domain name
                AuthorisationDomainRoleDescription:
                    type: string
                    description: The authorisation domain role description
                AuthorisationDomainRoleName:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                Exclusive:
                    $ref: '#/components/schemas/ExclusiveAuthorisationDomainRole'
                RoleType:
                    $ref: '#/components/schemas/RoleTypeEnum'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorisationDomainRoleName:
            maxLength: 60
            minLength: 1
            type: string
            description: The authorisation domain role name
            example: PAGTO
        AuthorisationDomainRoleRequest:
            required:
                - AuthorisationDomainRoleName
                - AuthorisationDomainName
            type: object
            properties:
                AuthorisationDomainName:
                    minLength: 1
                    type: string
                    description: The authorisation domain name
                AuthorisationDomainRoleDescription:
                    type: string
                    default: ""
                    description: The authorisation domain role description
                AuthorisationDomainRoleName:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                Exclusive:
                    $ref: '#/components/schemas/ExclusiveAuthorisationDomainRole'
                RoleType:
                    $ref: '#/components/schemas/RoleTypeEnum'
        AuthorisationDomainRolesPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationDomainRole'
        AuthorisationDomainSystem:
            type: object
            properties:
                Description:
                    $ref: '#/components/schemas/AuthorisationDomainSystemDescription'
                Name:
                    $ref: '#/components/schemas/AuthorisationDomainSystemName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                SystemID:
                    $ref: '#/components/schemas/AuthorisationDomainSystemID'
        AuthorisationDomainSystemDescription:
            maxLength: 255
            type: string
            description: The description of the authorisation domain user type
        AuthorisationDomainSystemID:
            maxLength: 40
            type: string
            description: Unique authorisation domain system UUID
        AuthorisationDomainSystemName:
            maxLength: 255
            type: string
            description: The name of the authorisation domain user type
        AuthorisationDomainSystemRequest:
            required:
                - Name
                - Status
            type: object
            properties:
                Description:
                    $ref: '#/components/schemas/AuthorisationDomainSystemDescription'
                Name:
                    $ref: '#/components/schemas/AuthorisationDomainSystemName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorisationDomainSystemsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationDomainSystem'
        AuthorisationDomainUser:
            type: object
            properties:
                AuthorisationDomain:
                    type: string
                    description: The authorisation domain for this user
                AuthorisationDomainRole:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                AuthorisationDomainUserId:
                    type: string
                    description: Unique record ID
                ContactRole:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeName'
                Email:
                    type: string
                    description: The user email address
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                System:
                    $ref: '#/components/schemas/AuthorisationDomainSystemName'
                SystemID:
                    $ref: '#/components/schemas/AuthorisationDomainSystemID'
                UserTypeID:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
        AuthorisationDomainUserAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/AuthorisationDomainUser'
        AuthorisationDomainUserCreateRequest:
            required:
                - Email
                - AuthorisationDomainRole
            type: object
            properties:
                AuthorisationDomainRole:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                ContactRole:
                    type: string
                    description: The role of the contact
                    deprecated: true
                Email:
                    pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
                    type: string
                    description: The user email address
                System:
                    type: string
                    description: The system to which the domain user belongs to
                    deprecated: true
                SystemID:
                    $ref: '#/components/schemas/AuthorisationDomainSystemID'
                UserTypeID:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
        AuthorisationDomainUserId:
            maxLength: 50
            type: string
            description: Unique record ID to identify Domain user
        AuthorisationDomainUserType:
            type: object
            properties:
                AuthorisationDomainUserTypeID:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
                AuthorisationServerAccess:
                    $ref: '#/components/schemas/AccessEnum'
                Description:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeDescription'
                DirectoryAccess:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeDirectoryAccess'
                DomainUserAccess:
                    $ref: '#/components/schemas/AccessEnum'
                Name:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeName'
                OrganisationCertificatesAccess:
                    $ref: '#/components/schemas/AccessEnum'
                OrganisationContactsAccess:
                    $ref: '#/components/schemas/AccessEnum'
                ParentRole:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
                ReceiveEmailNotifications:
                    $ref: '#/components/schemas/ReceiveEmailNotifications'
                SoftwareStatementAccess:
                    $ref: '#/components/schemas/AccessEnum'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                SystemID:
                    $ref: '#/components/schemas/AuthorisationDomainSystemID'
        AuthorisationDomainUserTypeDescription:
            maxLength: 255
            type: string
            description: The description of the authorisation domain user type
        AuthorisationDomainUserTypeDirectoryAccess:
            type: boolean
            description: If the user type grants read access to the directory
        AuthorisationDomainUserTypeID:
            maxLength: 40
            type: string
            description: Unique authorisation domain user type UUID
        AuthorisationDomainUserTypeName:
            maxLength: 255
            type: string
            description: The name of the authorisation domain user type
        AuthorisationDomainUserTypeRequest:
            required:
                - Name
                - SystemID
                - DirectoryAccess
                - ReceiveEmailNotifications
                - OrganisationCertificatesAccess
                - OrganisationContactsAccess
                - DomainUserAccess
                - SoftwareStatementAccess
                - AuthorisationServerAccess
                - Status
            type: object
            properties:
                AuthorisationServerAccess:
                    $ref: '#/components/schemas/AccessEnum'
                Description:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeDescription'
                DirectoryAccess:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeDirectoryAccess'
                DomainUserAccess:
                    $ref: '#/components/schemas/AccessEnum'
                Name:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeName'
                OrganisationCertificatesAccess:
                    $ref: '#/components/schemas/AccessEnum'
                OrganisationContactsAccess:
                    $ref: '#/components/schemas/AccessEnum'
                ParentRole:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
                ReceiveEmailNotifications:
                    $ref: '#/components/schemas/ReceiveEmailNotifications'
                SoftwareStatementAccess:
                    $ref: '#/components/schemas/AccessEnum'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                SystemID:
                    $ref: '#/components/schemas/AuthorisationDomainSystemID'
        AuthorisationDomainUserTypesPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationDomainUserType'
        AuthorisationDomainUserUpdateRequest:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorisationDomainUsersPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationDomainUser'
        AuthorisationDomainsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationDomain'
        AuthorisationServer:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuthorisationServerDetails'
            properties:
                ApiResources:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiResource'
                AuthorisationServerCertifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationServerCertification'
                Flags:
                    $ref: '#/components/schemas/FlagArray'
        AuthorisationServerCertification:
            type: object
            properties:
                AuthorisationServerId:
                    $ref: '#/components/schemas/AuthorisationServerId'
                CertificationExpirationDate:
                    $ref: '#/components/schemas/CertificationExpirationDate'
                CertificationId:
                    $ref: '#/components/schemas/AuthorisationServerCertificationId'
                CertificationStartDate:
                    $ref: '#/components/schemas/CertificationStartDate'
                CertificationURI:
                    $ref: '#/components/schemas/ApiCertificationUri'
                ProfileType:
                    $ref: '#/components/schemas/ProfileType'
                ProfileVariant:
                    $ref: '#/components/schemas/ProfileVariant'
                ProfileVersion:
                    type: number
                    description: The version number of the certification
                Status:
                    enum:
                        - Awaiting Certification
                        - Certified
                        - Deprecated
                        - Rejected
                        - Self-Certified
                    type: string
                    default: Awaiting Certification
                    description: Is this certification current or expired
        AuthorisationServerCertificationAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/AuthorisationServerCertification'
        AuthorisationServerCertificationId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the auth server certification
        AuthorisationServerCertificationRequest:
            type: object
            properties:
                CertificationStartDate:
                    maxLength: 10
                    pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
                    type: string
                CertificationURI:
                    $ref: '#/components/schemas/ApiCertificationUri'
                ProfileType:
                    $ref: '#/components/schemas/ProfileType'
                ProfileVariant:
                    $ref: '#/components/schemas/ProfileVariant'
                ProfileVersion:
                    type: number
                    description: The version number of the certification
                Status:
                    enum:
                        - Awaiting Certification
                        - Certified
                        - Deprecated
                        - Rejected
                        - Self-Certified
                    type: string
                    default: Awaiting Certification
                    description: Is this certification current or expired
        AuthorisationServerCertifications:
            type: array
            items:
                $ref: '#/components/schemas/AuthorisationServerCertification'
            description: The list of certifications for a given authorisation server
        AuthorisationServerDetails:
            type: object
            properties:
                AuthorisationServerId:
                    $ref: '#/components/schemas/AuthorisationServerId'
                AutoRegistrationNotificationWebhook:
                    $ref: '#/components/schemas/AutoRegistrationNotificationWebhook'
                AutoRegistrationSupported:
                    $ref: '#/components/schemas/AutoRegistrationSupported'
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                CustomerFriendlyDescription:
                    $ref: '#/components/schemas/CustomerFriendlyDescription'
                CustomerFriendlyLogoUri:
                    $ref: '#/components/schemas/LogoUri'
                CustomerFriendlyName:
                    $ref: '#/components/schemas/CustomerFriendlyName'
                DeprecatedDate:
                    $ref: '#/components/schemas/AuthDeprecatedDate'
                DeveloperPortalUri:
                    $ref: '#/components/schemas/DeveloperPortalUri'
                FederationEndpoint:
                    $ref: '#/components/schemas/FederationEndpoint'
                FederationId:
                    $ref: '#/components/schemas/FederationId'
                Issuer:
                    $ref: '#/components/schemas/Issuer'
                NotificationWebhook:
                    $ref: '#/components/schemas/SnsNotificationWebhookUri'
                NotificationWebhookAddedDate:
                    $ref: '#/components/schemas/NotificationWebhookAddedDate'
                NotificationWebhookStatus:
                    $ref: '#/components/schemas/NotificationWebhookStatusEnum'
                OpenIDDiscoveryDocument:
                    $ref: '#/components/schemas/OpenIDDiscoveryDocument'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                ParentAuthorisationServerId:
                    $ref: '#/components/schemas/AuthorisationServerId'
                PayloadSigningCertLocationUri:
                    $ref: '#/components/schemas/PayloadSigningCertLocationUri'
                RetirementDate:
                    $ref: '#/components/schemas/AuthRetirementDate'
                SupersededByAuthorisationServerId:
                    $ref: '#/components/schemas/AuthSupersededById'
                SupportsCiba:
                    $ref: '#/components/schemas/SupportsCiba'
                SupportsDCR:
                    $ref: '#/components/schemas/SupportsDCR'
                SupportsRedirect:
                    $ref: '#/components/schemas/SupportsRedirect'
                TermsOfServiceUri:
                    $ref: '#/components/schemas/TermsOfServiceUri'
        AuthorisationServerDetailsAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/AuthorisationServerDetails'
            properties:
                Flags:
                    $ref: '#/components/schemas/FlagArray'
        AuthorisationServerExportOpenData:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuthorisationServerDetails'
            properties:
                ApiResources:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiResource'
                AuthorisationServerCertifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorisationServerCertification'
                Flags:
                    $ref: '#/components/schemas/ExportFlagObject'
        AuthorisationServerId:
            maxLength: 40
            type: string
        AuthorisationServerRequest:
            required:
                - AutoRegistrationSupported
                - CustomerFriendlyName
                - CustomerFriendlyDescription
            type: object
            properties:
                AutoRegistrationNotificationWebhook:
                    $ref: '#/components/schemas/AutoRegistrationNotificationWebhook'
                AutoRegistrationSupported:
                    $ref: '#/components/schemas/AutoRegistrationSupported'
                CustomerFriendlyDescription:
                    $ref: '#/components/schemas/CustomerFriendlyDescription'
                CustomerFriendlyLogoUri:
                    $ref: '#/components/schemas/LogoUri'
                CustomerFriendlyName:
                    $ref: '#/components/schemas/CustomerFriendlyName'
                DeprecatedDate:
                    $ref: '#/components/schemas/AuthDeprecatedDate'
                DeveloperPortalUri:
                    $ref: '#/components/schemas/DeveloperPortalUri'
                FederationId:
                    $ref: '#/components/schemas/FederationId'
                Flags:
                    $ref: '#/components/schemas/FlagIDArray'
                NotificationWebhook:
                    $ref: '#/components/schemas/SnsNotificationWebhookUri'
                OpenIDDiscoveryDocument:
                    $ref: '#/components/schemas/OpenIDDiscoveryDocument'
                ParentAuthorisationServerId:
                    $ref: '#/components/schemas/AuthorisationServerId'
                PayloadSigningCertLocationUri:
                    $ref: '#/components/schemas/PayloadSigningCertLocationUri'
                RetirementDate:
                    $ref: '#/components/schemas/AuthRetirementDate'
                SupersededByAuthorisationServerId:
                    $ref: '#/components/schemas/AuthSupersededById'
                TermsOfServiceUri:
                    $ref: '#/components/schemas/TermsOfServiceUri'
        AuthorisationServerResponse:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuthorisationServer'
            properties:
                OperationWarnings:
                    type: array
                    items:
                        $ref: '#/components/schemas/OperationWarning'
        AuthorisationServers:
            type: array
            items:
                $ref: '#/components/schemas/AuthorisationServer'
        AuthorisationServersExportOpenData:
            type: array
            items:
                $ref: '#/components/schemas/AuthorisationServerExportOpenData'
        AuthoritiesPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Authority'
        Authority:
            type: object
            properties:
                AuthorityCode:
                    maxLength: 40
                    type: string
                    description: Code of the Authority i.e. FCA, etc
                AuthorityCountry:
                    maxLength: 255
                    type: string
                    description: country of the Authority
                AuthorityId:
                    $ref: '#/components/schemas/AuthorityId'
                AuthorityName:
                    maxLength: 255
                    type: string
                    description: Name of the Authority i.e. FCA, etc
                AuthorityUri:
                    type: string
                    description: URI of the authority
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorityAuthorisationDomain:
            type: object
            properties:
                AuthorisationDomainName:
                    type: string
                    description: The authorisation domain name
                AuthorityAuthorisationDomainId:
                    type: string
                    description: The GUID of the Authority-Domain mapping
                AuthorityId:
                    type: string
                    description: The GUID of the Authority
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorityAuthorisationDomainId:
            maxLength: 50
            type: string
            description: Mapping ID between Authority and Authorisation Domain
        AuthorityAuthorisationDomainRequest:
            required:
                - AuthorisationDomainName
            type: object
            properties:
                AuthorisationDomainName:
                    minLength: 1
                    type: string
                    description: The authorisation domain name
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorityAuthorisationDomainsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorityAuthorisationDomain'
        AuthorityId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the Authorisation reference schema
        AuthorityRequest:
            required:
                - AuthorityName
                - AuthorityCode
                - AuthorityUri
                - AuthorityCountry
            type: object
            properties:
                AuthorityCode:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Code of the Authority i.e. GBFCA, etc
                AuthorityCountry:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: Country of the authority
                AuthorityName:
                    maxLength: 40
                    minLength: 1
                    type: string
                    description: The ID of the Authority i.e GBFCA, etc
                AuthorityUri:
                    maxLength: 255
                    pattern: ^(http://|https://).*
                    type: string
                    description: URI of the authority
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        AuthorizationDetailsTypes:
            type: array
            items:
                type: string
            description: Defines whether or not a client is allowed to send RAR requests with authorization_details of specific types
        AutoRegistrationNotificationWebhook:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI to subscribe to the software statement onboarding webhook
        AutoRegistrationSupported:
            type: boolean
            default: false
            description: Flag to denote if this authorisation server supports the automatic onboarding of software statement clients
        CertificateOrKey:
            type: object
            properties:
                ClientName:
                    maxLength: 40
                    type: string
                ExpiryDateTime:
                    maxLength: 30
                    type: string
                JwkPath:
                    maxLength: 255
                    type: string
                    description: Used to display path to JWKS containing this certificate
                OrgJwkPath:
                    maxLength: 255
                    type: string
                    description: Used to display path to Org JWKS containing org certificates
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                RevokedDateTime:
                    maxLength: 30
                    type: string
                SignedCertPath:
                    maxLength: 255
                    type: string
                    description: Used to display location of the signed certificate in PEM format
                SoftwareStatementIds:
                    type: array
                    items:
                        $ref: '#/components/schemas/SoftwareStatementId'
                Status:
                    maxLength: 40
                    type: string
                ValidFromDateTime:
                    maxLength: 30
                    type: string
                e:
                    maxLength: 255
                    type: string
                keyType:
                    maxLength: 255
                    type: string
                kid:
                    maxLength: 255
                    type: string
                kty:
                    maxLength: 255
                    type: string
                "n":
                    maxLength: 255
                    type: string
                use:
                    maxLength: 255
                    type: string
                x5c:
                    type: array
                    items:
                        maxLength: 255
                        type: string
                        description: A PKIX certificate [RFC5280]
                x5t:
                    maxLength: 255
                    type: string
                x5thashS256:
                    maxLength: 255
                    type: string
                x5u:
                    maxLength: 255
                    type: string
        CertificateOrKeyAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/CertificateOrKey'
        CertificateOrKeyId:
            maxLength: 255
            type: string
        CertificateOrKeyOrJWT:
            type: string
        CertificatesOrKeys:
            type: array
            items:
                $ref: '#/components/schemas/CertificateOrKey'
        CertificationDurationDays:
            maximum: 36500
            type: integer
            description: The number of days a certification is valid for up to a maximum of 100 years
        CertificationExpirationDate:
            type: string
            description: JSONDatetime of certification expiration date
        CertificationManager:
            type: object
            allOf:
                - $ref: '#/components/schemas/UserDetails'
        CertificationManagerCreationRequest:
            required:
                - Email
            type: object
            properties:
                Email:
                    minLength: 1
                    type: string
                    description: The super user email address
        CertificationManagers:
            type: array
            items:
                $ref: '#/components/schemas/CertificationManager'
        CertificationStartDate:
            pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
            type: string
            description: JSONDatetime of certification start date
        CertificationType:
            type: object
            properties:
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                CreatedBy:
                    $ref: '#/components/schemas/CreatedBy'
                Description:
                    $ref: '#/components/schemas/Description'
                ResourceType:
                    $ref: '#/components/schemas/ResourceType'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                TypeID:
                    $ref: '#/components/schemas/TypeID'
                TypeName:
                    $ref: '#/components/schemas/TypeName'
        CertificationTypePage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/CertificationType'
        CertificationTypeRequest:
            required:
                - TypeName
                - ResourceType
            type: object
            properties:
                Description:
                    $ref: '#/components/schemas/Description'
                ResourceType:
                    $ref: '#/components/schemas/ResourceType'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                TypeName:
                    $ref: '#/components/schemas/TypeName'
        CertificationTypeVariant:
            type: object
            properties:
                CertificationDurationDays:
                    $ref: '#/components/schemas/CertificationDurationDays'
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                CreatedBy:
                    $ref: '#/components/schemas/CreatedBy'
                Description:
                    $ref: '#/components/schemas/Description'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                TypeID:
                    $ref: '#/components/schemas/TypeID'
                VariantID:
                    $ref: '#/components/schemas/VariantID'
                VariantName:
                    $ref: '#/components/schemas/VariantName'
        CertificationTypeVariantPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/CertificationTypeVariant'
        CertificationTypeVariantRequest:
            required:
                - VariantName
                - CertificationDurationDays
            type: object
            properties:
                CertificationDurationDays:
                    $ref: '#/components/schemas/CertificationDurationDays'
                Description:
                    $ref: '#/components/schemas/Description'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                VariantName:
                    $ref: '#/components/schemas/VariantName'
        ClientCreationRequest:
            required:
                - id_token_signed_response_alg
                - token_endpoint_auth_method
                - jwks_uri
                - redirect_uris
                - response_types
                - grant_types
                - scope
                - organisation_id
                - organisation_name
                - organisation_number
                - software_roles
            type: object
            properties:
                additional_software_metadata:
                    type: object
                    additionalProperties: {}
                authorization_details_types:
                    $ref: '#/components/schemas/AuthorizationDetailsTypes'
                client_id:
                    $ref: '#/components/schemas/ClientId'
                grant_types:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: grant_types uri must be provided. For client_credentials this should be array containing ["client_credentials"]
                id_token_signed_response_alg:
                    $ref: '#/components/schemas/IdTokenSignedResponseAlgorithm'
                jwks_uri:
                    pattern: ^(http://|https://).*
                    type: string
                    description: Link to the application active jwks
                organisation_id:
                    $ref: '#/components/schemas/OrganisationId'
                organisation_name:
                    maxLength: 255
                    minLength: 1
                    type: string
                organisation_number:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: the cnpj number of the organisation
                post_logout_redirect_uris:
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                redirect_uris:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: redirect_uris uri must be provided. For client_credentials this should be an empty array.
                require_signed_request_object:
                    $ref: '#/components/schemas/RequireSignedRequestObject'
                response_types:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: response_types uri must be provided. For client_credentials this should be an empty array
                scope:
                    type: string
                    description: scopes to be tagged
                software_description:
                    maxLength: 255
                    type: string
                software_id:
                    maxLength: 255
                    minLength: 1
                    type: string
                software_name:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Software Statement client name
                software_roles:
                    type: array
                    items:
                        type: string
                    description: array of software roles
                software_statement:
                    $ref: '#/components/schemas/SoftwareStatementAssertion'
                tls_client_auth_subject_dn:
                    maxLength: 250
                    type: string
                    description: The DN of the certificate that will be used to authenticate to this client
                tls_client_certificate_bound_access_tokens:
                    $ref: '#/components/schemas/TlsClientCertificateBoundAccessTokens'
                token_endpoint_auth_method:
                    $ref: '#/components/schemas/TokenEndpointAuthMethod'
        ClientCreationResponse:
            type: object
            properties:
                application_type:
                    enum:
                        - web
                    type: string
                    default: web
                    description: OIDC application type response
                authorization_details_types:
                    $ref: '#/components/schemas/AuthorizationDetailsTypes'
                authorization_signed_response_alg:
                    type: string
                backchannel_user_code_parameter:
                    type: boolean
                client_id:
                    type: string
                client_id_issued_at:
                    type: number
                client_secret:
                    type: string
                client_secret_expires_at:
                    type: number
                grant_types:
                    type: array
                    items:
                        type: string
                    description: grant_types
                id_token_signed_response_alg:
                    $ref: '#/components/schemas/IdTokenSignedResponseAlgorithm'
                introspection_endpoint_auth_method:
                    type: string
                jwks_uri:
                    type: string
                organisation_id:
                    $ref: '#/components/schemas/OrganisationId'
                organisation_name:
                    maxLength: 255
                    minLength: 1
                    type: string
                organisation_number:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: the cnpj number of the organisation
                post_logout_redirect_uris:
                    type: array
                    items:
                        type: string
                    description: post_logout_redirect_uris
                redirect_uris:
                    type: array
                    items:
                        type: string
                    description: redirect_uris
                registration_access_token:
                    type: string
                    description: token used to manage client post creation
                registration_client_uri:
                    type: string
                    description: management uri location to manage client post creation
                request_object_signing_alg:
                    type: string
                require_auth_time:
                    type: boolean
                require_pushed_authorization_requests:
                    type: boolean
                require_signed_request_object:
                    type: boolean
                response_types:
                    type: array
                    items:
                        type: string
                    description: response_types
                revocation_endpoint_auth_method:
                    type: string
                scope:
                    type: string
                software_description:
                    maxLength: 255
                    type: string
                software_id:
                    maxLength: 255
                    minLength: 1
                    type: string
                software_name:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Software Statement client name
                software_roles:
                    type: array
                    items:
                        type: string
                    description: array of software roles
                subject_type:
                    type: string
                tls_client_certificate_bound_access_token:
                    type: boolean
                tls_client_certificate_bound_access_tokens:
                    $ref: '#/components/schemas/TlsClientCertificateBoundAccessTokens'
                token_endpoint_auth_method:
                    $ref: '#/components/schemas/TokenEndpointAuthMethod'
        ClientId:
            maxLength: 255
            type: string
            description: Software Statement client Id
        ClientName:
            maxLength: 255
            type: string
            description: Software Statement client name
        ClientUpdateRequest:
            required:
                - id_token_signed_response_alg
                - token_endpoint_auth_method
                - jwks_uri
                - redirect_uris
                - response_types
                - grant_types
                - scope
                - organisation_id
                - organisation_name
                - organisation_number
                - software_roles
                - client_id
                - client_secret
            properties:
                additional_software_metadata:
                    type: object
                    additionalProperties: {}
                authorization_details_types:
                    $ref: '#/components/schemas/AuthorizationDetailsTypes'
                client_id:
                    type: string
                client_secret:
                    type: string
                grant_types:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: grant_types uri must be provided. For client_credentials this should be array containing ["client_credentials"]
                id_token_signed_response_alg:
                    $ref: '#/components/schemas/IdTokenSignedResponseAlgorithm'
                jwks_uri:
                    pattern: ^(http://|https://).*
                    type: string
                    description: Link to the application active jwks
                organisation_id:
                    $ref: '#/components/schemas/OrganisationId'
                organisation_name:
                    maxLength: 255
                    minLength: 1
                    type: string
                organisation_number:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: the cnpj number of the organisation
                post_logout_redirect_uris:
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                redirect_uris:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: redirect_uris uri must be provided. For client_credentials this should be an empty array.
                require_signed_request_object:
                    $ref: '#/components/schemas/RequireSignedRequestObject'
                response_types:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: response_types uri must be provided. For client_credentials this should be an empty array
                scope:
                    type: string
                    description: scopes to be tagged
                software_description:
                    maxLength: 255
                    type: string
                software_id:
                    $ref: '#/components/schemas/SoftwareStatementId'
                software_name:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Software Statement client name
                software_roles:
                    type: array
                    items:
                        type: string
                    description: array of software roles
                software_statement:
                    $ref: '#/components/schemas/SoftwareStatementAssertion'
                tls_client_auth_subject_dn:
                    maxLength: 250
                    type: string
                    description: The DN of the certificate that will be used to authenticate to this client
                tls_client_certificate_bound_access_tokens:
                    $ref: '#/components/schemas/TlsClientCertificateBoundAccessTokens'
                token_endpoint_auth_method:
                    $ref: '#/components/schemas/TokenEndpointAuthMethod'
        ClientUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: The Software Statement client compliant URI
        ConfigJson:
            type: string
            description: JSON containing all Federation Configurations
        Contact:
            type: object
            properties:
                AdditionalInformation:
                    maxLength: 65535
                    type: string
                    description: Any additional user information
                AddressLine1:
                    maxLength: 255
                    type: string
                    description: Address line 1
                AddressLine2:
                    maxLength: 255
                    type: string
                    description: Address line 2
                City:
                    maxLength: 255
                    type: string
                    description: City
                ContactId:
                    type: string
                    description: Unique contact ID for the row.
                ContactType:
                    $ref: '#/components/schemas/ContactType'
                Country:
                    maxLength: 255
                    type: string
                    description: Country
                Department:
                    maxLength: 255
                    type: string
                EmailAddress:
                    maxLength: 255
                    pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
                    type: string
                FirstName:
                    maxLength: 255
                    type: string
                LastName:
                    maxLength: 255
                    type: string
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                PgpPublicKey:
                    maxLength: 65535
                    type: string
                    description: A PGP Public Key in text form
                PhoneNumber:
                    maxLength: 18
                    type: string
                Postcode:
                    maxLength: 40
                    type: string
                    description: Postcode
        ContactAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/Contact'
        ContactId:
            maxLength: 255
            type: string
        ContactRequest:
            required:
                - ContactType
                - EmailAddress
                - PhoneNumber
            type: object
            properties:
                AdditionalInformation:
                    maxLength: 65535
                    type: string
                    description: Any additional user information
                AddressLine1:
                    maxLength: 255
                    type: string
                    description: Address line 1
                AddressLine2:
                    maxLength: 255
                    type: string
                    description: Address line 2
                City:
                    maxLength: 255
                    type: string
                    description: City
                ContactType:
                    $ref: '#/components/schemas/ContactType'
                Country:
                    maxLength: 255
                    type: string
                    description: Country
                Department:
                    maxLength: 255
                    type: string
                EmailAddress:
                    maxLength: 255
                    pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
                    type: string
                FirstName:
                    maxLength: 255
                    type: string
                LastName:
                    maxLength: 255
                    type: string
                PgpPublicKey:
                    maxLength: 65535
                    type: string
                    description: A PGP Public Key in text form
                PhoneNumber:
                    maxLength: 18
                    minLength: 1
                    type: string
                Postcode:
                    maxLength: 40
                    type: string
                    description: Postcode
        ContactType:
            type: string
            default: Business
            description: The type of Contact, default contact type is Business.
        Contacts:
            type: array
            items:
                $ref: '#/components/schemas/Contact'
            description: The list of contacts
        ContactsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Contact'
        CreatedAt:
            type: string
            format: date-time
            readOnly: true
        CreatedBy:
            type: string
            description: User who created the certification type
        CustomerFriendlyDescription:
            maxLength: 255
            minLength: 1
            type: string
            description: A customer friendly description
        CustomerFriendlyName:
            maxLength: 255
            minLength: 1
            type: string
        DashboardAuthServerFederation:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuthServerFederation'
            properties:
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
        DashboardAuthServerFederationsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/DashboardAuthServerFederation'
        Description:
            type: string
            description: Description of the certification type
        DeveloperPortalUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI
            nullable: true
        DocusignPost:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/DocusignPostData'
                event:
                    type: string
                    description: The docusign event type
        DocusignPostData:
            type: object
            properties:
                envelopeId:
                    type: string
                    description: The envelope ID
                envelopeSummary:
                    $ref: '#/components/schemas/EnvelopeSummary'
            description: Data associated with the docusign event
        DomainRoleDetail:
            type: object
            properties:
                AuthorisationDomainName:
                    type: string
                AuthorisationDomainRoleName:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                ContactRole:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                System:
                    $ref: '#/components/schemas/AuthorisationDomainSystemName'
                UserTypeID:
                    $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
        EnvelopeSummary:
            type: object
            properties:
                status:
                    type: string
                    description: The status of the envelope
            description: Summary of the envelope
        EssPollResponse:
            type: object
            properties:
                EssEnvelopeId:
                    $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
                ExternalSigningServiceEnvelopeStatus:
                    $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
        EssPollResponses:
            type: array
            items:
                $ref: '#/components/schemas/EssPollResponse'
        EssSignRequest:
            type: object
            properties:
                NoOfSigners:
                    type: integer
                TnCId:
                    $ref: '#/components/schemas/TnCId'
        ExclusiveAuthorisationDomainRole:
            type: boolean
            description: An organization that claims an exclusive role cannot claim any other roles
        ExportFlagObject:
            type: object
            description: JSON key-value pairs containing the flags the resource owns grouped by flag type
            example:
                Business Accounts:
                    - multiple approvals
                    - Temporization
                Personal Accounts:
                    - multiple approvals
                    - Temporization
        ExternalSigningService:
            type: object
            properties:
                ExternalSigningServiceEmailSubject:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: The Subject of the Email for External Signing Service
                ExternalSigningServiceName:
                    $ref: '#/components/schemas/ExternalSigningServiceName'
                ExternalSigningServiceSignerTemplateConfig:
                    $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'
                ExternalSigningServiceSubject:
                    minLength: 1
                    type: string
                    description: The Subject of the External Signing Service
        ExternalSigningServiceEnvelopeId:
            type: string
            description: The envelope id of the ess signing request
        ExternalSigningServiceEnvelopeStatus:
            enum:
                - completed
                - created
                - declined
                - deleted
                - delivered
                - processing
                - sent
                - signed
                - template
                - voided
                - expired
                - reissued
        ExternalSigningServiceName:
            enum:
                - DocuSign
            type: string
            description: The Name of the External Signing Service
        ExternalSigningServiceSignerTemplateConfig:
            type: object
            properties:
                Signer1TemplateId:
                    minLength: 1
                    type: string
                    description: Template ID for 1 signer
                Signer1Version:
                    type: integer
                    description: Version of the TnC document
                    readOnly: true
                Signer2TemplateId:
                    minLength: 1
                    type: string
                    description: Template ID for 2 signers
                Signer2Version:
                    type: integer
                    description: Version of the TnC document
                    readOnly: true
                Signer3TemplateId:
                    minLength: 1
                    type: string
                    description: Template ID for 3 signers
                Signer3Version:
                    type: integer
                    description: Version of the TnC document
                    readOnly: true
                Signer4TemplateId:
                    minLength: 1
                    type: string
                    description: Template ID for 4 signers
                Signer4Version:
                    type: integer
                    description: Version of the TnC document
                    readOnly: true
                Signer5TemplateId:
                    minLength: 1
                    type: string
                    description: Template ID for 5 signers
                Signer5Version:
                    type: integer
                    description: Version of the TnC document
                    readOnly: true
                Signer6TemplateId:
                    minLength: 1
                    type: string
                    description: Template ID for 6 signers
                Signer6Version:
                    type: integer
                    description: Version of the TnC document
                    readOnly: true
        FederationConfigId:
            maxLength: 36
            type: string
            description: Unique Federation Configuration Id
        FederationContact:
            maxLength: 255
            type: string
            description: The contact of the federation
        FederationContacts:
            type: array
            items:
                $ref: '#/components/schemas/FederationContact'
            description: The contacts of the federation
        FederationDescription:
            maxLength: 255
            type: string
            description: The description of the federation
        FederationEndpoint:
            maxLength: 255
            pattern: ^(https://).*
            type: string
            format: uri
            description: The federation endpoint for the Authorisation Server
        FederationFetchEndpoint:
            maxLength: 255
            type: string
            format: uri
            description: The fetch endpoint of the federation
        FederationHomepageUri:
            maxLength: 255
            type: string
            description: The homepage uri of the federation
        FederationId:
            maxLength: 36
            type: string
            format: uuid
            description: The ID of the federation
        FederationItem:
            type: object
            properties:
                Contacts:
                    $ref: '#/components/schemas/FederationContacts'
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                Description:
                    $ref: '#/components/schemas/FederationDescription'
                FederationFetchEndpoint:
                    $ref: '#/components/schemas/FederationFetchEndpoint'
                FederationListEndpoint:
                    $ref: '#/components/schemas/FederationListEndpoint'
                FederationResolveEndpoint:
                    $ref: '#/components/schemas/FederationResolveEndpoint'
                FederationTrustMarkListEndpoint:
                    $ref: '#/components/schemas/FederationTrustMarkListEndpoint'
                FederationTrustMarkStatusEndpoint:
                    $ref: '#/components/schemas/FederationTrustMarkStatusEndpoint'
                HomepageUri:
                    $ref: '#/components/schemas/FederationHomepageUri'
                LogoUri:
                    $ref: '#/components/schemas/FederationLogoUri'
                Name:
                    $ref: '#/components/schemas/FederationName'
                OrganizationName:
                    $ref: '#/components/schemas/FederationOrganizationName'
                PolicyUri:
                    $ref: '#/components/schemas/FederationPolicyUri'
                ReferenceID:
                    $ref: '#/components/schemas/FederationId'
                RemoteTrustAnchor:
                    $ref: '#/components/schemas/FederationRemoteTrustAnchor'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        FederationListEndpoint:
            maxLength: 255
            type: string
            format: uri
            description: The list endpoint of the federation
        FederationLogoUri:
            maxLength: 255
            type: string
            description: The logo uri of the federation
        FederationMetadataPolicyItem:
            type: object
            properties:
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                FederationID:
                    $ref: '#/components/schemas/FederationId'
                Policy:
                    $ref: '#/components/schemas/MetadataPolicyJson'
                ReferenceID:
                    $ref: '#/components/schemas/MetadataPolicyId'
                Status:
                    $ref: '#/components/schemas/PolicyApprovalStatusEnum'
                Type:
                    $ref: '#/components/schemas/MetadataPolicyTypeEnum'
                Version:
                    $ref: '#/components/schemas/MetadataPolicyVersion'
        FederationMetadataPolicyPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/FederationMetadataPolicyItem'
        FederationMetadataPolicyRequest:
            required:
                - Type
                - Policy
                - Status
            type: object
            properties:
                Policy:
                    $ref: '#/components/schemas/MetadataPolicyJson'
                Status:
                    $ref: '#/components/schemas/PolicyApprovalStatusEnum'
                Type:
                    $ref: '#/components/schemas/MetadataPolicyTypeEnum'
        FederationName:
            maxLength: 255
            type: string
            description: The name of the federation
        FederationOrganizationName:
            maxLength: 255
            type: string
            description: The organization name of the federation
        FederationPolicyUri:
            maxLength: 255
            type: string
            description: The policy uri of the federation
        FederationRemoteTrustAnchor:
            maxLength: 255
            type: string
            format: uri
            description: The uri for a remote trust anchor
        FederationRequest:
            required:
                - Name
            type: object
            properties:
                Contacts:
                    $ref: '#/components/schemas/FederationContacts'
                Description:
                    $ref: '#/components/schemas/FederationDescription'
                HomepageUri:
                    $ref: '#/components/schemas/FederationHomepageUri'
                LogoUri:
                    $ref: '#/components/schemas/FederationLogoUri'
                Name:
                    $ref: '#/components/schemas/FederationName'
                OrganizationName:
                    $ref: '#/components/schemas/FederationOrganizationName'
                PolicyUri:
                    $ref: '#/components/schemas/FederationPolicyUri'
                RemoteTrustAnchor:
                    $ref: '#/components/schemas/FederationRemoteTrustAnchor'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        FederationResolveEndpoint:
            maxLength: 255
            type: string
            format: uri
            description: The resolve endpoint of the federation
        FederationTrustMarkListEndpoint:
            maxLength: 255
            type: string
            format: uri
            description: The trust mark list endpoint of the federation
        FederationTrustMarkStatusEndpoint:
            maxLength: 255
            type: string
            format: uri
            description: The trust mark status endpoint of the federation
        FederationVersion:
            type: integer
            description: Version number of the Federation configuration
        FederationsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/FederationItem'
        Flag:
            type: object
            allOf:
                - $ref: '#/components/schemas/FlagRequest'
            properties:
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                Id:
                    $ref: '#/components/schemas/FlagID'
                UpdatedAt:
                    $ref: '#/components/schemas/UpdatedAt'
        FlagArray:
            type: array
            items:
                $ref: '#/components/schemas/Flag'
            readOnly: true
        FlagCascade:
            type: boolean
            default: false
            description: If set to true on an operation that would deactivate a flag, all references to this flag in other resources will be removed
        FlagDescription:
            maxLength: 255
            type: string
            description: The description of this flag
        FlagID:
            maxLength: 40
            type: string
            description: Unique ID of the flag
            example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        FlagIDArray:
            type: array
            items:
                $ref: '#/components/schemas/FlagID'
            writeOnly: true
        FlagName:
            maxLength: 255
            type: string
            description: The name of this flag
        FlagRequest:
            required:
                - Status
                - Name
                - Type
                - Value
            type: object
            properties:
                Description:
                    $ref: '#/components/schemas/FlagDescription'
                Name:
                    $ref: '#/components/schemas/FlagName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                Type:
                    $ref: '#/components/schemas/FlagType'
                Value:
                    $ref: '#/components/schemas/FlagValue'
        FlagType:
            enum:
                - Organisation
                - Software_Statement
                - Authorisation_Server
            type: string
            description: The type of this tag
        FlagUpdateRequest:
            required:
                - Cascade
                - Status
                - Name
                - Type
                - Value
            type: object
            allOf:
                - $ref: '#/components/schemas/FlagRequest'
            properties:
                Cascade:
                    $ref: '#/components/schemas/FlagCascade'
        FlagValue:
            maxLength: 255
            type: string
            description: The value of this flag
        FlagsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Flag'
        HttpResponseBody:
            type: object
            properties:
                errors:
                    type: array
                    items:
                        type: string
                    description: Validation Error messages
        IdTokenSignedResponseAlgorithm:
            enum:
                - PS256
                - RS256
            type: string
            default: PS256
            description: Signing algorithm that a client expects the server to return an id_token with. Must be PS256
        Introspection:
            type: object
            properties:
                active:
                    type: boolean
                    description: if the token has expired
                client_id:
                    maxLength: 255
                    type: string
                    description: id of client who owns the token
                exp:
                    type: string
                    description: expiration time in ms
                iat:
                    type: string
                    description: when the token was issued
                iss:
                    type: string
                    description: the issuer
                jti:
                    type: string
                    description: unique string
                scope:
                    type: string
                    description: scope
                sub:
                    type: string
                    description: subject of token (not always present, depending on the token)
                token_type:
                    type: string
                    description: type of token
        IntrospectionRequest:
            required:
                - token
            type: object
            properties:
                token:
                    minLength: 1
                    type: string
                    description: Oauth 2.0 token to be introspected
        Issuer:
            type: string
            format: uri
            description: An issuer value pulled from the well-known endpoint
        JwksUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI string referencing the client's JSON Web Key (JWK) Set
        LogoUri:
            pattern: ^(http://|https://).*|(data:image/[a-zA-Z]+;base64,[A-Za-z0-9+/]*={0,2})$
            type: string
            format: uri
            description: A compliant URI
        MetadataId:
            maxLength: 40
            type: string
            description: Unique Metadata Id
        MetadataListResponse:
            type: array
            items:
                $ref: '#/components/schemas/MetadataResponse'
        MetadataPolicyId:
            maxLength: 36
            type: string
            description: The id of the metadata policy
        MetadataPolicyJson:
            type: string
            description: The json of the metadata policy
        MetadataPolicyTypeEnum:
            enum:
                - openid_relying_party
                - openid_provider
                - oauth_authorization_server
                - oauth_client
                - oauth_resource
                - federation_entity
            type: string
            description: The type of the metadata policy
        MetadataPolicyVersion:
            type: integer
            description: The version of the metadata policy
        MetadataRequest:
            type: object
            properties:
                Name:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: The name of the metadata object
                Type:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: The type of metadata i.e. scope, grant_type...
        MetadataResponse:
            type: object
            properties:
                DomainRoleName:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                MetadataId:
                    $ref: '#/components/schemas/MetadataId'
                Name:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: The name of the metadata object
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                Type:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: The type of metadata i.e. scope, grant_type...
        MetadataUpdateRequest:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        MtlsEndpointAliases:
            type: boolean
            default: true
            description: Is the client required to use endpoints defined in the Authorisation Server Discovery Document, or if non MTLS endpoints can be used
        NotificationWebhookAddedDate:
            type: string
            format: date
            description: Creation date
            example: "2021-01-30"
        NotificationWebhookStatusEnum:
            enum:
                - Pending
                - Confirmed
                - Deactivated
            type: string
            default: Pending
        OpErrorResponseBody:
            type: object
            properties:
                error:
                    type: string
                    description: Validation Error
                error_description:
                    type: string
                    description: Validation Error description
        OpenIDDiscoveryDocument:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            description: A compliant URI
        OpenidFederationEnabled:
            type: boolean
            default: false
            description: Is this software statement enabled for federation
        OpenidFederationEntityManagementType:
            enum:
                - openid_entity_federation_managed
                - openid_entity_self_managed
            type: string
            description: The type of federation management that applies to this software statement
        OperationWarning:
            enum:
                - IMAGE_UPLOAD_FAILURE_PLACEHOLDER_USED
                - IMAGE_VALIDATION_FAILURE_BAD_DATA_ENCODING_PLACEHOLDER_USED
                - IMAGE_VALIDATION_FAILURE_UNSUPPORTED_IMAGE_FORMAT_PLACEHOLDER_USED
                - IMAGE_VALIDATION_CONTENT_FAILURE_PLACEHOLDER_USED
                - IMAGE_VALIDATION_DIMENSIONS_FAILURE_PLACEHOLDER_USED
                - IMAGE_VALIDATION_CONTENT_WARNING_SUPERUSER_OVERRIDE
                - IMAGE_VALIDATION_DIMENSIONS_WARNING_SUPERUSER_OVERRIDE
            type: string
            description: A warning code that describes a warning condition that occurred during the last operation
        OrgAccessDetail:
            type: object
            properties:
                DomainRoleDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/DomainRoleDetail'
                    description: Array of domain, role and status of domain role mapping
                OrgAdmin:
                    type: boolean
                    description: Is the user the org admin of the current org
                OrgRegistrationNumber:
                    type: string
                    description: CNPJ/Registration number of the org
                OrganisationName:
                    maxLength: 255
                    type: string
                    description: Name of the organisation.
        OrgAdminUserCreateRequest:
            required:
                - UserEmail
            type: object
            properties:
                UserEmail:
                    pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
                    type: string
                    description: Admin user email address
        OrgLogoUri:
            pattern: ^(http://|https://).*|(data:image/[a-zA-Z]+;base64,[A-Za-z0-9+/]*={0,2})$
            type: string
            format: uri
            description: A compliant URI
        OrgTermsAndConditionsDetail:
            type: object
            properties:
                InitiatedBy:
                    type: string
                    description: Email of the user who initiated the External signing for this participant
                Role:
                    type: string
                    description: Role of the user who initiated the External signing for this participant
                TermsAndConditionsDetail:
                    $ref: '#/components/schemas/TermsAndConditionsDetail'
            description: Participant TnC details
        OrgTermsAndConditionsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrgTermsAndConditionsDetail'
        Organisation:
            type: object
            properties:
                AddressLine1:
                    maxLength: 255
                    type: string
                    description: Address line 1
                AddressLine2:
                    maxLength: 255
                    type: string
                    description: Address line 2
                City:
                    maxLength: 255
                    type: string
                    description: City
                CompanyRegister:
                    maxLength: 255
                    type: string
                    description: Legal company register for the country, i.e. Companies House
                Country:
                    maxLength: 255
                    type: string
                    description: Country
                CountryOfRegistration:
                    maxLength: 255
                    type: string
                    description: Country of registration for the org
                CreatedOn:
                    maxLength: 30
                    type: string
                    description: JSONDatetime of organisation creation.
                Flags:
                    $ref: '#/components/schemas/FlagArray'
                LegalEntityName:
                    maxLength: 255
                    type: string
                    description: Legal Entity name for the org. Usually the same as org name
                LogoUri:
                    $ref: '#/components/schemas/OrgLogoUri'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                OrganisationName:
                    maxLength: 255
                    type: string
                    description: Name of the organisation.
                ParentOrganisationReference:
                    maxLength: 65535
                    type: string
                    description: Parent Organisation Reference
                Postcode:
                    maxLength: 40
                    type: string
                    description: Postcode
                RegisteredName:
                    maxLength: 255
                    type: string
                RegistrationId:
                    maxLength: 40
                    type: string
                    description: Registered ID for the organisation i.e. Legal Entity identifier number
                RegistrationNumber:
                    maxLength: 255
                    type: string
                    description: Company registration number from company register i.e. Companies House registration number
                RequiresParticipantTermsAndConditionsSigning:
                    type: boolean
                    description: true - this organisation requires terms and conditions to be signed. false - this organisation does not require terms and conditions to be signed
                Size:
                    maxLength: 255
                    type: string
                    description: Size of the organisation
                Status:
                    enum:
                        - Active
                        - Pending
                        - Withdrawn
                    type: string
                    default: Active
                    description: Status of the directory registration of an organisation
                Tags:
                    type: array
                    items:
                        type: string
                    description: Tags to describe or classify an organisation
                    deprecated: true
        OrganisationAdminUser:
            type: object
            allOf:
                - $ref: '#/components/schemas/OrganisationAdminUserDetails'
            properties:
                DomainRoleDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/DomainRoleDetail'
        OrganisationAdminUserDetails:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                UserEmail:
                    type: string
                    description: User's email address
        OrganisationAdminUserDetailsAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/OrganisationAdminUserDetails'
        OrganisationAdminUsers:
            type: array
            items:
                $ref: '#/components/schemas/OrganisationAdminUser'
        OrganisationAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/Organisation'
        OrganisationAuthorisationId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with authorisations for organisation's authority claims
        OrganisationAuthorityClaim:
            type: object
            allOf:
                - $ref: '#/components/schemas/OrganisationAuthorityClaimDetails'
            properties:
                Authorisations:
                    type: array
                    items:
                        type: object
                        properties:
                            MemberState:
                                maxLength: 2
                                type: string
                                description: Abbreviated states information i.e. GB, IE, NL etc
                            Status:
                                $ref: '#/components/schemas/StatusEnum'
                Exclusive:
                    $ref: '#/components/schemas/ExclusiveAuthorisationDomainRole'
                Metadata:
                    maxLength: 255
                    type: object
                    description: Authorisation domain role metadata
                RoleType:
                    maxLength: 255
                    type: string
                    description: Type of authorisation domain role
        OrganisationAuthorityClaimAuthorisation:
            type: object
            properties:
                MemberState:
                    maxLength: 10
                    type: string
                    description: Abbreviated states information i.e. GB, IE, NL etc
                OrganisationAuthorisationId:
                    $ref: '#/components/schemas/OrganisationAuthorisationId'
                OrganisationAuthorityClaimId:
                    $ref: '#/components/schemas/OrganisationAuthorityClaimId'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        OrganisationAuthorityClaimAuthorisationAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'
        OrganisationAuthorityClaimAuthorisationRequest:
            required:
                - Status
                - MemberState
            type: object
            properties:
                MemberState:
                    maxLength: 10
                    minLength: 2
                    type: string
                    description: Abbreviated states information i.e. GB, IE, NL etc
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        OrganisationAuthorityClaimAuthorisations:
            type: array
            items:
                $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'
        OrganisationAuthorityClaimDetails:
            type: object
            properties:
                AuthorisationDomain:
                    maxLength: 30
                    type: string
                    description: Authorisation Domain for the authority
                AuthorityId:
                    $ref: '#/components/schemas/AuthorityId'
                OrganisationAuthorityClaimId:
                    $ref: '#/components/schemas/OrganisationAuthorityClaimId'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                RegistrationId:
                    maxLength: 40
                    type: string
                    description: Registration ID for the organisation
                Role:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                UniqueTechnicalIdenifier:
                    type: array
                    items:
                        maxLength: 255
                        type: string
        OrganisationAuthorityClaimDetailsAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/OrganisationAuthorityClaimDetails'
        OrganisationAuthorityClaimId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the authority claims
        OrganisationAuthorityClaimRequest:
            required:
                - RegistrationId
                - Status
                - AuthorisationDomain
                - AuthorityId
                - Role
            type: object
            properties:
                AuthorisationDomain:
                    maxLength: 30
                    minLength: 1
                    type: string
                    description: Authorisation domain for the authority
                AuthorityId:
                    $ref: '#/components/schemas/AuthorityId'
                RegistrationId:
                    maxLength: 40
                    minLength: 1
                    type: string
                    description: Registration ID for the organisation
                Role:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                UniqueTechnicalIdenifier:
                    type: array
                    items:
                        maxLength: 255
                        type: string
        OrganisationAuthorityClaims:
            type: array
            items:
                $ref: '#/components/schemas/OrganisationAuthorityClaim'
        OrganisationAuthorityDomainClaim:
            type: object
            properties:
                AuthorisationDomainName:
                    type: string
                    description: The authorisation domain name
                AuthorityId:
                    type: string
                    description: The GUID of the Authority
                AuthorityName:
                    type: string
                    description: The name of the Authority
                OrganisationAuthorityDomainClaimId:
                    type: string
                    description: The unique org authority domain claim ID
                RegistrationId:
                    type: string
                    description: The registration ID
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        OrganisationAuthorityDomainClaimAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
        OrganisationAuthorityDomainClaimId:
            maxLength: 50
            type: string
            description: Organisation Authority Domain Claim ID
        OrganisationAuthorityDomainClaimRequest:
            required:
                - AuthorityId
                - AuthorisationDomainName
            type: object
            properties:
                AuthorisationDomainName:
                    minLength: 1
                    type: string
                    description: The authorisation domain name
                AuthorityId:
                    minLength: 1
                    type: string
                    description: The Authority ID
                RegistrationId:
                    type: string
                    description: The registration ID
        OrganisationAuthorityDomainClaimUpdateRequest:
            required:
                - AuthorityId
                - Status
                - AuthorityName
                - AuthorisationDomainName
            type: object
            properties:
                AuthorisationDomainName:
                    minLength: 1
                    type: string
                    description: The authorisation domain name
                AuthorityId:
                    type: string
                    description: The GUID of the Authority
                AuthorityName:
                    type: string
                    description: The name of the Authority
                RegistrationId:
                    type: string
                    description: The registration ID
                Status:
                    type: string
                    description: Is this claim Active or Inactive
        OrganisationAuthorityDomainClaims:
            type: array
            items:
                $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
        OrganisationAuthorityDomainClaimsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
        OrganisationCertificateType:
            enum:
                - qwac
                - qseal
                - rtswac
                - rtsseal
                - brseal
                - brseal_ext
                - rtstransport_rs
                - resource_server_signing
                - resource_server_encryption
            type: string
            default: rtsseal
        OrganisationConformanceTest:
            required:
                - ResourceUrl
                - ApiFamilyType
                - Version
            type: object
            properties:
                ApiFamilyType:
                    type: string
                    description: The family type of the resource url to be tested (for example channels_branches)
                ResourceUrl:
                    type: string
                    description: The url of the API to be tested (for example, https://matls-api.mockbank.poc.raidiam.io/open-banking/products-services/v1/personal-accounts)
                Version:
                    type: string
                    description: The version of the api family to be tested (for example 1.0.0)
        OrganisationConformanceTestResult:
            type: object
            properties:
                errorCount:
                    type: integer
                    description: Number of errors found during the execution of the Conformance Suite Test
                errors:
                    type: array
                    items:
                        uniqueItems: true
                        type: string
                    description: List of distinct errors found during the execution of the Conformance Suite Test
                result:
                    type: boolean
                    description: Boolean with the result of the execution of the Conformance Suite Test
                testPlanUrl:
                    type: string
                    description: URL of the published test plan result
            description: a JSON response with the result of the test
        OrganisationExportOpenData:
            type: object
            properties:
                AddressLine1:
                    maxLength: 255
                    type: string
                    description: Address line 1
                AddressLine2:
                    maxLength: 255
                    type: string
                    description: Address line 2
                AuthorisationServers:
                    $ref: '#/components/schemas/AuthorisationServersExportOpenData'
                City:
                    maxLength: 255
                    type: string
                    description: City
                CompanyRegister:
                    maxLength: 255
                    type: string
                    description: Legal company register for the country, i.e. Companies House.
                Country:
                    maxLength: 255
                    type: string
                    description: Country
                CountryOfRegistration:
                    maxLength: 255
                    type: string
                    description: Country of registration for the org
                CreatedOn:
                    maxLength: 30
                    type: string
                    description: JSONDatetime of organisation creation.
                Flags:
                    $ref: '#/components/schemas/ExportFlagObject'
                LegalEntityName:
                    maxLength: 255
                    type: string
                    description: Legal Entity name for the org. Usually the same as org name
                OrgDomainClaims:
                    $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'
                OrgDomainRoleClaims:
                    $ref: '#/components/schemas/OrganisationAuthorityClaims'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                OrganisationName:
                    maxLength: 255
                    type: string
                    description: Name of the organisation.
                ParentOrganisationReference:
                    maxLength: 65535
                    type: string
                    description: Parent Organisation Reference
                Postcode:
                    maxLength: 40
                    type: string
                    description: Postcode
                RegisteredName:
                    maxLength: 255
                    type: string
                RegistrationId:
                    maxLength: 40
                    type: string
                    description: Registered ID for the organisation i.e. Legal Entity identifier number
                RegistrationNumber:
                    maxLength: 255
                    type: string
                    description: Company registration number from company register i.e. Companies House registration number
                Size:
                    maxLength: 255
                    type: string
                    description: Size of an organisation
                Status:
                    enum:
                        - Active
                        - Pending
                        - Withdrawn
                    type: string
                    default: Active
                    description: Status of the directory registration of an organisation
                Tags:
                    type: array
                    items:
                        maxLength: 255
                        type: string
                    description: Tags to describe or classify an organisation
        OrganisationId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the organisation
        OrganisationLabel:
            type: object
            properties:
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                LabelDescription:
                    maxLength: 255
                    type: string
                    description: Description of the Organisation Label
                LabelName:
                    maxLength: 255
                    type: string
                    description: Name of the Organisation Label
                OrganisationLabelId:
                    $ref: '#/components/schemas/OrganisationLabelId'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        OrganisationLabelId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the Organisation Label reference schema
        OrganisationLabelRequest:
            required:
                - LabelName
                - LabelDescription
            type: object
            properties:
                LabelDescription:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Description of the Organisation Label
                LabelName:
                    maxLength: 40
                    minLength: 1
                    type: string
                    description: Name of the Organisation Label
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        OrganisationLabelsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganisationLabel'
        OrganisationRequest:
            required:
                - OrganisationId
                - OrganisationName
                - CountryOfRegistration
                - CompanyRegister
                - RegistrationNumber
                - LegalEntityName
                - AddressLine1
                - City
                - Postcode
                - Country
            type: object
            properties:
                AddressLine1:
                    maxLength: 255
                    minLength: 5
                    type: string
                    description: Address line 1
                AddressLine2:
                    maxLength: 255
                    type: string
                    description: Address line 2
                City:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: City
                CompanyRegister:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Legal company register for the country, i.e. Companies House
                Country:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: Country
                CountryOfRegistration:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: Country of registration for the org
                Flags:
                    $ref: '#/components/schemas/FlagIDArray'
                LegalEntityName:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Legal Entity name for the org. Usually the same as org name
                LogoUri:
                    $ref: '#/components/schemas/OrgLogoUri'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                OrganisationName:
                    maxLength: 255
                    minLength: 1
                    type: string
                ParentOrganisationReference:
                    maxLength: 65535
                    type: string
                    description: Parent Organisation Reference
                Postcode:
                    maxLength: 40
                    minLength: 3
                    type: string
                    description: Postcode
                RegisteredName:
                    maxLength: 255
                    type: string
                    description: Registered legal name
                RegistrationId:
                    maxLength: 40
                    type: string
                    description: Registered ID for the organisation i.e. Legal Entity identifier number
                RegistrationNumber:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Company registration number from company register i.e. Companies House registration number
                RequiresParticipantTermsAndConditionsSigning:
                    type: boolean
                    default: true
                    description: Participant Terms and Conditions Signing Required
                Size:
                    maxLength: 255
                    type: string
                    description: Size of the organisation
                Status:
                    enum:
                        - Active
                        - Pending
                        - Withdrawn
                    type: string
                    default: Active
                    description: Status of the directory registration of an organisation
        OrganisationResponse:
            allOf:
                - $ref: '#/components/schemas/Organisation'
            properties:
                OperationWarnings:
                    type: array
                    items:
                        $ref: '#/components/schemas/OperationWarning'
        OrganisationRoles:
            type: object
            properties:
                OrgDomainClaims:
                    type: array
                    items:
                        type: object
                        properties:
                            AuthorisationDomainName:
                                type: string
                                description: The authorisation domain name
                            Status:
                                $ref: '#/components/schemas/StatusEnum'
                OrgDomainRoleClaims:
                    type: array
                    items:
                        type: object
                        properties:
                            AuthorisationDomainName:
                                type: string
                                description: The authorisation domain name
                            AuthorisationDomainRoleName:
                                $ref: '#/components/schemas/AuthorisationDomainRoleName'
                            Status:
                                $ref: '#/components/schemas/StatusEnum'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                ParentOrganisationReference:
                    type: string
                    description: Parent Organisation Reference
                RegisteredName:
                    type: string
                RegistrationNumber:
                    type: string
                    description: Company registration number from company register i.e. Companies House registration number
                Status:
                    enum:
                        - Active
                        - Pending
                        - Withdrawn
                    type: string
                    default: Active
                    description: Status of the directory registration of an organisation
        OrganisationSnapshot:
            type: object
            properties:
                AuthorisationServers:
                    $ref: '#/components/schemas/AuthorisationServers'
                Contacts:
                    $ref: '#/components/schemas/Contacts'
                OrgDomainClaims:
                    $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'
                OrgDomainRoleClaims:
                    $ref: '#/components/schemas/OrganisationAuthorityClaims'
                OrganisationCertificates:
                    $ref: '#/components/schemas/CertificatesOrKeys'
                OrganisationDetails:
                    $ref: '#/components/schemas/Organisation'
                SoftwareStatements:
                    type: object
                    additionalProperties:
                        properties:
                            SoftwareAuthorityClaims:
                                $ref: '#/components/schemas/SoftwareAuthorityClaims'
                            SoftwareCertificates:
                                $ref: '#/components/schemas/CertificatesOrKeys'
                            SoftwareDetails:
                                $ref: '#/components/schemas/SoftwareStatement'
                        type: object
        OrganisationUpdateRequest:
            required:
                - OrganisationName
                - CountryOfRegistration
                - CompanyRegister
                - RegistrationNumber
                - LegalEntityName
                - AddressLine1
                - City
                - Postcode
                - Country
            type: object
            properties:
                AddressLine1:
                    maxLength: 255
                    minLength: 5
                    type: string
                    description: Address line 1
                AddressLine2:
                    maxLength: 255
                    type: string
                    description: Address line 2
                City:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: City
                CompanyRegister:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Legal company register for the country, i.e. Companies House
                Country:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: Country
                CountryOfRegistration:
                    maxLength: 255
                    minLength: 2
                    type: string
                    description: Country of registration for the org
                Flags:
                    $ref: '#/components/schemas/FlagIDArray'
                LegalEntityName:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Legal Entity name for the org. Usually the same as org name
                LogoUri:
                    $ref: '#/components/schemas/OrgLogoUri'
                OrganisationName:
                    maxLength: 255
                    minLength: 1
                    type: string
                ParentOrganisationReference:
                    maxLength: 65535
                    type: string
                    description: Parent Organisation Reference
                Postcode:
                    maxLength: 40
                    minLength: 3
                    type: string
                    description: Postcode
                RegisteredName:
                    maxLength: 255
                    type: string
                    description: Registered legal name
                RegistrationId:
                    maxLength: 40
                    type: string
                    description: Registered ID for the organisation i.e. Legal Entity identifier number
                RegistrationNumber:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: Company registration number from company register i.e. Companies House registration number
                RequiresParticipantTermsAndConditionsSigning:
                    type: boolean
                    default: true
                    description: Participant Terms and Conditions Signing Required
                Size:
                    maxLength: 255
                    type: string
                    description: Size of the organisation
                Status:
                    enum:
                        - Active
                        - Pending
                        - Withdrawn
                    type: string
                    default: Pending
                    description: Status of the directory registration of an organisation
        OrganisationWithTnc:
            type: object
            properties:
                OrgDetails:
                    $ref: '#/components/schemas/Organisation'
                TncDetails:
                    type: object
                    properties:
                        TnCSigned:
                            type: boolean
                            description: true - the terms and conditions have been signed. false - the terms and conditions have not been signed
                        TnCUpdated:
                            type: boolean
                            description: true - attached signer template has been updated. false - no tnc present/not updated
                        TnCsToBeSigned:
                            $ref: '#/components/schemas/TnCsToBeSigned'
        OrganisationsExportOpenData:
            type: array
            items:
                $ref: '#/components/schemas/OrganisationExportOpenData'
        OrganisationsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organisation'
        OrganisationsRoles:
            type: array
            items:
                $ref: '#/components/schemas/OrganisationRoles'
        OrganisationsSnapshot:
            type: object
            additionalProperties:
                $ref: '#/components/schemas/OrganisationSnapshot'
        OriginUri:
            maxLength: 255
            pattern: ^https:\/\/(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]+(?::\d+)?(?:\/[a-zA-Z0-9-._~!$&'()*+,;=:@\/?%]*)?(?:\?[a-zA-Z0-9-._~!$&'()*+,;=:@\/?%]*)?(?:#[a-zA-Z0-9-._~!$&'()*+,;=:@\/?%]*)?$|(^android:apk-key-hash:[a-zA-Z0-9-]+)|(^ios:bundle-id:[a-zA-Z][-a-zA-Z0-9]*\.([a-zA-Z][-a-zA-Z0-9]*\.?)+)$
            type: string
            format: uri
            description: A compliant URI
        Pageable:
            type: object
            properties:
                number:
                    type: integer
                    description: Page number
                offset:
                    type: integer
                    description: Offset
                size:
                    type: integer
                    description: Size of the page
                sort:
                    $ref: '#/components/schemas/Sort'
                sorted:
                    type: boolean
                    description: Is the page sorted
                unpaged:
                    type: boolean
                    description: Is this an unpaged response
        PaginationProperties:
            type: object
            properties:
                empty:
                    type: boolean
                numberOfElements:
                    type: integer
                offset:
                    type: integer
                pageNumber:
                    type: integer
                pageable:
                    $ref: '#/components/schemas/Pageable'
                size:
                    type: integer
                totalPages:
                    type: integer
                totalSize:
                    type: integer
        PayloadSigningCertLocationUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            description: A compliant URI
        PolicyApprovalStatusEnum:
            enum:
                - active
                - assignable
                - pending
                - rejected
            type: string
            description: The status of the policy
        PolicyUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI string that points to a human-readable privacy policy document
        ProfileType:
            type: string
            description: Certification type
            example: Redirect
        ProfileVariant:
            type: string
            description: Certification variant
            example: FAPI Adv. OP w/ MTLS
        ReceiveEmailNotifications:
            type: boolean
            description: If the user type should receive organisation update email notifications
        RedirectUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI
        RegisteredClient:
            type: object
            properties:
                application_type:
                    enum:
                        - web
                    type: string
                    default: web
                    description: OIDC application type response
                authorization_details_types:
                    $ref: '#/components/schemas/AuthorizationDetailsTypes'
                claims:
                    type: array
                    items:
                        maxLength: 255
                        type: string
                        description: The claim names aggregated from domain role metadata for this client
                claims_in_verified_claims:
                    type: array
                    items:
                        maxLength: 255
                        type: string
                        description: The verified claim names aggregated from domain role metadata for this client
                client_description:
                    maxLength: 255
                    type: string
                    description: Client description
                client_id:
                    $ref: '#/components/schemas/ClientId'
                client_name:
                    $ref: '#/components/schemas/ClientName'
                client_uri:
                    $ref: '#/components/schemas/ClientUri'
                grant_types:
                    type: array
                    items:
                        maxLength: 40
                        minLength: 1
                        type: string
                jwks_uri:
                    $ref: '#/components/schemas/JwksUri'
                last_updated:
                    type: string
                    format: date-time
                    description: JSONDatetime of last updated timestamp
                logo_uri:
                    $ref: '#/components/schemas/LogoUri'
                openid_federation_enabled:
                    $ref: '#/components/schemas/OpenidFederationEnabled'
                openid_federation_entity_management_type:
                    $ref: '#/components/schemas/OpenidFederationEntityManagementType'
                org_id:
                    $ref: '#/components/schemas/OrganisationId'
                organisation_id:
                    $ref: '#/components/schemas/OrganisationId'
                policy_uri:
                    $ref: '#/components/schemas/PolicyUri'
                post_logout_redirect_uris:
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                    description: The Software Statement redirect compliant URI
                redirect_uris:
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                    description: The Software Statement redirect compliant URI
                response_types:
                    type: array
                    items:
                        maxLength: 40
                        minLength: 1
                        type: string
                    description: List of response types
                roles:
                    type: array
                    items:
                        maxLength: 255
                        type: string
                        description: The software authority roles that apply to this client
                scope:
                    maxLength: 255
                    type: string
                    description: String containing a space-separated list of scope values
                sector_identifier_uri:
                    $ref: '#/components/schemas/SectorIdentifierUri'
                software_id:
                    $ref: '#/components/schemas/SoftwareStatementId'
                software_version:
                    $ref: '#/components/schemas/SoftwareVersion'
                status:
                    enum:
                        - Active
                        - Suspended
                        - Inactive
                    type: string
                    default: Active
                    description: Is this client Active/Suspended/Inactive
                subject_type:
                    type: string
                token_endpoint_auth_method:
                    $ref: '#/components/schemas/TokenEndpointAuthMethod'
                tos_uri:
                    $ref: '#/components/schemas/TosUri'
                use_mtls_endpoint_aliases:
                    $ref: '#/components/schemas/MtlsEndpointAliases'
        RegisteredClients:
            type: array
            items:
                $ref: '#/components/schemas/RegisteredClient'
            description: The list of Registered Clients
        RegisteredClientsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    $ref: '#/components/schemas/RegisteredClients'
        RelatedAuthorisationServer:
            type: string
            format: uuid
            description: ID of the Authorisation Server that is connected to this Software Statement
            nullable: true
        RequireSignedRequestObject:
            type: boolean
            default: true
            description: Require a signed request object. If this is set to false, the client will not be FAPI compliant
        ResourceType:
            enum:
                - apiResource
                - apiDiscoveryEndpoint
                - authorisationServer
                - authorisationServerCertification
                - certificationManager
                - contact
                - organisation
                - organisationCertificate
                - organisationAdmin
                - organisationAuthorityClaim
                - organisationAuthorityClaimAuthorisations
                - organisationAuthorityDomainClaim
                - organisationAuthorityDomainClaimUser
                - organisationTermsAndConditions
                - softwareStatement
                - softwareStatementAuthorityRoleClaim
                - softwareStatementCertificate
                - softwareStatementCertification
                - referenceAuthorisationDomain
                - referenceAuthorisationDomainRole
                - referenceAuthorisationDomainRoleMetadata
                - referenceAuthority
                - referenceAuthorityAuthorisationDomain
                - referenceTermsAndConditions
                - superUser
            type: string
        RoleTypeEnum:
            enum:
                - Directory
                - Federation
            type: string
            default: Federation
            description: The different types of authorisation domain roles
        SectorIdentifierUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI string referencing the client's sector identifier
        SnsNotificationWebhookUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI
        SoftwareAuthorityClaim:
            type: object
            properties:
                AuthorisationDomain:
                    maxLength: 30
                    type: string
                    description: Authorisation domain for the authority
                Role:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                SoftwareAuthorityClaimId:
                    $ref: '#/components/schemas/SoftwareAuthorityClaimId'
                SoftwareStatementId:
                    $ref: '#/components/schemas/SoftwareStatementId'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        SoftwareAuthorityClaimId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the authority claims for a software statement
        SoftwareAuthorityClaimRequest:
            required:
                - Status
                - AuthorisationDomain
                - Role
            type: object
            properties:
                AuthorisationDomain:
                    maxLength: 30
                    minLength: 1
                    type: string
                    description: Authorisation domain for the authority
                Role:
                    $ref: '#/components/schemas/AuthorisationDomainRoleName'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        SoftwareAuthorityClaimUpdateRequest:
            required:
                - Status
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        SoftwareAuthorityClaims:
            type: array
            items:
                $ref: '#/components/schemas/SoftwareAuthorityClaim'
        SoftwareStatement:
            type: object
            allOf:
                - $ref: '#/components/schemas/SoftwareStatementDetail'
            properties:
                SoftwareStatementCertifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/SoftwareStatementCertification'
        SoftwareStatementAssertion:
            maxLength: 4000
            type: string
            description: A signed JWT (JWS)
        SoftwareStatementCertificateOrKeyType:
            enum:
                - rtstransport
                - rtssigning
                - sigkey
                - enckey
                - brcac
                - brcac_ext
                - brcac_2022
            type: string
            default: rtssigning
        SoftwareStatementCertification:
            type: object
            properties:
                CertificationExpirationDate:
                    $ref: '#/components/schemas/CertificationExpirationDate'
                CertificationId:
                    $ref: '#/components/schemas/SoftwareStatementCertificationId'
                CertificationStartDate:
                    $ref: '#/components/schemas/CertificationStartDate'
                CertificationURI:
                    $ref: '#/components/schemas/ApiCertificationUri'
                ProfileType:
                    $ref: '#/components/schemas/ProfileType'
                ProfileVariant:
                    $ref: '#/components/schemas/ProfileVariant'
                ProfileVersion:
                    type: number
                    description: The version number of the certification
                SoftwareStatementId:
                    $ref: '#/components/schemas/SoftwareStatementId'
                Status:
                    enum:
                        - Awaiting Certification
                        - Certified
                        - Deprecated
                        - Rejected
                        - Self-Certified
                    type: string
                    default: Awaiting Certification
                    description: Is this certification current or expired
        SoftwareStatementCertificationId:
            maxLength: 40
            minLength: 1
            type: string
            description: Unique ID associated with the software statement certification
        SoftwareStatementCertificationRequest:
            type: object
            properties:
                CertificationStartDate:
                    maxLength: 10
                    pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
                    type: string
                CertificationURI:
                    $ref: '#/components/schemas/ApiCertificationUri'
                ProfileType:
                    $ref: '#/components/schemas/ProfileType'
                ProfileVariant:
                    $ref: '#/components/schemas/ProfileVariant'
                ProfileVersion:
                    type: number
                    description: The version number of the certification
                Status:
                    enum:
                        - Awaiting Certification
                        - Certified
                        - Deprecated
                        - Rejected
                        - Self-Certified
                    type: string
                    default: Awaiting Certification
                    description: Is this certification current or expired
        SoftwareStatementCertifications:
            type: array
            items:
                $ref: '#/components/schemas/SoftwareStatementCertification'
        SoftwareStatementDetail:
            type: object
            properties:
                AdditionalSoftwareMetadata:
                    $ref: '#/components/schemas/AdditionalSoftwareMetadata'
                ApiWebhookUri:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiWebhookUri'
                ClientId:
                    $ref: '#/components/schemas/ClientId'
                ClientName:
                    $ref: '#/components/schemas/ClientName'
                ClientSecret:
                    maxLength: 255
                    type: string
                    description: The client secret, only returned when a client is created/updated to have client_secret_basic auth type
                ClientUri:
                    $ref: '#/components/schemas/ClientUri'
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                Description:
                    maxLength: 255
                    type: string
                    description: Software Statement description
                Environment:
                    maxLength: 40
                    type: string
                    description: The additional check for software statement, this field can avoid
                FederationEndpoint:
                    $ref: '#/components/schemas/FederationEndpoint'
                Flags:
                    $ref: '#/components/schemas/FlagArray'
                IdTokenSignedResponseAlgorithm:
                    $ref: '#/components/schemas/IdTokenSignedResponseAlgorithm'
                Locked:
                    type: boolean
                    description: Flag shows if assertion has been generated on the software statement - will be set to true when assertion is generated
                LogoUri:
                    $ref: '#/components/schemas/LogoUri'
                Mode:
                    maxLength: 8
                    enum:
                        - Live
                        - Test
                    type: string
                    default: Live
                    description: Software Statement mode
                NotificationWebhook:
                    $ref: '#/components/schemas/SnsNotificationWebhookUri'
                NotificationWebhookStatus:
                    $ref: '#/components/schemas/NotificationWebhookStatusEnum'
                OnBehalfOf:
                    maxLength: 255
                    type: string
                    description: A reference to fourth party organisation resource on the RTS Directory if the registering Org is acting on behalf of another
                OpenidFederationEnabled:
                    $ref: '#/components/schemas/OpenidFederationEnabled'
                OpenidFederationEntityManagementType:
                    $ref: '#/components/schemas/OpenidFederationEntityManagementType'
                OrganisationId:
                    $ref: '#/components/schemas/OrganisationId'
                OriginUri:
                    type: array
                    items:
                        $ref: '#/components/schemas/OriginUri'
                PolicyUri:
                    $ref: '#/components/schemas/PolicyUri'
                PostLogoutRedirectUris:
                    maxLength: 255
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                RedirectUri:
                    maxLength: 255
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                RelatedAuthorisationServer:
                    $ref: '#/components/schemas/RelatedAuthorisationServer'
                RequireSignedRequestObject:
                    $ref: '#/components/schemas/RequireSignedRequestObject'
                RtsClientCreated:
                    type: boolean
                    description: Client created flag
                SoftwareStatementId:
                    $ref: '#/components/schemas/SoftwareStatementId'
                Status:
                    enum:
                        - Active
                        - Suspended
                        - Inactive
                    type: string
                    default: Active
                    description: Is this software statement Active/Suspended/Inactive
                TermsOfServiceUri:
                    maxLength: 255
                    pattern: ^(http://|https://).*
                    type: string
                    format: uri
                    description: The Software Statement terms of service compliant URI
                TlsClientCertificateBoundAccessTokens:
                    $ref: '#/components/schemas/TlsClientCertificateBoundAccessTokens'
                TokenEndpointAuthMethod:
                    $ref: '#/components/schemas/TokenEndpointAuthMethod'
                UpdateFailed:
                    type: boolean
                    description: Flag shows if software statement is in failed update state
                UpdateFailedReason:
                    type: string
                    description: Error message describing why the update failed
                Version:
                    $ref: '#/components/schemas/SoftwareVersion'
        SoftwareStatementId:
            maxLength: 40
            type: string
            description: Unique Software Statement Id
        SoftwareStatementRequest:
            required:
                - ClientName
                - LogoUri
                - RedirectUri
                - Version
            type: object
            properties:
                AdditionalSoftwareMetadata:
                    $ref: '#/components/schemas/AdditionalSoftwareMetadata'
                ApiWebhookUri:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiWebhookUri'
                ClientName:
                    $ref: '#/components/schemas/ClientName'
                ClientUri:
                    $ref: '#/components/schemas/ClientUri'
                Description:
                    maxLength: 255
                    type: string
                    description: Software Statement description
                Environment:
                    maxLength: 40
                    type: string
                    description: The additional check for software statement, this field can avoid environment checks.
                Flags:
                    $ref: '#/components/schemas/FlagIDArray'
                IdTokenSignedResponseAlgorithm:
                    $ref: '#/components/schemas/IdTokenSignedResponseAlgorithm'
                LogoUri:
                    $ref: '#/components/schemas/LogoUri'
                Mode:
                    enum:
                        - Live
                        - Test
                    type: string
                    default: Live
                    description: The additional check to see if the environment reflected above is live or test.
                NotificationWebhook:
                    $ref: '#/components/schemas/SnsNotificationWebhookUri'
                OnBehalfOf:
                    maxLength: 255
                    type: string
                    description: A reference to fourth party organisation resource on the RTS Directory if the registering Org is acting on behalf of another
                OpenidFederationEnabled:
                    $ref: '#/components/schemas/OpenidFederationEnabled'
                OpenidFederationEntityManagementType:
                    $ref: '#/components/schemas/OpenidFederationEntityManagementType'
                OriginUri:
                    type: array
                    items:
                        $ref: '#/components/schemas/OriginUri'
                PolicyUri:
                    $ref: '#/components/schemas/PolicyUri'
                PostLogoutRedirectUris:
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                RedirectUri:
                    type: array
                    items:
                        $ref: '#/components/schemas/RedirectUri'
                    description: The Software Statement redirect URIs
                RelatedAuthorisationServer:
                    $ref: '#/components/schemas/RelatedAuthorisationServer'
                RequireSignedRequestObject:
                    $ref: '#/components/schemas/RequireSignedRequestObject'
                Roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/SoftwareAuthorityClaimRequest'
                TermsOfServiceUri:
                    $ref: '#/components/schemas/TermsOfServiceUri'
                TlsClientCertificateBoundAccessTokens:
                    $ref: '#/components/schemas/TlsClientCertificateBoundAccessTokens'
                TokenEndpointAuthMethod:
                    $ref: '#/components/schemas/TokenEndpointAuthMethod'
                Version:
                    $ref: '#/components/schemas/SoftwareVersion'
        SoftwareStatementResponse:
            type: object
            allOf:
                - $ref: '#/components/schemas/SoftwareStatement'
            properties:
                OperationWarnings:
                    type: array
                    items:
                        $ref: '#/components/schemas/OperationWarning'
        SoftwareStatementUpdateRequest:
            allOf:
                - $ref: '#/components/schemas/SoftwareStatementRequest'
                - type: object
                  properties:
                    Status:
                        enum:
                            - Active
                            - Suspended
                        type: string
                        default: Active
                        description: Should this software statement be active or suspended?
        SoftwareStatements:
            type: array
            items:
                $ref: '#/components/schemas/SoftwareStatement'
            description: The list of Software Statements
        SoftwareVersion:
            maxLength: 40
            type: number
            description: Software Statement version as provided by the organisation's software team
        Sort:
            type: object
            properties:
                orderBy:
                    type: array
                    items:
                        type: object
                        properties:
                            ascending:
                                type: boolean
                                description: Whether ascending
                            direction:
                                enum:
                                    - ASC
                                    - DESC
                                type: string
                                description: Direction of sort, i.e. ascending or descending
                            ignoreCase:
                                type: boolean
                                description: Was the case ignored
                            property:
                                type: string
                                description: Name of the property used for sorting
                                example: createdAt
                sorted:
                    type: boolean
        StatusEnum:
            enum:
                - Active
                - Inactive
            type: string
            default: Active
            description: Current status of this resource
        SuperUser:
            type: object
            allOf:
                - $ref: '#/components/schemas/UserDetails'
        SuperUserCreationRequest:
            required:
                - Email
            type: object
            properties:
                Email:
                    minLength: 1
                    type: string
                    description: The super user email address
        SuperUsersPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/SuperUser'
        SupportsCiba:
            type: boolean
            default: false
            description: Flag to denote if this authorisation server supports Client Initiated Backchannel Authentication
        SupportsDCR:
            type: boolean
            default: false
            description: Flag to denote if this authorisation server supports Dynamic Client Registration
        SupportsRedirect:
            type: boolean
            default: false
            description: Flag to denote if this authorisation server supports redirect
        TermsAndConditionsCreateRequest:
            type: object
            allOf:
                - $ref: '#/components/schemas/TermsAndConditionsItemDetails'
            properties:
                ExternalSigningService:
                    $ref: '#/components/schemas/ExternalSigningService'
        TermsAndConditionsDetail:
            type: object
            properties:
                ExternalSigningServiceEnvelopeId:
                    $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
                ExternalSigningServiceEnvelopePasscode:
                    type: string
                    description: Access code for the specifier to fill in the signer details. This will be populated only once, when signing is initiated
                ExternalSigningServiceEnvelopeStatus:
                    $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'
                InititatedDate:
                    maxLength: 255
                    type: string
                    description: Terms and Conditions initiated date
                TermsAndConditionsItem:
                    $ref: '#/components/schemas/TermsAndConditionsItem'
            description: TnC details Parent
        TermsAndConditionsDetails:
            type: object
            properties:
                RequiresSigning:
                    type: boolean
                    description: Does the Directory TnC require signing
                TermsAndConditionsItem:
                    $ref: '#/components/schemas/TermsAndConditionsItem'
                Updated:
                    type: boolean
                    description: Has the document updated since the user signed
            description: Details of TnC
        TermsAndConditionsItem:
            type: object
            allOf:
                - $ref: '#/components/schemas/TermsAndConditionsItemDetails'
            properties:
                ExternalSigningService:
                    $ref: '#/components/schemas/ExternalSigningService'
                Version:
                    type: integer
                    description: Version of the TnC
        TermsAndConditionsItemDetails:
            required:
                - Type
                - Content
                - Name
            type: object
            properties:
                Content:
                    minLength: 1
                    type: string
                    description: The MarkDown of the TnC
                Name:
                    minLength: 1
                    type: string
                    description: The Name of the TnC
                Status:
                    $ref: '#/components/schemas/StatusEnum'
                TnCId:
                    type: integer
                    description: Unique identifier for the Terms and Conditions Item
                    readOnly: true
                Type:
                    enum:
                        - Participant
                        - Directory
                    type: string
                    description: Role for which this TnC applies
        TermsAndConditionsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/TermsAndConditionsItem'
        TermsAndConditionsUpdateRequest:
            required:
                - Content
            type: object
            properties:
                Content:
                    minLength: 1
                    type: string
                    description: The MarkDown of the TnC
                ExternalSigningService:
                    $ref: '#/components/schemas/ExternalSigningService'
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        TermsOfServiceUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: A compliant URI
            nullable: true
        TlsClientCertificateBoundAccessTokens:
            type: boolean
            default: true
            description: Are the tokens issued for this client bound to a client tls certificate
        TnCId:
            type: integer
            description: TnC unique identifier
        TnCsToBeSigned:
            type: array
            items:
                $ref: '#/components/schemas/TermsAndConditionsItem'
        TokenEndpointAuthMethod:
            maxLength: 60
            minLength: 1
            enum:
                - private_key_jwt
                - tls_client_auth
                - client_secret_basic
            type: string
            default: private_key_jwt
            description: Token endpoint authentication method
        TosUri:
            maxLength: 255
            pattern: ^(http://|https://).*
            type: string
            format: uri
            description: The Software Statement terms of service compliant URI
        TypeID:
            maxLength: 40
            type: string
            description: Type ID of the certification
        TypeName:
            type: string
            description: Type name of the certification
        UnlockSoftwareStatementRequest:
            type: object
            properties:
                Unlock:
                    type: boolean
                    description: Unlock Software Statement
        UpdatedAt:
            type: string
            format: date-time
            readOnly: true
        UserCreateRequest:
            required:
                - UserEmail
                - TermsAndConditionsId
            type: object
            properties:
                TermsAndConditionsId:
                    type: integer
                    description: Id of the TnC(type = Directory), user has agreed to
                UserEmail:
                    pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
                    type: string
                    description: User's email
        UserDetail:
            type: object
            properties:
                BasicInformation:
                    type: object
                    properties:
                        Status:
                            $ref: '#/components/schemas/StatusEnum'
                        UserEmail:
                            type: string
                CertificationManager:
                    type: boolean
                    description: Is the user a certification manager
                CreatedAt:
                    $ref: '#/components/schemas/CreatedAt'
                DirectoryTermsAndConditionsDetails:
                    $ref: '#/components/schemas/TermsAndConditionsDetails'
                OrgAccessDetails:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/OrgAccessDetail'
                    description: Map Key - OrgId, Map Value - Org Access Detail(containing info about org admin and domain role)
                SuperUser:
                    type: boolean
                    description: Is the user a super user
                SystemUser:
                    type: boolean
                    description: Is the user a system user
                UpdatedAt:
                    $ref: '#/components/schemas/UpdatedAt'
        UserDetails:
            type: object
            properties:
                Email:
                    type: string
                    description: User's email address
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        UserDetailsAudit:
            type: object
            allOf:
                - $ref: '#/components/schemas/AuditFields'
                - $ref: '#/components/schemas/UserDetails'
        UserEmailId:
            maxLength: 50
            type: string
            description: User email address
        UserOPInfo:
            type: object
            properties:
                address:
                    type: string
                    description: Address
                email:
                    type: string
                    description: Email address
                email_verified:
                    type: boolean
                    description: Is the email verified
                family_name:
                    type: string
                    description: Family name
                given_name:
                    type: string
                    description: Given name
                name:
                    type: string
                    description: Full name
                phone_number:
                    type: string
                    description: Phone number
                phone_number_verified:
                    type: boolean
                    description: Is the phone number verified
                sub:
                    type: string
                    description: Contains the email address
            description: The information contained within is subject to the scopes passed during token generation
        UserTermsAndConditionsPage:
            type: object
            allOf:
                - $ref: '#/components/schemas/PaginationProperties'
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/TermsAndConditionsDetail'
        UserUpdateRequest:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/StatusEnum'
        VariantID:
            maxLength: 40
            type: string
            description: Variant ID of the certification type
        VariantName:
            type: string
            description: Variant Name of the certification type
        WebhookStatusResponse:
            type: object
            properties:
                AuthorisationServerId:
                    $ref: '#/components/schemas/AuthorisationServerId'
                WebhookStatus:
                    $ref: '#/components/schemas/NotificationWebhookStatusEnum'
        WebhookStatusResponses:
            type: array
            items:
                $ref: '#/components/schemas/WebhookStatusResponse'
        WellKnown:
            type: object
            properties:
                acr_values_supported:
                    type: array
                    items: {}
                authorization_endpoint:
                    type: string
                    description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint
                authorization_signing_alg_values_supported:
                    type: array
                    items: {}
                check_session_endpoint:
                    type: string
                claim_types_supported:
                    type: array
                    items: {}
                    description: OPTIONAL. JSON array containing a list of the Claim Types that the OpenID Provider supports
                claims_parameter_supported:
                    type: boolean
                    description: OPTIONAL. Boolean value specifying whether the OP supports use of the claims parameter, with true indicating support. If omitted, the default value is false
                claims_supported:
                    type: array
                    items: {}
                    description: RECOMMENDED. JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply values for
                code_challenge_methods_supported:
                    type: array
                    items: {}
                end_session_endpoint:
                    type: string
                frontchannel_logout_session_supported:
                    type: boolean
                frontchannel_logout_supported:
                    type: boolean
                grant_types_supported:
                    type: array
                    items: {}
                    description: OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports
                id_token_signing_alg_values_supported:
                    type: array
                    items: {}
                    description: REQUIRED. JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT
                introspection_endpoint:
                    type: string
                introspection_endpoint_auth_methods_supported:
                    type: array
                    items: {}
                introspection_endpoint_auth_signing_alg_values_supported:
                    type: array
                    items: {}
                issuer:
                    type: string
                    description: REQUIRED. URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier
                jwks_uri:
                    type: string
                    description: REQUIRED. URL of the OP's JSON Web Key Set [JWK] document.
                pushed_authorization_request_endpoint:
                    type: array
                    items: {}
                registration_endpoint:
                    type: string
                    description: RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint
                request_object_signing_alg_values_supported:
                    type: string
                    description: OPTIONAL. JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects
                request_parameter_supported:
                    type: boolean
                    description: OPTIONAL. Boolean value specifying whether the OP supports use of the request parameter, with true indicating support. If omitted, the default value is false
                request_uri_parameter_supported:
                    type: boolean
                    description: OPTIONAL. Boolean value specifying whether the OP supports use of the request_uri parameter, with true indicating support. If omitted, the default value is true
                require_request_uri_registration:
                    type: boolean
                    description: OPTIONAL. Boolean value specifying whether the OP requires any request_uri values used to be pre-registered using the request_uris registration parameter
                response_modes_supported:
                    type: array
                    items: {}
                    description: OPTIONAL. JSON array containing a list of the OAuth 2.0 response_mode values that this OP supports
                response_types_supported:
                    type: array
                    items: {}
                    description: REQUIRED. JSON array containing a list of the OAuth 2.0 response_type values that this OP supports
                revocation_endpoint:
                    type: string
                revocation_endpoint_auth_methods_supported:
                    type: array
                    items: {}
                revocation_endpoint_auth_signing_alg_values_supported:
                    type: array
                    items: {}
                scopes_supported:
                    type: array
                    items: {}
                    description: RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports
                subject_types_supported:
                    type: array
                    items: {}
                    description: REQUIRED. JSON array containing a list of the Subject Identifier types that this OP supports
                tls_client_certificate_bound_access_tokens:
                    type: boolean
                token_endpoint:
                    type: string
                    description: URL of the OP's OAuth 2.0 Token Endpoint
                token_endpoint_auth_methods_supported:
                    type: array
                    items: {}
                    description: OPTIONAL. JSON array containing a list of Client Authentication methods supported by this Token Endpoint
                token_endpoint_auth_signing_alg_values_supported:
                    type: array
                    items: {}
                    description: OPTIONAL. JSON array containing a list of the JWS signing algorithms (alg values) supported by the Token Endpoint for the signature on the JWT
                userinfo_endpoint:
                    type: string
                    description: RECOMMENDED. URL of the OP's UserInfo Endpoint
                userinfo_signing_alg_values_supported:
                    type: array
                    items: {}
                    description: OPTIONAL. JSON array containing a list of the JWS signing algorithms (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims in a JWT
        xFapiInteractionId:
            maxLength: 100
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$
            type: string
            description: An RFC4122 UID used as a correlation id.
            example: 73cac523-d3ae-2289-b106-330a6218710d
    parameters:
        ActionType:
            name: actionType
            in: query
            description: The type of action to search for.
            required: false
            schema:
                $ref: '#/components/schemas/ActionType'
        ApiDiscoveryEndpointId:
            name: ApiDiscoveryEndpointId
            in: path
            description: The api discovery endpoint Id
            required: true
            schema:
                $ref: '#/components/schemas/ApiEndpointId'
        ApiResourceId:
            name: ApiResourceId
            in: path
            description: The api version Id
            required: true
            schema:
                $ref: '#/components/schemas/ApiResourceId'
        AuthorisationDomainName:
            name: AuthorisationDomainName
            in: path
            description: Authorisation Domain Name. Eg:PSD2
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationDomainName'
        AuthorisationDomainRoleName:
            name: AuthorisationDomainRoleName
            in: path
            description: Authorisation Domain Role Name. Eg:TPP
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationDomainRoleName'
        AuthorisationDomainSystemID:
            name: AuthorisationDomainSystemID
            in: path
            description: a UUID denoting a specific authorisation domain system
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationDomainSystemID'
        AuthorisationDomainUserId:
            name: AuthorisationDomainUserId
            in: path
            description: Unique record Id to identify Domain User
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationDomainUserId'
        AuthorisationDomainUserTypeID:
            name: AuthorisationDomainUserTypeID
            in: path
            description: A UUID denoting a specific authorisation domain user type
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationDomainUserTypeID'
        AuthorisationServerCertificationId:
            name: AuthorisationServerCertificationId
            in: path
            description: Auth server certification Id
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationServerCertificationId'
        AuthorisationServerId:
            name: AuthorisationServerId
            in: path
            description: The authorisation server Id
            required: true
            schema:
                $ref: '#/components/schemas/AuthorisationServerId'
        AuthorityAuthorisationDomainId:
            name: AuthorityAuthorisationDomainId
            in: path
            description: ID of the Authority mapped with Authorisation Domain
            required: true
            schema:
                $ref: '#/components/schemas/AuthorityAuthorisationDomainId'
        AuthorityId:
            name: AuthorityId
            in: path
            description: The reference authority Id
            required: true
            schema:
                $ref: '#/components/schemas/AuthorityId'
        CertificateOrKeyId:
            name: CertificateOrKeyId
            in: path
            description: The certificate or key Id
            required: true
            schema:
                $ref: '#/components/schemas/CertificateOrKeyId'
        ClientId:
            name: ClientId
            in: path
            description: Oauth clientId
            required: true
            schema:
                $ref: '#/components/schemas/ClientId'
        ContactId:
            name: ContactId
            in: path
            description: The contact id
            required: true
            schema:
                $ref: '#/components/schemas/ContactId'
        ExternalSigningServiceEnvelopeId:
            name: ExternalSigningServiceEnvelopeId
            in: path
            description: The envelope id
            required: true
            schema:
                $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
        FederationConfigId:
            name: FederationConfigId
            in: path
            description: The federation configuration id
            required: true
            schema:
                $ref: '#/components/schemas/FederationConfigId'
        FederationId:
            name: FederationId
            in: path
            description: The federation id
            required: true
            schema:
                $ref: '#/components/schemas/FederationId'
        FlagID:
            name: FlagID
            in: path
            description: The ID of the flag to target
            required: true
            schema:
                $ref: '#/components/schemas/FlagID'
        FlagName:
            name: name
            in: query
            description: The name of the flag
            required: false
            schema:
                $ref: '#/components/schemas/FlagName'
        FlagStatus:
            name: status
            in: query
            description: The status of the flag
            required: false
            schema:
                $ref: '#/components/schemas/StatusEnum'
        FlagType:
            name: type
            in: query
            description: The type of the flag
            required: false
            schema:
                $ref: '#/components/schemas/FlagType'
        MetadataId:
            name: MetadataId
            in: path
            description: The metadata id object
            required: true
            schema:
                $ref: '#/components/schemas/MetadataId'
        MetadataPolicyId:
            name: MetadataPolicyId
            in: path
            description: The metadata policy id
            required: true
            schema:
                $ref: '#/components/schemas/MetadataPolicyId'
        MetadataPolicyType:
            name: type
            in: query
            description: The metadata policy type
            required: false
            schema:
                $ref: '#/components/schemas/MetadataPolicyTypeEnum'
        MetadataPolicyVersion:
            name: version
            in: query
            description: The metadata policy version. Providing a value of '0' returns the latest version
            required: false
            schema:
                $ref: '#/components/schemas/MetadataPolicyVersion'
        OrganisationAuthorisationId:
            name: OrganisationAuthorisationId
            in: path
            description: The authorisation ID for an organisation's authority claims
            required: true
            schema:
                $ref: '#/components/schemas/OrganisationAuthorisationId'
        OrganisationAuthorityClaimId:
            name: OrganisationAuthorityClaimId
            in: path
            description: The Authority claims ID for an organisation
            required: true
            schema:
                $ref: '#/components/schemas/OrganisationAuthorityClaimId'
        OrganisationAuthorityDomainClaimId:
            name: OrganisationAuthorityDomainClaimId
            in: path
            description: Organisation Authority Domain Claim Id
            required: true
            schema:
                $ref: '#/components/schemas/OrganisationAuthorityDomainClaimId'
        OrganisationCertificateType:
            name: OrganisationCertificateType
            in: path
            description: The certificate type
            required: true
            schema:
                $ref: '#/components/schemas/OrganisationCertificateType'
        OrganisationId:
            name: OrganisationId
            in: path
            description: The organisation ID
            required: true
            schema:
                $ref: '#/components/schemas/OrganisationId'
        OrganisationIdQueryParameter:
            name: OrganisationIdQueryParameter
            in: query
            description: The organisation ID
            required: false
            schema:
                $ref: '#/components/schemas/OrganisationId'
        OrganisationLabelId:
            name: OrganisationLabelId
            in: path
            description: The reference organisation label Id
            required: true
            schema:
                $ref: '#/components/schemas/OrganisationLabelId'
        PerformedBy:
            name: performedBy
            in: query
            description: The user email you want to parse by. This will be performed for createdBy and updatedBy based on the revision type
            required: false
            schema:
                type: string
        PolicyApprovalStatusEnum:
            name: policyStatus
            in: query
            required: false
            schema:
                $ref: '#/components/schemas/PolicyApprovalStatusEnum'
        ResourceId:
            name: resourceId
            in: query
            description: The ID of the specific resource we want to parse by.
            required: false
            schema:
                type: string
        ResourceType:
            name: resourceType
            in: query
            description: The type of resource to search for.
            required: false
            schema:
                $ref: '#/components/schemas/ResourceType'
            example: apiResource
        SoftwareAuthorityClaimId:
            name: SoftwareAuthorityClaimId
            in: path
            description: The software statement's authority claim ID
            required: true
            schema:
                $ref: '#/components/schemas/SoftwareAuthorityClaimId'
        SoftwareStatementCertificateOrKeyType:
            name: SoftwareStatementCertificateOrKeyType
            in: path
            description: The certificate or key type that can be associated with a software statement
            required: true
            schema:
                $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyType'
        SoftwareStatementCertificationId:
            name: SoftwareStatementCertificationId
            in: path
            description: Software Statement certification Id
            required: true
            schema:
                $ref: '#/components/schemas/SoftwareStatementCertificationId'
        SoftwareStatementId:
            name: SoftwareStatementId
            in: path
            description: The software statement ID
            required: true
            schema:
                $ref: '#/components/schemas/SoftwareStatementId'
        TnCId:
            name: TnCId
            in: path
            description: Terms and Conditions unique identifier
            required: true
            schema:
                $ref: '#/components/schemas/TnCId'
        TypeID:
            name: TypeID
            in: path
            description: The UUID used to denote the certification type in question
            required: true
            schema:
                $ref: '#/components/schemas/TypeID'
        UserEmailId:
            name: UserEmailId
            in: path
            description: Email address of the super user
            required: true
            schema:
                $ref: '#/components/schemas/UserEmailId'
        VariantID:
            name: VariantID
            in: path
            description: The UUID used to denote the certification type variant in question
            required: true
            schema:
                $ref: '#/components/schemas/VariantID'
        clientName:
            name: name
            in: query
            description: 'Search the available clients based on a name match. Match is partial so a search for ''abc'' will return clients ''abc'',''abc1'', ''1abc'' and ''1abc2'' '
            required: false
            schema:
                type: string
            example: A Client
        clientRole:
            name: role
            in: query
            description: A role name, clients that have this role (whether active or inactive) will be returned. Clients with this role in an Inactive state will be returned but will not show the role in their roles array
            required: false
            schema:
                type: string
            example: RP-ROLE
        clientStatus:
            name: status
            in: query
            description: Return clients with a matching status. Available values are Active, Inactive and Suspended
            required: false
            schema:
                type: string
            example: Active
        endDate:
            name: endDate
            in: query
            description: Optional end of date range to constrain the set of results returned. This will restrict the clients returned to those whose metadata was most recently modified before the specified sendDate. The date must be supplied in RFC3339 format. If not supplied, the endDate used will be the current date and time.
            required: false
            schema:
                type: string
                format: date-time
            example: "2022-05-15T23:20:50Z"
        startDate:
            name: startDate
            in: query
            description: Optional start of date range to constrain the set of results returned. This will restrict the clients returned to those whose metadata was most recently modified after the specified startDate. The date must be supplied in RFC3339 format. If not supplied, the startDate used will be the epoch.
            required: false
            schema:
                type: string
                format: date-time
            example: "2022-05-12T23:20:50Z"
        x-customer-user-agent:
            name: x-customer-user-agent
            in: header
            description: Indicates the user-agent that the PSU is using.
            required: false
            schema:
                type: string
        x-fapi-auth-date:
            name: x-fapi-auth-date
            in: header
            description: "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC"
            required: false
            schema:
                pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$
                type: string
        x-fapi-customer-ip-address:
            name: x-fapi-customer-ip-address
            in: header
            description: The PSU's IP address if the PSU is currently logged in with the TPP.
            required: false
            schema:
                type: string
        x-fapi-interaction-id:
            name: x-fapi-interaction-id
            in: header
            description: An RFC4122 UID used as a correlation id.
            required: false
            schema:
                type: string
    requestBodies:
        AccessTokenRequest:
            content:
                application/x-www-form-urlencoded:
                    schema:
                        $ref: '#/components/schemas/AccessTokenRequest'
            required: true
        AccessTokenRevocationRequest:
            content:
                application/x-www-form-urlencoded:
                    schema:
                        $ref: '#/components/schemas/AccessTokenRevocationRequest'
            required: true
        AmendCertificateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AmendCertificateRequest'
            required: true
        ApiDiscoveryEndpointRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiDiscoveryEndpointRequest'
        ApiResourceRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiResourceRequest'
        AuthServerFederationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthServerFederationRequest'
        AuthorisationDomainRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainRequest'
            required: true
        AuthorisationDomainRoleRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainRoleRequest'
            required: true
        AuthorisationDomainSystemRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainSystemRequest'
            required: true
        AuthorisationDomainUserCreateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUserCreateRequest'
            required: true
        AuthorisationDomainUserTypeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUserTypeRequest'
            required: true
        AuthorisationDomainUserUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUserUpdateRequest'
        AuthorisationServerCertificationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServerCertificationRequest'
            required: true
        AuthorisationServerRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServerRequest'
            required: true
        AuthorityAuthorisationDomainRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorityAuthorisationDomainRequest'
            required: true
        AuthorityRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorityRequest'
            required: true
        CSROrKey:
            content:
                application/x-pem-file:
                    schema:
                        $ref: '#/components/schemas/CertificateOrKeyOrJWT'
            required: true
        CertificateOrCSROrJWS:
            content:
                application/jwt:
                    schema:
                        $ref: '#/components/schemas/CertificateOrKeyOrJWT'
                application/x-pem-file:
                    schema:
                        $ref: '#/components/schemas/CertificateOrKeyOrJWT'
            required: true
        CertificationManagerCreationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationManagerCreationRequest'
            required: true
        CertificationTypeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationTypeRequest'
        CertificationTypeVariantRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationTypeVariantRequest'
        ClientCreationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ClientCreationRequest'
            required: true
        ClientUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ClientUpdateRequest'
            required: true
        ContactRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ContactRequest'
            required: true
        DocusignPost:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DocusignPost'
            required: true
        EssSignRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/EssSignRequest'
        FederationMetadataPolicyRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FederationMetadataPolicyRequest'
            required: true
        FederationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FederationRequest'
            required: true
        FlagRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FlagRequest'
        FlagUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FlagUpdateRequest'
        IntrospectionRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/IntrospectionRequest'
            required: true
        MetadataRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MetadataRequest'
            required: true
        MetadataUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MetadataUpdateRequest'
            required: true
        OrgAdminUserCreateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrgAdminUserCreateRequest'
        Organisation:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationRequest'
            required: true
        OrganisationAuthorityClaimAuthorisationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisationRequest'
            required: true
        OrganisationAuthorityClaimRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityClaimRequest'
            required: true
        OrganisationAuthorityDomainClaimRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimRequest'
            required: true
        OrganisationAuthorityDomainClaimUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimUpdateRequest'
            required: true
        OrganisationConformanceTest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationConformanceTest'
            required: true
        OrganisationLabelRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationLabelRequest'
            required: true
        OrganisationUpdate:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationUpdateRequest'
            required: true
        SoftwareAuthorityClaimRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareAuthorityClaimRequest'
            required: true
        SoftwareAuthorityClaimUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareAuthorityClaimUpdateRequest'
            required: true
        SoftwareStatementCertificationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementCertificationRequest'
            required: true
        SoftwareStatementRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementRequest'
            required: true
        SoftwareStatementUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementUpdateRequest'
            required: true
        SuperUserCreationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SuperUserCreationRequest'
            required: true
        TermsAndConditionsCreateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TermsAndConditionsCreateRequest'
            required: true
        TermsAndConditionsUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TermsAndConditionsUpdateRequest'
            required: true
        UnlockSoftwareStatementRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlockSoftwareStatementRequest'
            required: true
        UserCreateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserCreateRequest'
            required: true
        UserUpdateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserUpdateRequest'
            required: true
    responses:
        AllWebhooksResponse:
            description: Update all webhooks response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/WebhookStatusResponses'
        ApiDiscoveryEndpoint:
            description: Authorisation server response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiDiscoveryEndpoint'
        ApiDiscoveryEndpointFamilyResponse:
            description: Api endpoint creation response with family complete flag
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiDiscoveryEndpointFamilyResponse'
        ApiDiscoveryEndpoints:
            description: Authorisation server response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiDiscoveryEndpoints'
        ApiResource:
            description: Authorisation server Api Resource response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiResource'
        ApiResources:
            description: Authorisation server Api Resources response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiResources'
        AuditHistoryPage:
            description: Audit history in paginated form
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuditHistoryPage'
        AuthServerFederation:
            description: Single federation object
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthServerFederation'
        AuthServerFederationsPage:
            description: Paged data of auth server federations config
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthServerFederationsPage'
        AuthorisationDomain:
            description: Data of an authorisation domain mapped to an authority
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomain'
        AuthorisationDomainRole:
            description: Role data
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainRole'
        AuthorisationDomainRolesPage:
            description: All data of authorisation domains mapped to an authority
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainRolesPage'
        AuthorisationDomainSystem:
            description: Authorisation domain user system
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainSystem'
        AuthorisationDomainSystemsPage:
            description: All authorisation domain user systems paginated
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainSystemsPage'
        AuthorisationDomainUser:
            description: User data belonging to an authorisation domain
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUser'
        AuthorisationDomainUserType:
            description: Authorisation domain user type
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUserType'
        AuthorisationDomainUserTypesPage:
            description: All authorisation domain user types paginated
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUserTypesPage'
        AuthorisationDomainUsersPage:
            description: All users belonging to an authorisation domain
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainUsersPage'
        AuthorisationDomainsPage:
            description: All data of authorisation domains mapped to an authority
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationDomainsPage'
        AuthorisationServer:
            description: Authorisation server response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServer'
        AuthorisationServerCertification:
            description: Authorisation Server certification for the given certification id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServerCertification'
        AuthorisationServerCertifications:
            description: Authorisation Server certification for the given certification id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServerCertifications'
        AuthorisationServerResponse:
            description: Authorisation server response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServerResponse'
        AuthorisationServers:
            description: All authorisation servers for the org
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorisationServers'
        AuthoritiesPage:
            description: |
                Reference data table for all authorities with their countries
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthoritiesPage'
        Authority:
            description: |
                Get a reference authority by Id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Authority'
        AuthorityAuthorisationDomain:
            description: Authority to domain mapping data
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorityAuthorisationDomain'
        AuthorityAuthorisationDomainsPage:
            description: All data of authorisation domains mapped to an authority
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorityAuthorisationDomainsPage'
        BadGateway:
            description: Bad Gateway
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        BadRequest:
            description: Bad Request
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/HttpResponseBody'
        CertificatesOrKey:
            description: A certificate object
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/jwk+json:
                    schema:
                        $ref: '#/components/schemas/CertificateOrKey'
        CertificatesOrKeys:
            description: All certificates for the org
            content:
                application/jwk-set+json:
                    schema:
                        $ref: '#/components/schemas/CertificatesOrKeys'
        CertificationManager:
            description: Certification manager data
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationManager'
        CertificationManagers:
            description: All certification managers
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationManagers'
        CertificationType:
            description: Certification Type
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationType'
        CertificationTypeVariant:
            description: Certification Type Variant
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationTypeVariant'
        CertificationTypeVariantPage:
            description: Certification Type Variant page
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationTypeVariantPage'
        CertificationTypes:
            description: Certification Type
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CertificationTypePage'
        ClientCreationResponse:
            description: |
                Creates an OAuth Client in the OpenID Server
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ClientCreationResponse'
        Conflict:
            description: Conflict
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        Contact:
            description: A contact object
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Contact'
        ContactsPage:
            description: Paged Contacts Snapshot
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ContactsPage'
        DashboardAuthServerFederationsPage:
            description: Paged data of auth server federations config
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DashboardAuthServerFederationsPage'
        EssPollAllResponse:
            description: External Signing Service Poll All response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/EssPollResponses'
        EssPollResponse:
            description: External Signing Service Poll response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/EssPollResponse'
        FederationItem:
            description: Details of the federation item
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FederationItem'
        FederationMetadataPolicyItem:
            description: Details of the federation metadata policy item
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FederationMetadataPolicyItem'
        FederationMetadataPolicyPage:
            description: Paged data of federation metadata policies
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FederationMetadataPolicyPage'
        FederationsPage:
            description: Paged data of federations
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FederationsPage'
        Flag:
            description: Response with for a single flag
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Flag'
        FlagsPage:
            description: Paginated response with all flags
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FlagsPage'
        Forbidden:
            description: Forbidden
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        InternalServerError:
            description: Internal Server Error
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        Introspection:
            description: |
                metadata for token
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Introspection'
        Metadata:
            description: Single metadata object
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MetadataResponse'
        MetadataList:
            description: List of all metadata associated with an object
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MetadataListResponse'
        NoContent:
            description: No Content
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        NotAcceptable:
            description: Not Acceptable
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        NotFound:
            description: Not found
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/HttpResponseBody'
        NotImplemented:
            description: Request is not yet implemented
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/HttpResponseBody'
        Ok:
            description: No Content
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        OpBadRequest:
            description: Bad Request
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OpErrorResponseBody'
        OrgTermsAndConditionsDetail:
            description: Details of the TnC and external signing service
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrgTermsAndConditionsDetail'
        OrgTermsAndConditionsPage:
            description: Org TnCs history
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrgTermsAndConditionsPage'
        Organisation:
            description: |
                Full details of the organisation
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Organisation'
        OrganisationAdminUser:
            description: Admin user details
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAdminUser'
        OrganisationAdminUsers:
            description: All admin users for this org
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAdminUsers'
        OrganisationAuthorityClaim:
            description: Authority claim for the given Id
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityClaim'
        OrganisationAuthorityClaimAuthorisation:
            description: Authorisations response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'
        OrganisationAuthorityClaimAuthorisations:
            description: Authorisations response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisations'
        OrganisationAuthorityClaims:
            description: All authority claims for the organisation
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityClaims'
        OrganisationAuthorityDomainClaim:
            description: All authority to domain mappings data
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
        OrganisationAuthorityDomainClaimsPage:
            description: All data of an organisation's authority domain claims
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimsPage'
        OrganisationConformanceTestResult:
            description: |
                Result of the conformance suite test run
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationConformanceTestResult'
        OrganisationLabel:
            description: |
                Get a reference organisation label by Id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationLabel'
        OrganisationLabelsPage:
            description: |
                Reference data table for all organisation labels
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationLabelsPage'
        OrganisationResponse:
            description: |
                Full details of the organisation including warnings on a create or update operation
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationResponse'
        OrganisationSnapshot:
            description: Snapshot data of the organisation
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationSnapshot'
        OrganisationWithTnc:
            description: Full details of the organisation including TnC information
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationWithTnc'
        OrganisationsExportOpenData:
            description: Export the open-data for all the organisations
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationsExportOpenData'
        OrganisationsPage:
            description: All organisations
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationsPage'
        OrganisationsRoles:
            description: Export the roles for all the organisations
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationsRoles'
        OrganisationsSnapshot:
            description: Snapshot data of all the organisations
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationsSnapshot'
        RegisteredClient:
            description: All registered clients
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RegisteredClient'
        RegisteredClients:
            description: All registered clients
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RegisteredClients'
        RegisteredClientsPage:
            description: All clients
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RegisteredClientsPage'
        RetrieveTokenResponse:
            description: |
                Access token response
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AccessTokenResponse'
        SoftwareAuthorityClaim:
            description: Authority claim for the given Id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareAuthorityClaim'
        SoftwareAuthorityClaims:
            description: Authority claim for the given Id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareAuthorityClaims'
        SoftwareStatement:
            description: Get the software statements with the given id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatement'
        SoftwareStatementAssertion:
            description: OK
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementAssertion'
                application/jwt:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementAssertion'
        SoftwareStatementCertification:
            description: Software Statement certification for the given certification id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementCertification'
        SoftwareStatementCertifications:
            description: Software Statement certification for the given certification id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementCertifications'
        SoftwareStatementResponse:
            description: Get the software statements with the given id
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatementResponse'
        SoftwareStatements:
            description: All software statements for the org
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SoftwareStatements'
        SuperUser:
            description: Super user data
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SuperUser'
        SuperUsersPage:
            description: All super users
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SuperUsersPage'
        TermsAndConditionsItem:
            description: Details of the TnC item
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TermsAndConditionsItem'
        TermsAndConditionsPage:
            description: Paged data of TnC items
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TermsAndConditionsPage'
        TooManyRequests:
            description: Too many requests, maximum capacity reached. Requests are now throttled.
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        Unauthorized:
            description: Unauthorized
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        UpstreamTimeout:
            description: Upstream timeout, insufficient capacity to serve request. More capacity being brought online. Please try again.
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
        UserDetail:
            description: Details of the user
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserDetail'
        UserOPInfo:
            description: User information from the OpenId Provider
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserOPInfo'
        UserTermsAndConditionsPage:
            description: User TnCs history
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserTermsAndConditionsPage'
        WellKnown:
            description: endpoint discovery for well known endpoint
            headers:
                x-fapi-interaction-id:
                    schema:
                        $ref: '#/components/schemas/xFapiInteractionId'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/WellKnown'
